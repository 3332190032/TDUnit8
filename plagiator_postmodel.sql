-- phpMyAdmin SQL Dump
-- version 5.0.2
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Apr 14, 2022 at 07:01 PM
-- Server version: 10.4.14-MariaDB
-- PHP Version: 7.2.33

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `websitelab`
--

-- --------------------------------------------------------

--
-- Table structure for table `plagiator_postmodel`
--

CREATE TABLE `plagiator_postmodel` (
  `id` int(11) NOT NULL,
  `nim` varchar(100) NOT NULL,
  `isi_laprak` longtext NOT NULL,
  `nama` varchar(100) NOT NULL,
  `unit` varchar(100) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `plagiator_postmodel`
--

INSERT INTO `plagiator_postmodel` (`id`, `nim`, `isi_laprak`, `nama`, `unit`) VALUES
(541, '3332200066', 'Pada praktikum kali ini didapatkan analisis percobaan pada multiplexer,\r\ndemultiplexer, Decoder, dan Encoder. Dan berikut ini adalah analisis percobaan\r\npada praktikum kali ini.\r\n3.2.1 Multiplexer\r\n\r\nMultiplexer merupkan rangkaian logika kombinasi yang dirancang\r\nkhusus untuk mengalihkan salah satu dari beberapa saluran input ke satu\r\nsaluran output. Jalur input yang terpilih menentukan input mana yang\r\nterhubung ke output.\r\n\r\nTabel 3.4 percobaan Multiplexer\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\n\r\n9\r\n\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nBerikut ini adalah contoh dari rangkain Multiplexer :\r\n\r\nGambar 3.4 Rangkaian Multiplexer\r\n\r\nDengan menggunakan tabel dan data rangkaian di atas, kita dapat\r\nmenganalisis bahwa multiplexer memiliki beberapa spesifikasi: A0, A1,\r\nE`, I0, I1, I2, I3, Y. A0 dan A1 disebut pin kontrol atau selektor. Anda\r\ndapat menentukan keluaran saluran mana yang aktif. Maka I0, I1, I2,\r\ndan I3 adalah inputnya, kemudian E (valid). Jika E adalah 0, proses\r\nberjalan pada baris aktif atau aktif, tetapi jika E adalah 1 atau lebih besar,\r\nmultiplexer tidak mulai memproses data. Nilai lain (pemilih dan input)\r\ntidak akan peduli. Catatan) Atau, selama nilai Aktifkan adalah 1 atau\r\ntinggi, itu akan terus mati. Oleh karena itu, aktifkan tidak harus benar\r\nuntuk mengubah nilai menjadi 0 dan memulai pemrosesan data di baris\r\naktif. Awalnya nilai A1 dan A2 adalah 0 dan 0, kemudian nilai input I0\r\nadalah output ke output Y. Dilihat dari tabelnya, nilai selektor ini\r\nmemiliki pola yang sama dengan perhitungan dari 0 sampai 3, namun\r\ndalam percobaan ini adalah bilangan biner. Dari dua nilai pemilih ini,\r\nnilai input itu sendiri diwakili. Di sini, nilai input adalah nilai output dari\r\nY. Oleh karena itu, jika nilai kedua selektor adalah 00, nilai ini mewakili\r\nnilai I0 di mana output Y dll adalah output. Nilai keluaran Y selalu\r\n\r\n10\r\n\r\nbergantung pada nilai I0. Dari nilai selektor yang mengolah data tentang\r\nnilai input menjadi output dapat dihitung dengan menjumlahkan nilai\r\nkeluaran yang dihasilkan oleh kedua selektor tersebut. Dari\r\npenjumlahan, nilai penjumlahan 4 dimulai dari 0 sampai 3. Dari dua\r\nselektor yang dapat menginterpretasikan 2 bit. Ini sesuai dengan total\r\ndaya yang diberikan. Kemudian Anda akan menemukan bahwa ini\r\nadalah cara mudah untuk melihat berapa banyak nilai yang dapat Anda\r\nhapus dari pemilih.\r\n3.2.2 Demultiplexer\r\n\r\nDemultiplexer atau De-Mux mempunyai satu jalur input dan banyak\r\njalur output dan pada jalur input lah yang akan dihubungkan pada\r\nMultiplexer.\r\n\r\nTabel 3.5 Percobaan Demultiplexer\r\n\r\nE0\r\n̅̅̅ E1\r\n̅̅̅ E2 A0 A1 A2 O0 O1 O2 O3 O4 O5 O6 O7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nBerikut ini adalah contoh percobaan dari rangkaian Demultiplexer :\r\n\r\n11\r\n\r\nGambar 3.5 Rangkain Demultiplexer\r\nDengan menggunakan tabel dan data rangkaian di atas,\r\ndemultiplexer memiliki beberapa notasi: A0, A1, A2, E0`, E1`, E2,\r\nO0, O1, O2, O3, O4, O5, O6 dan O¬7. Nilai dari E0 hingga E2\r\nadalah nilai pelepasan dan memiliki fungsi yang sama seperti pada\r\npercobaan sebelumnya, yaitu proses memutuskan apakah akan\r\nmelakukannya. Ada perbedaan di sirkuit ini. Artinya, pada E0` dan\r\nE1`, nilai 0 adalah baris aktif atau aktif dan operasi dilakukan.\r\nNamun jika 1 atau lebih tidak akan diproses. E2 adalah baris aktif,\r\njika 1, proses sedang berjalan dan 0 tidak diproses. Nilai E0` dan\r\nE1` harus 0 dan E2 harus 1 agar proses dapat berjalan. Nilai output\r\nO ditentukan oleh selektor atau input A0, A¬1, dan A2 sama dengan\r\n0, 0, dan 0. Tidak ada nilai 1 dan output lainnya adalah 0. Untuk\r\nnilai keluaran, keputusan ini dibuat. Disebabkan oleh nilai 1 antara\r\nA dan angka 2n. Oleh karena itu, jika nilai untuk A0, A¬1, dan A2\r\nadalah 0, 0, 0, maka tidak ada nilai untuk 1. Output yang sesuai\r\ndengan 1 sesuai dengan output O0, dan sis sesuai dengan 0.\r\nMisalnya, pada, jika A0, A¬1, dan A2 sama dengan 0, 0, dan 1,\r\nmaka nilai output O4 adalah 1, dan input lainnya adalah 0. Oleh\r\nkarena itu, jika nilai A0, A¬1, dan A2 sama dengan 0, 0, dan 1, maka\r\nbilangan tersebut adalah 0 + 0 +22 = 4, maka nilai keluaran (1)\r\nadalah O4. Sisanya akan menjadi 0. Misalnya, jika nilai A0, A1, dan\r\nA2 adalah 0, 1, dan 1, maka nilai keluaran untuk O6 adalah 1, dan\r\nkeluaran lainnya adalah 0. Nilai keluaran ditentukan oleh 1 antara\r\nnilai A dan angka 2^n. Oleh karena itu, jika nilai A0, A1, dan A2\r\nsama dengan 0,1,1 maka bilangan tersebut adalah 0 + 2 ^ 1 + 2 ^ 2\r\n= 6, maka keluaran yang sesuai dengan 1 adalah O6 dan sisanya\r\nadalah 0. Misalnya, jika nilai A0, A1, dan A2 adalah 1, 1, dan 1,\r\n\r\n12\r\n\r\nnilai keluaran O7 adalah 1, dan keluaran lainnya adalah 0. Penentuan\r\nnilai keluaran ini disebabkan oleh dengan adanya nilai 1 di\r\nantaranya. Nilai A dan angka 2n. Jadi jika nilai A0, A1, dan A2\r\nadalah 1, 1, dan 1, angkanya adalah 20 + 21 + 22 = 7, nilai output\r\ndari nilai 1 adalah O7, dan sisanya adalah 0.\r\n\r\n3.2.3 Decoder BCD ke 7 Segment\r\n\r\nPada 7-segmen dapat menampilkan angka desimal dan karakter\r\ntertentu dengan menggabungkan pengaturan LED aktif atau tidak aktif\r\ndari 7-segmen. Dekoder BCD 7-segmen digunakan untuk menerima\r\ninput BCD 4-bit dan memberikan output yang menarik arus melalui\r\nsegmen dan menampilkan angka desimal.\r\n\r\nTabel 3.6 percobaan BCD 7 Segment\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n\r\n0 X X X X X\r\n\r\n1 0 X X X X\r\n\r\n1 1 0 0 0 0\r\n\r\n1 1 0 0 0 1\r\n\r\n1 1 0 0 1 0\r\n\r\n13\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n0\r\n1\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n1\r\n0\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n1\r\n0\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n1\r\n1\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n1\r\n1\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n0\r\n0\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n0\r\n0\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n0\r\n1\r\n0\r\n\r\n14\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1\r\n\r\nBerikut ini adalah contoh dari percobaan rangkaian BCD 7 Segment\r\n\r\nGambar 3.6 Rangkaian BCD 7 segment\r\n\r\n15\r\n\r\nBerdasarkan data dari tabel dan sirkuit di atas, tujuh studi BCD\r\nsegmen, yaitu, lt, otomatis, D3, D2, D1, D0, dan bentuk tampilan\r\ndianalisis untuk memiliki beberapa notasi. Jika LT (LAMP METER)\r\nberharga, prosesnya dijalankan, tetapi prosesnya tidak dijalankan jika\r\nnilainya 0. Sebuah LT (Lamp Test) memiliki fungsi sebagai gerbang,\r\nyang menyediakan input nilase ke D3, D2, D1, D0. Fungsi buta\r\nkemudian memiliki kemampuan untuk menghidupkan 7 respons\r\nsegmen. Dan bentuk tampilan adalah angka desimal yang dapat\r\nmenentukan nilai dari D3, D2, D1, D0. Jika LT (ramp test) adalah 1 dan\r\nblanking adalah 0, maka angka yang dibentuk oleh 7 segmen adalah 0,\r\natau jika outputnya 0, maka D3D0 dalam keadaan tidak peduli dan\r\nhasilnya adalah 7 terlepas dari input Segmen tetap. 0. Jika nilai LT\r\n(ramp test) adalah 1, nilai blanking adalah 1, dan semua input ke D3D0\r\nadalah 0, maka angka yang terbentuk atau ditampilkan pada 7-segment\r\nadalah 1 atau outputnya adalah 1. .. Menunjukkan bahwa LT dan\r\nblanking menggunakan Active High untuk mengaktifkan program.\r\nKemudian, jika nilai inputnya adalah 0 0 1 0, output yang terbentuk\r\natau ditampilkan pada 7-segmen akan menjadi angka 2. Jika nilai D3,\r\nD2, D1, dan D0 adalah 100 1, maka bilangan yang dibentuk oleh 7 ruas\r\ntersebut merupakan simbol yang memiliki kemampuan untuk\r\nmengartikan bilangan 10. Jadi 7 segmen ini adalah angka, bukan angka\r\n10. c, ini dalam bentuk berikut: Hal ini karena jumlah maksimum\r\nkapasitas 7-segmen adalah 9.\r\n\r\n16\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nPada percobaan kali ini praktikan dapat mengambil kesimpulan seperti\r\nberikut ini :\r\n1. Multiplexer merupakan rangkaian logika kombinasi yang dirancang khusus\r\nuntuk mengalihkan salah satu dari beberapa saluran input ke satu saluran\r\noutput. Jalur input yang praktikan pilih menentukan input mana yang\r\nterhubung ke output. Demultiplexer hanya memiliki satu jalur input dan\r\nbanyak jalur output, tetapi jalur input ini terhubung ke multiplexer.\r\n2. Multiplexer dapat digunakan untuk meningkatkan efisiensi sistem\r\nkomunikasi dan mendukung transmisi sistem komputer satelit, memori\r\nkomputer, dan sinyal radio. Demultiplexer dapat digunakan dalam sistem\r\nkomunikasi untuk mengubah sinyal keluaran multiplekser dari penerima\r\ndata, tetapi mengubah ALU (unit logika aritmatika) dan konverter serial ke\r\nparalel ke format aslinya.\r\n3. Praktikan dapat mengenali beberapa set Decoder dan Encoder. Decoder\r\nadalah rangkaian logika yang berfungsi mengubah kode yang tidak dikenal\r\nmenjadi kode yang familiar bagi manusia, dan Encoder memiliki fungsi\r\nuntuk mengubah kode yang tidak dikenal menjadi kode yang tidak dikenal,\r\nyaitu rangkaian logika.\r\n4. Encoder dipakai menjadi rangkaian buat mengkodekan data input sebagai\r\ndata sapta menggunakan format eksklusif & Decoder dipakai buat bisa\r\nmengembalikan proses encoding sebagai akibatnya kita bisa melihat atau\r\nmendapat liputan aslinya. Pada Decoder ini bisa difungsikan buat\r\nmemudahkan kita pada menyalakan 7 segment.', 'KHAIRUNNAS HIDAYATULLAH', 'UNIT 1'),
(542, '3332200089', 'Multiplexer adalah rangkaian logika rendah aktif yang menerima beberapa input data\r\ndigital dan selalu memilih dan mengeluarkan salah satu input tersebut. Data input\r\ndipilih oleh pemilih baris, yang juga merupakan input dari multiplexer. Diagram blok\r\nmultiplekser ditampilkan. Jumlah input ke multiplexer tergantung pada jumlah jalur\r\npemilih pada Persamaan 2n, jadi jika jalur pemilih adalah 2, jumlah input akan menjadi\r\n4. Peran pemilih liner adalah untuk memilih data. Data ini melewati urutan data biner.\r\nMisalnya pada gambar di atas nilai A0 dan A1 adalah 1 yang artinya berada pada urutan\r\n3 (dari 0). Oleh karena itu, output Y akan menjadi 1, yang merupakan nilai yang sama\r\ndengan input Q3. Agar lebih jelas, jika A0 dan A1 bernilai 0, berarti data yang dipilih\r\nadalah data orde ke-0, yaitu Q0 seperti terlihat pada gambar di bawah ini.\r\n\r\n8\r\n\r\nGambar 3.2 Multiplexer\r\n\r\nJika A0 dan A1 = 0, berarti data yang dipilih berurut 0, yaitu Q0. Oleh karena itu, jika Q0\r\nadalah 1, output Y akan bernilai sama dengan Q0, yaitu 1.\r\n\r\n3.2.2 Demultiplexer\r\n\r\nDemultiplexer adalah IC yang mendistribusikan output ke beberapa output data yang\r\nditetapkan oleh selektor A0A2 dan dapat menggunakan E2 sebagai input. IC yang akan\r\ndigunakan harus memiliki 0 untuk E1 dan E0. Prinsip operasi demultiplexer adalah untuk\r\nmengeluarkan data sesuai dengan input, dan posisi output diatur oleh garis pilihan. Pada\r\npercobaan ini sampel diambil pada saat A0 = 1, A1 = 1, dan A2 = 1. Artinya jika data\r\nterdistribusi pada urutan data ke-7 (dimulai dari 0) dan nilai E2 adalah 1, maka Q7 juga\r\nakan memiliki nilai 1 seperti terlihat pada gambar di bawah ini.\r\n\r\n9\r\n\r\nGambar 3.3 Demultiplexer\r\n\r\nKemudian buat memperjelas dicoba lagi waktu A0 = 0,A1= 0 & A2 = 0 ini\r\nmengindikasikan bahwa input akan didistribusikan pada hasil yg berada dalam urutan ke\r\n0 yaitu Q0 sebagai akibatnya waktu E2 bernilai 1 maka hasil Q0 akan bernilai 1 misalnya\r\nyg terjadi dalam gambar dibawah ini.\r\n\r\n10\r\n\r\nGambar 3.4 Demultiplexer\r\n\r\n3.2.3 BCD ke 7 Segmen\r\n\r\nBCD segmen ke-7 adalah IC untuk mengunci input ke biner yang tidak diketahui. Setelah\r\ntiba, itu akan dikonversi ke format input asli. Pada BCD ke-7, segmen biner yang semula\r\n4 bit diubah menjadi 7 bit sesuai dengan namanya. LED ini direpresentasikan sebagai\r\nmelalui f, seperti yang ditunjukkan pada gambar berikut.\r\n\r\nGambar 3.5 LED 7 Segmen\r\n\r\nSelanjutnya, untuk menganalisis mengapa keadaan tidak valid terjadi pada 7-segmen,\r\nkita perlu mengetahui tabel kebenaran BCD untuk 7-segmen. Status tidak valid dari BCD\r\nke segmen 7 dapat diartikan sebagai status LED saat melewati 9. Kondisi ini terjadi\r\nkarena 7 segmen hanya dapat dikonversi menjadi angka hingga 9. Ini karena LED pada\r\ndasarnya adalah satu digit, hanya 09 (mod 10).\r\nBerikut adalah Gambar truth tabel dari BCD to 7 Segment :\r\n\r\n11\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk Display\r\n0 X X X X X 8\r\n1 0 X X X X\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1\r\n\r\nGambar 3.6 BCD to 7 Segment\r\n\r\nSeperti yang Anda lihat pada gambar di atas, jika nilai desimal adalah 10, a-g dibentuk\r\noleh.\r\n\r\n1 1 1 0 0 1 0\r\n\r\nPada segmen 7, LED dibentuk berdasarkan angka 0, sehingga LED yang dinyalakan\r\nadalah LED d, e, dan g yang berbentuk seperti huruf c. Kedua, jika desimalnya adalah 15,\r\nLED akan mati. Ini karena jika bilangan desimalnya adalah 15, maka bilangan biner\r\ntotalnya adalah\r\n\r\n1 1 1 1 1 1 1\r\n\r\nOleh karena itu, LED yang menyala berdasarkan angka 0, sehingga LED mati. Ini\r\nberarti Anda dapat menggunakan output dari tabel batang a-g untuk menentukan\r\nstatus tidak valid mana yang telah terjadi, seperti yang ditunjukkan pada gambar\r\ndi atas.\r\n\r\n12\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\nPada praktikum kali ini dapat kita tarik kesimpulan sebagai berikut:\r\n1. Pemanfaatan multiplexer dan demultiplexer salah satunya sebagi\r\njam digital\r\n2. Rangkaian decoder dan encoder secara sederhananya adalah\r\nrangkaian yang berfungsi untuk menerjemahkan bahasa\r\n3. Pemanfaatan decoder dan encoder untuk memudahkan kita\r\ndalam mengaplikasikan biner', 'Muhammad Grahito Ramadhan', 'UNIT 1'),
(543, '3332210019', 'Multiplexer adalah rangkaian logika yang menerima beberapa input data\r\ndigital dan menyeleksi salah satu dari input tersebut pada saat tertentu, untuk\r\ndikeluarkan pada sisi output. Penyeleksian data input akan dilakukan oleh\r\nselector line yang juga bagian dari input multiplexer itu sendiri, pada\r\npercobaan pertama ini dapat dilihat pada tabel hasil percobaan dan dapat\r\ndianalisis bahwa rangkaian ini merupakan active low yang dimana Ketika\r\ninput E’ adalah 1 maka rangkaian tidak akan menyala atau don’t care jadi\r\nhasil output Y pada tabel hasil percobaan akan selalu 0 dan untuk\r\nmengaktifkannya yaitu denga menginputkan nilai 0 pada E’, untuk\r\npercobaan bagian kedua dimana Ketika selector A0 =0 dan A1 =0 yang\r\nberarti nilai biner nya yaitu 0 maka output yang diambil dari input I0, karna\r\nI0 bernilai 0 maka outpunya juga samadengan 0, untuk percoban ketiga\r\ndimana kedua selector sama saja seperti sebelum nya yaitu A0 =0 dan A1\r\n=0 maka output nya diambil dari I0 sehingga hasil outputnya adalah 1, jadi\r\nuntuk mendapatkan niali output pada rangkaian Multiplexer ini yaitu\r\ndengan menghitung nilai selectornya yaitu A0 dan A1 dengan mengubahnya\r\nmenjadi bilangan desimal untuk menetukan nilai I berapa yang akan jadi\r\noutput nya. Untuk rangkaian nya sebagai berikut:\r\n\r\nGambar 7. 6 rangkaian Multiplexer\r\n\r\n2. Demultiplexer\r\nPada percobaan Demultiplexer didapatkan hasil pada tabel percobaan\r\nberikut:\r\n\r\nE\r\n0\r\nE\r\n1\r\nE\r\n2\r\nA0 A1 A2\r\nO\r\n0\r\nO\r\n1\r\nO\r\n2\r\nO\r\n3\r\nO\r\n4\r\nO\r\n5\r\nO\r\n6\r\nO\r\n7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nDemultiplexer merupakan kebalikan dari Multiplexer yang dimana jalur\r\ninput nya terdiru dari satu tetapi output nya terdiri dari beberapa jalur. Pada\r\npercobaan ini dapat dianalisi untuk mendapatkan hasil outputnya yaitu\r\ndengan cara meng AND kan terlebih dahulu E0,E1 dan E2 sehingga\r\nnantinya hasil dari AND nya menjadi inputan masuk dan untuk menentukan\r\ndimana inputan I nya masuk sama seperti rangkaian Multiplexer dimana\r\ndengan cara mengubah A0,A1 dan A2 menjadi bilangan decimal, dapat\r\ndilihat pada tabel hasil percobaan diman Ketika nilai A0,A1 dan A2 adalah\r\n000 maka output 1 nya diberikan O0 sehingga menjadi 1000000 dan pada\r\npercobaan kedua dapat dilihat Ketika A0,A1 dan A2 bernilai 1000 yang\r\nberarti nilai decimal nya adalah 4 maka nantinya output dari percobaan\r\nkedua adalah 0001000, jadi pada percobaan ini untuk menentukan niali\r\noutputnya yaitu dengan menetukan nilai E’ dengan menggunakan gerbang\r\nlogika AND dan selanjutnya mengubah bilangan biner dari A0,A1 dan A2\r\nmenjadi desimal sehingga didapatkan nilai untuk menentukan outputnya.\r\nUntuk gambar rangkaian Demultiplexer sebagai berikut:\r\n\r\nGambar 7. 7 rangkaian Demultiplexer\r\n\r\n3. Dekoder BCD ke 7 Segmen\r\nPada percobaan Dekoder BCD ke 7 Segmen dipatkan hasil percobaan\r\npada tabel berikut ini:\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X gelap\r\n1 0 X X X X gelap\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1 MATI\r\n\r\nPada percobaan BCD ke 7 Segmen dapat dianalisis untuk mendapatkan nilai\r\noutpunya yaitu dengan mengubah input D0,D1,D2 dan D3 menjadi bilangan\r\ndecimal yang nantinya akan menjadi output nya, dapat dilihat pada tabel\r\nkebenaran diatas dimana ketika diberi input biner 0000 maka 7 segment\r\nakan menampilkan nilai 0, ketika diberi input D0,D1,D2 dan D3 0001 maka\r\nakan menampilkan nilai 1, Ketika diberi input D0,D1,D2 dan D3 nya 0010\r\nmaka akan menampilkan nilai 2, Ketika diberi input 0011 maka akan\r\nmenampilkan nilai 3, Ketika diberi input 0100 maka akan menampilkan\r\nnilai 4, Ketika diberi input 0101 maka akan menampilkan nilai 5, Ketika\r\ndiberi input 0110 maka akan menampilkan nilai 6. Ketika diberi input 0111\r\nmaka akan menampilkan nilai 7, Ketika diberi input 1000 maka akan\r\nmenampilkan nilai 8, ketika diberi input 1001 maka akan menampilkan nilai\r\n9, dan Ketika diber input biner 1010 maka akan menampilkan nilai C karena\r\npada rangkaian BCD ke 7 Segmen angka tertingginya adalah 9 sehingga\r\nuntuk angka Seterus nya nilai outputnya menjadi kode-kode yang sulit\r\ndipahami. Untuk rangkian nya yaitu sebagai berikut:\r\n\r\nGambar 7. 8 Dekoder BCD ke 7 Segmen\r\n\r\n.\r\n\r\nBAB IV\r\nKESIMPULAN\r\n\r\n4.1 Kesimpulan\r\nPada percobaab mengenai MSI (MEDIUM SCALE INTEGRATION) dapat\r\nditarik kesimpulan:\r\n1. Multiplexer sering disebut sebagai Mux merupakan sebuah komponen\r\nelektronika yang terdiri dari susunan logika yang memiliki beberapa jalur\r\ninput, dan kemudian memindahkannya hanya pada sebuah jalur output\r\nsaja.\r\nDemultiplexer adalah sebuah komponen elektronika yang terdiri dari\r\nsusunan logika yang hanya memiliki satu jalur input tetapi outputnya\r\nterdiri dari beberapa jalur atau outputnya lebih dari satu.\r\n\r\n2. Multiplexer dan Demultiplexer dapat berfungsi atau diterapkan pada\r\npenggunaan sisitem komunukasi, jaringan telpon dan lain sebagai nya.\r\n3. Decoder Rangakaina yang mengubah biner menjadi output lain contoh\r\nnya seperti decimal dan laian -laian contoh penerapan nya seperti pada\r\nrangkaian BCD ke 7 Segmen\r\nEcoder mengubah bentuk decimal menjadi biner contoh penerapan nya\r\nyaitu pada keyboard,remot dan lain sebagainya\r\n4. decoder dapat bermaanfaat untuk membantu manusia dalam memeahami\r\nmengenai Bahasa computer dan begitu pula encoder dapat membuat\r\ncomputer atau mesin memeahami Bahasa yang dipahami manusia', 'TUBAGUS LINGGA QOLBUWASI', 'UNIT 1'),
(544, '3332190002', 'pada percobaan pertama menggunakan multiplexer. Yang mana, Multiplexer\r\nadalah rangkaian kombinasional yang memiliki 2n jalur input dan satu jalur output.\r\n\r\nSederhananya, multiplexer adalah rangkaian kombinasional multi-input dan single-\r\noutput. Informasi biner diterima dari jalur input dan diarahkan ke jalur output.\r\n\r\nBerdasarkan nilai garis seleksi, salah satu input data ini akan dihubungkan ke\r\noutput. Tidak seperti encoder dan decoder, ada n jalur seleksi dan 2n jalur input.\r\nJadi, ada total 2N kemungkinan kombinasi input. Multiplexer juga diperlakukan\r\nsebagai Mux.\r\n\r\nTabel 3.1 Multiplekser\r\n\r\nA0 A1 E I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n\r\n6\r\n\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n-Ketika A0=A1=1 maka output Y akan menampilkan nilai yang ditampilkan pada\r\ninput data I3 hal ini dapat dilihat pada data table nomor 8 dan 9 Dimana\r\n11merupakan bentuk decimal dari 3\r\n- Ketika A0=A1=0 maka output Y akan menampilkan nilai yang ditampilkan pada\r\ninput data I0 hal ini dapat dilihat pada data table nomor 2 dan 3 Dimana 00\r\nmerupakan bentuk decimal dari 0\r\n- Ketika A0=0 dan A1=1 maka output Y akan menampilkan nilai yang ditampilkan\r\npada input data I2 hal ini dapat dilihat pada data table nomor 4 dan 5. Dimana 01\r\nmerupakan bentuk decimal dari 2\r\n- Ketika A0=1 dan A1=0 maka output Y akan menampilkan nilai yang ditampilkan\r\npada input data I2 hal ini dapat dilihat pada data table nomor 6 dan 7 Dimana 10\r\nmerupakan bentuk decimal dari 1\r\n\r\nGambar 3.1 Multiplekser\r\n\r\n3.2.2 Demultiplexer\r\nDemultiplexer merupakan kebalikan dari Multiplexer. Demultiplexer\r\nmengambil satu jalur data input tunggal dan kemudian mengalihkannya ke salah\r\nsatu dari sejumlah jalur output individu satu per satu. Demultiplexer mengubah\r\nsinyal data serial pada input menjadi data paralel pada jalur outputnya. Fungsi\r\nDemultiplexer adalah untuk mengalihkan satu jalur input data umum ke salah satu\r\ndari 4 jalur data output A ke D dalam contoh kita di atas. Seperti multiplexer,\r\n\r\n7\r\n\r\nsakelar solid state individual dipilih oleh kode alamat input biner pada pin pilih.\r\n\r\nTabel 1.2 Demultiplekser\r\n\r\nE 0 E 1 E2 A0 A1 A2 O0 O 1 O 2 O3 O 4 O 5 O 6 O\r\n7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n3.2.3 Decoder BCD ke 7 Segmen\r\nPada percobaan ini menggunakan Dekoder BCD ke 7 segment. Yang\r\nmana, Dekoder BCD ke tujuh segmen adalah rangkaian yang digunakan untuk\r\nmengubah input BCD menjadi bentuk yang sesuai untuk tampilan. Ini memiliki\r\nempat jalur input (A, B, C dan D) dan 7 jalur output (a, b, c, d, e, f dan g) seperti\r\nyang ditunjukkan pada tabel dibawah.\r\n\r\nTabel 3.3 Decoder BCD ke 7 Segmen\r\n\r\nLT Blankin\r\ng\r\nD3 D2 D1 D0 Bentuk\r\ndisplay\r\n0 X X X X X Tidak ada\r\n1 0 X X X X Tidak ada\r\n1 1 0 0 0 0 0\r\n\r\n8\r\n\r\nLT Blankin\r\ng\r\nD3 D2 D1 D0 Bentuk\r\ndisplay\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 C\r\n1 1 1 0 1 1 ]\r\n1 1 1 1 0 0 U\r\n1 1 1 1 0 1 C\r\n1 1 1 1 1 0 t\r\n1 1 1 1 1 1 Tidak ada\r\nMempertimbangkan jenis susunan katoda umum, tabel kebenaran\r\nuntuk decoder dapat diberikan seperti pada Tabel diatas. Tabel ini\r\nmenunjukkan segmen yang akan didorong tinggi untuk mendapatkan\r\nangka desimal tertentu pada output dari tampilan tujuh segmen. Namun,\r\nperlu dicatat bahwa dalam kasus jenis anoda umum, satu-satunya\r\nperubahan adalah untuk menukar satu dan nol di atas.\r\n\r\n9\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n1. Multiplexer adalah rangkaian yang menerima banyak input tetapi hanya\r\nmemberikan satu output.\r\n2. Demultiplexer berfungsi persis dengan cara kebalikan dari multiplexer\r\n3. Dekoder BCD ke tujuh segmen adalah rangkaian yang digunakan untuk\r\nmengubah input BCD menjadi bentuk yang sesuai untuk tampilan.', 'ESTI DWIYANTI', 'UNIT 1'),
(545, '3332210060', 'Berdasarkan tabel 3.1 Multiplekser dapat diketahui bahwa multiplekser\r\npada percobaan diatas menggunakan active low atau aktif saat enablenya bernilai\r\n0. Saat enablenya bernilai 1 atau dalam keadaan high maka multiplekser tidak\r\nakan memulai pengolahan datanya atau akan terus mati (non active) selama\r\nenablenya bernilai 1 atau dalam keadaan high. Maka dari itu enable harus di NOT\r\nkan agar nilainya berubah menjadi 0 dan bisa memulai pengolahan datanya yang\r\nmenggunakan active low. Pada saat A0, A1, dan enable bernilai 0, 0, dan 0. Maka\r\nnilai output Y akan mengikuti nilai inputan I0, tidak peduli dengan nilai inputan\r\nlainnya seperti I1, I2, dan I3. Jadi misalkan I0 nya bernilai 1 maka output Y nya\r\njuga akan bernilai 1 dan misalkan I0 nya bernilai 0 maka output Y nya juga kan\r\nbernilai 0. Itu disebabkan nilai 0, 0, dan 0 pada A0, A1, dan enable adalah selector\r\nyang berpatok pada nilai kolom I0. Pada saat A0, A1, dan enable bernilai 0, 1, dan\r\n0. Maka nilai output Y akan mengikuti nilai inputan I2, tidak peduli dengan nilai\r\ninputan lainnya seperti I0, I1, dan I3. Jadi misalkan I2 nya bernilai 1 maka output Y\r\nnya juga akan bernilai 1 dan misalkan I2 nya bernilai 0 maka output Y nya juga\r\nkan bernilai 0. Itu disebabkan nilai 0, 1, dan 0 pada A0, A1, dan enable adalah\r\nselector yang berpatok pada nilai kolom I2. Pada saat A0, A1, dan enable bernilai\r\n1, 0, dan 0. Maka nilai output Y akan mengikuti nilai inputan I1, tidak peduli\r\ndengan nilai inputan lainnya seperti I0, I2, dan I3. Jadi misalkan I1 nya bernilai 1\r\nmaka output Y nya juga akan bernilai 1 dan misalkan I1 nya bernilai 0 maka\r\noutput Y nya juga kan bernilai 0. Itu disebabkan nilai 1, 0, dan 0 pada A0, A1, dan\r\nenable adalah selector yang berpatok pada nilai kolom I1. Pada saat A0, A1, dan\r\nenable bernilai 1, 1, dan 0. Maka nilai output Y akan mengikuti nilai inputan I3,\r\ntidak peduli dengan nilai inputan lainnya seperti I0, I1, dan I2. Jadi misalkan I3 nya\r\nbernilai 1 maka output Y nya juga akan bernilai 1 dan misalkan I3 nya bernilai 0\r\nmaka output Y nya juga kan bernilai 0. Itu disebabkan nilai 1, 1, dan 0 pada A0,\r\nA1, dan enable adalah selector yang berpatok pada nilai kolom I3\r\n2. Percobaan Demultiiplekser\r\nData yang didapat setelah dilakukannya percobaan yaitu:\r\nTabel 3. 2 Demultiplekser\r\n\r\n̅ ̅ E2 ̅ ̅ ̅ ̅ ̅ ̅ ̅ ̅\r\n\r\n8\r\n\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nsaat E0 bernilai 1 maka E1 dan E2 tidak aktif, dan nilai selector A0 sama\r\ndengan 0 dan A1 sama dengan 0 dan juga A2 sama dengan 0, serta nilai output O0\r\nsampai O7 sama dengan 0. Dan pada saat E1 bernilai 1 maka E0 dan E2 tidak aktif,\r\ndan nilai selector A0 sama dengan 0 dan A1 sama dengan 0 dan juga A2 sama\r\ndengan 0, serta nilai output O0 sampai O7 sama dengan 0. Serta pada saat E2\r\nbernilai 0 maka E0 dan E1 tidak aktif, dan nilai selector A0 sama dengan 0 dan A1\r\nsama dengan 0 dan juga A2 sama dengan 0, serta nilai output O0 sampai O7 sama\r\ndengan 0. Jadi dapat disimpulkan saat E0, E1, dan E2 bernilai 1, 1, dan 0 maka\r\nselector/input A dan output O akan bernilai 0 tidak peduli berapa pun nilai\r\ninputan nya, karena yang menentukan nilai output dan selector/input nya adalah\r\nketiga enable tersebut.\r\nBerdasarkan tabel tersebut juga dapat diketahui bahwa demultiplekser mulai\r\nmengolah data saat E0, E1, dan E2 bernilai 0, 0, dan 1. Itu menunjukan bahwa E0\r\ndan E1 menggunakan active low, sedangkan E2 menggunakan active high.\r\nPenentuan nilai output O ditentukan oleh selector/input A0, A1, A2. Misalkan pada\r\nsaat A0, A1, dan A2 bernilai 0, 0, dan 0 maka nilai output O0 adalah 1 dan output\r\nyang lain bernilai 0. Penentuan nilai output ini disebabkan oleh adanya nilai 1\r\ndiantara nilai A dan memiliki bilangan\r\n\r\n. Jadi saat nilai A0, A1, A2 sama dengan\r\n0, 0, 0 tidak ada yang bernilai 1, maka output yang akan bernilai 1 jatuh pada\r\noutput O0 sisanya akan bernilai 0.\r\n3.Percobaan BCD Seven Segment\r\nSeven Segment merupakan segmen yang digunakan untuk menampilkan\r\ndecimal, seperti namanya terdidi dari 7 segmen. Rangkaian Decoder BCD\r\n\r\n9\r\n\r\nterhadap Seven Segment berfungsi sebagai penampil masukkan yang awalnya\r\nbiner, menjadi decimal. Percobaan ini menghasilkan data:\r\nTabel 3. 3 Dekoder BCD ke 7 Segmen\r\n\r\nLT Blanking Bentuk Display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n1 1 1 1 1\r\n\r\n0\r\n\r\n1 1 1 1 1\r\n1\r\n\r\nBerdasarkan tabel 3.3 Dekoder BCD ke 7 Segmen dapat diketahui\r\nbahwa saat LT nya 0 maka dekoder belum memulai pengolahan datanya atau\r\ndekoder belum aktif. Pada saat LT nya 1 dan Blanking nya 0 maka angka yang\r\nakan terbentuk pada 7 segmen adalah angka 0 atau outputnya bernilai 0, serta\r\ntidak peduli berapapun inputannya hasil di 7 segmen akan tetap 0. Dan pada saat\r\nLT bernilai 1 dan Blanking bernilai 1, dan inputan D bernilai 0 semua maka angka\r\nyang akan terbentuk pada 7 segmen adalah angka 1 atau outputnya bernilai 1. Itu\r\nmenunjukkan bahwa LT dan Blanking menggunakan active high untuk\r\n\r\n10\r\n\r\nmengaktifkan programnya. Dan pada saat LT dan Blanking bernilai 1 dan 1 serta\r\ninput D3, D2, D1, D0 bernilai 1, 0, 0, 1 maka angka yang akan terbentuk pada 7\r\nsegmen adalah simbol-simbol yang memiliki fungsi untuk menginterprestasikan\r\n\r\nangka 10. Dan begitu pula dengan inputan selanjutnya akan muncul simbol-\r\nsimbol aneh yang berfungsi menginterprestasikan angka lebih dari 9 pada 7\r\n\r\nsegmen.\r\n\r\n10\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nSetelah melakukan percobaan kali ini, kesimpulan yang didapat adalah:\r\n1. Multiplekser adalah piranti yang mengeluarkan 1 output dari beberapa\r\ninput, dan demultiplekser adalah kebalikannya.\r\n2. Multiplekser dan Demultiplekser dimanfaatkan pada perangkat-perangkat\r\npengolah data seperti CPU.\r\n3. Dekoder berfungsi mengubah data biner ke data desimal, oktal dan lain\r\nsebagainya. Enkoder mengubah data desimal, oktal, dan lain sebagainya\r\nke data biner\r\n4. Dekoder digunakan untuk memberikan keamanan pada komunikasi,\r\ndekomposer, dan mengubah instruksi komputer menjadi sinyal kontrol\r\nCPU', 'Faishal Fansuri', 'UNIT 1'),
(546, '3332210017', 'A0 dan A1 merupakan selektor. Apabila E’ bernilai 0 maka ic-nya akan\r\naktif, sudah di hubungkan ke arus listrik. Apabila selektor bernilai 0 0 maka akan\r\ndipilih jalur pertama yaitu I0. Jadi, ketika I0 bernilai 0 maka output-nya (Y) juga\r\nbernilai 0 (data baris ke-2). I1, I2, dan I3 don’t care seperti kabel yang terputus.\r\nKetika selektor bernilai 0 1 akan memilih jalur yang kedua (I2). Ketika I2 bernilai\r\n1 maka output y bernilai 1 (data baris ke-4.\r\n\r\n10\r\n\r\n3.2.2 Demultiplexer\r\n\r\nTabel 3.2 Analisis Demultiplexer\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nPada percobaan demultiplexer Input-nya ada 3 (E0, E1, dan E2), output-\r\nnya ada 8 (O0-O7), dan selektor-nya ada 3 (A0, A1, A2). Mengapa bisa ada 3\r\n\r\ninput? Karena ada gerbang AND. Sebelum masuk ke ic demultiplexer, input akan\r\nmasuk ke gerbang AND terlebih dahulu\r\nPembahasan baris ke 4, contoh 001, 0 pada E0 masuk ke gerbang not\r\nmenjadi 1, 0 pada E1 juga masuk ke gerbang not menjadi 1 dan 1 pada E2 masuk.\r\n\r\nKetiganya di AND-kan menjadi 1.1.1 menghasilkan 1. Jadi didapat input selektor-\r\nnya bernilai 1 ketika nilai E0, E1, dan E2 001. Ketika selektor A0, A1, dan A2\r\n\r\nbernilai 000, artinya jalur pertama yang dipilih (O0), sehingga output O0 akan\r\nsama dengan input-nya yaitu 1, sisanya O1-O7 seperti kabel yang terputus (don’t\r\ncare)\r\nPembahasan baris ke 5, Input-nya sama seperti pada baris ke 4 yaitu 1\r\ndengan selektor A0, A1, dan A2 bernilai 001 seharusnya 100 atau 4 dalam\r\ndesimal sehingga yang dipilih adalah jalur 4. Jadi nilai output O4 adalah 1,\r\nsisanya output 0.\r\n\r\n11\r\n\r\n3.2.3 Dekoder BCD Ke 7 Segmen\r\n\r\nTabel 3. 3 Analisis Dekoder BCD Ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X X\r\n1 0 X X X X X\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 10\r\n1 1 1 0 1 1 11\r\n1 1 1 1 0 0 12\r\n1 1 1 1 0 1 13\r\n1 1 1 1 1 0 14\r\n1 1 1 1 1 1 15\r\nPembahasan pada tabel sama halnya seperti konversi bilangan biner\r\nmenjadi bilangan desimal atau bahasa mesin menjadi bahasa non-mesin (decoder).\r\nDecoder fungsinya mengubah bahasa mesin 1 atau 0 ke bentuk bahasa non-mesin.\r\nSedangkan encoder fungsinya mengubah bahasa non-mesin ke bahasa mesin.\r\nContohnya saat kita menekan tombol a di keyboard akan di encode oleh\r\nprocessor. Untuk nama alatnya disebut encoder, sedangkan prosesnya disebut\r\nencode\r\nPriority encoder maksudnya semakin ke atas output-nya semakin tinggi\r\nnilai priority-nya jadi lebih didahulukan. Ketika ada 2 atau 3 input yang aktif,\r\nyang diprioritaskan yang paling atas. Priority dipakai saat ada lebih dari 1 input\r\nyang aktif.\r\n\r\n12\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerdasarkan pada praktikum yang dilakukan mengenai MSI (Medium\r\nScale Integration) didapatkan kesimpulan sebagai berikut:\r\n1. Multiplexer input-nya memiliki lebih dari 1 jalur dengan output yang\r\nhanya memiliki 1 jalur,. Sedangkan demultiplexer inputnya hanya 1\r\njalur dengan outputnya yang memiliki lebih dari 1 jalur. Jumlah\r\nmaksimum input pada multiplexer adalah 2 pangkat selektor.\r\nSedangkan jumlah output maksimum pada demultiplexer adalah 2\r\npangkat selektor\r\n2. Multiplexer dapat dimanfaatkan untuk mengurangi jumlah jalur\r\ntembaga yang diperlukan untuk menghubungkan memori ke bagian lain\r\ndari komputer. Sedangkan demultiplexer dimanfaatkan untuk\r\nmenyimpan output dari ALU ke unit penyimpanan atau register.\r\n3. Rangkaian decoder fungsinya mengubah dari bahasa mesin ke\r\n\r\nbahasa non-mesin. Sedangkan encoder mengubah bahasa non-\r\nmesin menjadi bahasa mesin.\r\n\r\n4. Pemanfaatan decoder untuk memberikan keamanan pada\r\nkomunikasi data dengan membangun enkripsi standar dan\r\nalgoritma dekripsi. Sedangkan pemanfaatan encoder sebagai Data\r\nEntry Encoder untuk memasukkan data dari survei telepon dalam\r\nformat kode ke dalam database.', 'VALENTINO WAHYU PRATAMA', 'UNIT 1'),
(547, '3332210040', 'Pada praktikum ini dilakukan beberapa percobaan, diantaranya percobaan\r\nmultiplexer, demultiplexer, dan dekoder BCD ke 7 Segmen. Berikut merupakan\r\nanalisis dari percobaan yang telah dilakukan sebagai berikut.\r\n3.2.1 Percobaan Multiplexer\r\nAdapun dari percobaan multiplexer yang telah dilakukan mendapatkan\r\ndata sebagai berikut.\r\n\r\nTabel 3.1 Percobaan Multiplexer\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nBerdasarkan tabel 3.1, diketahui bahwa yang menjadi selector adalah\r\ninput A. Ketika input A0 dan A1 sama-sama bernilai 0, maka output yang\r\ndihasilkan ialah input jalur I0. Lalu Ketika A0 = 0 dan A1 = 1 maka output yang\r\nditampilkan dari input jalur I2. Sedangkan jika dibalik, A0 = 1 dan A1 = 0 maka\r\n\r\noutput yang dihasilkan adalah input jalur I1. Terakhir jika A0 dan A1 sama-\r\nsama bernilai 1, maka output yang ditampilkan berasal dari input jalur I3.\r\n\r\n3.2.2 Percobaan Demultiplexer\r\nAdapun dari percobaan multiplexer yang telah dilakukan mendapatkan\r\ndata sebagai berikut.\r\n\r\nTabel 3.2 Percobaan Demultiplexer\r\n\r\n10\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 0 1\r\n0 0 1 1 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 1 0\r\nBerdasarkan tabel 3.2, bisa disimpulkan pada dasarnya percobaan\r\ndemultiplexer sama dengan percobaan multiplexer, yaitu output yang\r\nditampilkan dipengaruhi oleh input A. Lalu di demultiplexer ini terdapat tiga\r\ninput enabler, yang mana ketika input = 0 enabler = 1 terjadi active low dan\r\nketika nilai inputnya 0 dan enabler 2 terjadi active high yang mana itu akan aktif\r\nketika nilai inputnya 1.\r\n\r\n3.2.3 Percobaan Decoder BCD ke 7 Segmen\r\nAdapun dari percobaan decoder BCD ke 7 segmen yang telah dilakukan\r\nmendapatkan data sebagai berikut.\r\n\r\nTabel 3.3 Percobaan Dekoder BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X Mati\r\n1 0 X X X X Mati\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n\r\n11\r\n\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 A\r\n1 1 1 0 1 1 B\r\n1 1 1 1 0 0 C\r\n1 1 1 1 0 1 D\r\n1 1 1 1 1 0 E\r\n1 1 1 1 1 1 -\r\nBerdasarkan tabel 3.3, terlihat ada input LT dan Blanking, dimana LT itu\r\nberfungsi menampilkan output, dan blanking berfungsi sebagai penahan hasil\r\ndari keluaran.\r\n\r\n12\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nAdapun kesimpulan dari praktikum MSI (Medium Scale Integration) yaitu\r\nsebagai berikut.\r\n1. Multiplexer adalah rangkaian logika yang menerima beberapa input data\r\ndigital dan menyeleksi salah satu dari input tersebut pada saat tertentu untuk\r\ndikeluarkan pada sisi output. Sedangkan multiplexer adalah rangkaian\r\nlogika yang menerima satu input data dan mendistribusikan input tersebut\r\nke beberapa output yang ada\r\n2. Multiplexer dan demultiplexer biasanya digunakan sebagai emancar\r\ntelevisi, dalam jaringan telepon untuk mengintegrasi sinya audio pada jalur\r\ntransmisi, dan dalam elektronika lainnya.\r\n3. Decoder yaitu angkaian digital yang mengubah biner ke decimal. Encoder\r\nyaitu rangkaian digital yang mengubah desimal ke biner.\r\n4. Pemanfaatan decoder dan encoder ialah pada kode converter dan sinyal\r\nradio.', 'MUHAMMAD FARHAN ZULKARNAIN', 'UNIT 1'),
(548, '3332210075', 'Pada awal nilai A1 & A2 merupakan 0 & 0 yang akan mengeluarkan nilai input\r\nI0 selanjutnya ke Output Y. apabila dilihat dalam tabel nilai-nilai selector ini\r\nmempunyai pola yang sama menggunakan perhitungan 0 sampai tiga namun\r\ndalam percobaan ini pada nomor Biner. Dari ke 2 nilai selector ini akan\r\nmempresentasikan nilai inputnya sendiri, dimana dalam nilai inputnya akan\r\nmenjadi nilai hasil buat Y. jadi saat nilai dari ke 2 selector itu merupakan 00 maka\r\ndari nilai ini akan mempresentasikan nilai I0 lalu akan dikeluarkan buat Output Y.\r\nbegitupun selanjutnya, nilai hasil Y akan selalu bergantung dalam nilai I0.\r\n¬menurut nilai selector yang akan memproses data dalam nilai input akan\r\ndikeluarkan ke output, hal ini bisa dihitung menggunakan penjumlahan dari nilai\r\noutput yang dikeluarkan dari ke 2 selector tadi, menurut penjumlahan tadi\r\nmendapat total nilai 4 dimulai dari 0 hingga tiga, menurut dua selector yang bisa\r\ndiartikan dua bit. Ini sinkron dengan menggunakan jumlah untuk hasil yang\r\ndiberikan. Maka bisa diketahui cara mudahnya yaitu menggunakan melihat\r\nberapa jumlah nilai yang bisa dikeluarkan dari selector terebut.\r\n\r\n3.2.2 Percobaan Demultiplexer\r\n\r\nTabel 3.2 Percobaan Demultiplexer\r\n\r\n\r\n \r\n E2 A0 A1 A2 O0 O1 O2 O3 O4 O5 O6 O7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\n\r\n12\r\n\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nPada rangkaian ini mempunyai perbedaan, yaitu dalam E0’ & E1’ bernilai 0 akan\r\nbersifat active low atau aktif & proses akan dilakukan. Tetapi saat bernilai 1 atau\r\npada keadaan High maka tidak akan diproses. Pada E2 bersifat active low bila\r\nbernilai 1 maka proses akan dilakukan & bernilai 0 tidak akan diproses. Kemuadian\r\nsupaya bisa proses berjalan maka nilai dari E0’ & E1’ wajib bernilai 0 & E2 bernilai\r\n1. Penentuan nilai Output O dipengaruhi oleh selector atau input A0, A¬1, & A2\r\nsama dengan 0, 0, & 0 tidak ada yang mempunyai nilai 1 & hasil yang lain bernilai 0.\r\nPada nilai output masih ada penentuan ini ditimbulkan oleh nilai 1 diantara A &\r\nmempunyai bilangan 2n. jadi ketika nilai A0, A¬1, & A2 sama dengan 0, 0, & 0 tidak\r\nterdapat yang memiliki nilai 1, maka dalam hasil yang akan bernilai 1 jatuH pada\r\nhasil O0 sisnya akan bernilai 0. Dapat dimisalkan dalam waktu A0, A¬1, & A2 sama\r\nmenggunakan 0, 0 & 1 maka nilai out O4 merupakan 1 & dalam input yang lain\r\nbernilai 0. Jadi waktu nilai A0, A¬1, & A2 sama dengan 0, 0 & 1 maka akan terjadi\r\nbilangan 0 + 0 +22 = 4, jadi nilai hasil yang akan bernilai 1 terdapat dalam O4 &\r\nsisanya akan bernilai 0 Misalkan dalam waktu A0, A1, & A2 bernilai 0, 1, & 1 maka\r\nnilai hasil O6 merupakan 1 & hasil dalam yang lain bernilai 0. Penentuan nilai hasil\r\nini ditimbulkan oleh adanya nilai 1 diantara nilai A & mempunyai bilangan 2^n. Jadi\r\nketika nilai A0, A1, A2 sama menggunakan 0, 1, 1 maka akan terjadi bilangan 0 +\r\n2^1 + 2^2 = 6, jadi hasil yang akan bernilai 1 jatuh dalam O6 sisanya akan bernilai 0\r\n\r\n13\r\n\r\nBAB IV\r\n\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nSetelah melakukan praktikum MSI ( Medium Scale Integration).maka\r\ndidapatkan kesimpulan sebagai berikut:\r\n1. Multiplekser adalah rangkaian kombinasional yang dimana memiliki\r\nbanyak input (multi-input) & hanya memiliki satu output (single- output).\r\nSedangkan demultiplekser adalah rangkaian kombinasional yang dimana\r\n\r\nmempunyai satu input (single-input) & mempunyai banyak output (multi-\r\noutput).\r\n\r\n2. Pemanfaatan dalam multiplekser & demultiplekser ini bisa diterapkan\r\ndalam sebuah sistem komunikasi yang mana bisa mentransmisikan jenis\r\ndata berupa audio ataupun video.\r\n3. Decoder adalah pengubah sinyal digital sebagai sinyal analog atau\r\npengubah kode – kode yang tidak dipahami manusia & hanya dipahami\r\noleh sistem tersebut. Sedangkan encoder adalah pengubah sinyal analog\r\nsebagai sinyal digital atau pengubah bahasa sebagai kode – kode yang\r\ntidak dipahami manusia & hanya dipahami oleh sistem tersebut.\r\n4. Pemanfaatan dalam decoder & encoder yaitu dalam sistem penyimpanan\r\ndalam komputer buat mengakses lokasi memori berdasarkan alamat yang\r\ndidapatkan oleh perangkat tersebut. Contoh lainnya menjadi pengiriman\r\npesan dalam email yang bisa mengamankan alamat pengiriman &\r\npengirimannya tersebut.', 'MUHAMMAD FARHAN RAMADHAN', 'UNIT 1'),
(549, '3332210085', 'Output pada percobaan ini dipengaruhi oleh nilai A0 dan A1, jika pada A0 dan\r\nA1 kedua-duanya bernilai 0 maka yang ditampilkan pada bagian output adalah\r\ninput jalur I0. Jika pada A0 bernilai 0 dan A1 bernilai 1 maka yang ditampilkan\r\npada bagian output adalah input jalur I2. Jika pada A0 bernilai 1 dan A1 bernilai 0\r\nmaka yang ditampilkan pada bagian output adalah input jalur I1. Jika pada A0 dan\r\nA1 kedua-duanya bernilai 1 maka yang ditampilkan pada bagian output adalah\r\ninput jalur I3. Seperti yang pada tabel baris kedua ketika A0 dan A1 kedua-duanya\r\nbernilai 0 maka output yang ditampilkan adalah inputan yang berada di jalur I0,\r\nyaitu nol (0). Dan rangkaian ini bersifat active low, yaitu rangkaian yang akan\r\naktif ketika diberi nilai logika nol (0).\r\n\r\n9\r\n\r\nPercobaan kedua menggunakan rangkaian demultiplexer dengan\r\nrangkaiannya sebagai berikut:\r\n\r\nGambar 3.2 Rangkaian Demultiplekser\r\nDari percobaan kedua, didapatkan data-data hasil sebagai berikut:\r\nTabel 3.2 Tabel Hasil Percobaan Demultiplekser\r\n\r\n̅̅̅\r\n̅̅̅ E2 A0 A1 A2 O0 O1 O2 O3 O4 O5 O6 O7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nUntuk melakukan percobaan kedua, nilai\r\n̅̅̅ dan\r\n̅̅̅ harus bernilai nol (0)\r\nkarena keduanya bersifat Active LOW dan E2 harus bernilai satu (1) karena\r\nbersifat Active HIGH agar rangkaiannya aktif dan dapat digunakan pada\r\n\r\n10\r\n\r\npercobaan tersebut. Nilai dari A0, A1 dan A2 sangat berpengaruh dalam\r\nmenentukan posisi dari output yang bernilai satu (1) dan juga dapat diketahui\r\ndengan cara manual sebagai berikut:\r\nKarena percobaan ini mengkonversi bilangan biner ke bilangan oktal maka\r\nA0: 20\r\n, A1: 21\r\n, dan A2: 22\r\n\r\n. Misal, pada A0 bernilai 0 dan A1 = A2 = 1 maka,\r\n(\r\n) (\r\n)\r\n\r\nDan hasilnya adalah enam (6), enam (6) menunjukkan posisi dari output yang\r\nbernilai satu (1), yaitu O6.\r\nPercobaan ketiga menggunakan rangkaian decoder BCD ke 7 segment,\r\nbentuk dari rangkaiannya sebagai berikut:\r\n\r\nGambar 3.3 Rangkaian Decoder BCD Ke 7 Segment\r\nDari percobaan ini didapatkan data-data hasil sebagai berikut:\r\nTabel 3.3 Tabel Hasil Percobaan Decoder BCD Ke 7 Segment\r\nLT BLANKING D3 D2 D1 D0 DISPLAY\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n\r\n11\r\n\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1 -\r\nDalam percobaan ini dilakukan proses yang disebut decoding, proses ini\r\nmenguraikan isyarat mesin digital atau komputer yang berupa bilangan biner ke\r\nbilangan desimal sehingga dapat dimengerti oleh manusia. Pada percobaan ini, LT\r\nberfungsi sebagai penguji lampu dari 7 segment dan Blanking berfungsi sebagai\r\npengosongan 7 segment sehingga angka yang ada pada 7 segment dapat diisi\r\nkembali atau diganti dengan angka yang lainnya. Dan dapat dilihat, pada saat nilai\r\nLT bernilai nol (0) dan Blanking bernilai X (bebas) dan juga pada saat LT bernilai\r\nsatu (1) dan Blanking bernilai nol (0) maka display tidak menampilkan bentuk\r\napapun walaupun sudah diberi inputan sedangkan pada saat LT dan Blanking\r\nbernilai satu (1) maka inputan yang diberikan pada rangkain tersebut akan\r\nmenampilkan bentuk-bentuk angka pada displaynya sesuai dengan angka biner\r\nyang merepresentasikan angka desimal tersebut. Misal, inputannya 0110 maka,\r\ndisplay akan menampilkan angka enam (6) dan karena 7 segment ini hanya satu\r\n(1) bit maka, display akan menampilkan bentuk-bentuk aneh lainnya\r\n\r\n12\r\n\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nAdapun hal-hal yang dapat penulis simpulkan adalah sebagai berikut:\r\n1. Multiplekser adalah suatu rangkaian yang memiliki banyak masukan tetapi hanya\r\nmemiliki satu keluaran.\r\n2. Demultiplexer adalah suatu rangkaian yang hanya memiliki satu masukan tetapi\r\nmemiliki beberapa keluaran.\r\n3. Encoder adalah sebuah piranti yang digunakan untuk mengubah suatu sistem bilangan\r\ndigital (contohnya, sistem bilangan desimal) pada inputnya menjadi sistem bilangan\r\nbiner pada outputnya.\r\n4. Decoder adalah sebuah piranti yang digunakan untuk mengubah bilangan biner pada\r\nbagian inputnya menjadi bilangan lainnya (contohnya, desimal) sehingga dapat\r\ndimengerti oleh manusia atau dengan kata lain, decoder adalah penerjemah atau\r\npengurai sandi.', 'CHANDRA DWI JULIO', 'UNIT 1');
INSERT INTO `plagiator_postmodel` (`id`, `nim`, `isi_laprak`, `nama`, `unit`) VALUES
(550, '3332210091', 'Pada percobaan multiplexer kali ini bahwa pada sebuah rangkaian\r\nnilai inputnya dipengaruhi oleh nilai dari A0 dan A1. Yang mana keduanya\r\n\r\nmerupakan sebuah selector pada tabel diatas. , jika pada A0 dan A1 kedua-\r\nduanya bernilai 0 maka yang ditampilkan pada output adalah input jalur I0.\r\n\r\nJika pada A0 bernilai 0 dan A1 bernilai 1 maka yang ditampilkan pada bagian\r\n\r\n11\r\n\r\noutput adalah input jalur I2.Jika pada A0 bernilai 1 dan A1 bernilai 0 maka\r\nyang ditampilkan pada bagian output adalah input jalur I1. Jika pada A0 dan\r\nA1 kedua-duanya bernilai 1 maka yang ditampilkan pada bagian output\r\nadalah input jalur I3. Seperti yang pada tabel baris kedua ketika A0 dan A1\r\nkedua-duanya bernilai 0 maka output yang ditampilkan adalah inputan yang\r\nberada di jalur I0, yaitu nol (0). Dan rangkaian ini bersifat active low, yaitu\r\nrangkaian yang akan aktif ketika diberi nilai logika nol (0).\r\n2. Percobaan Demultiplexer\r\nBerikut ini contoh dari rangkaian demultiplexer dapat dilihat pada gambar\r\n3.2.\r\n\r\nGambar 3.2 Rangkaian Demultiplexer\r\nDidapatkan data dari gambar diatas seperti pada tabel kebenaran\r\nsebagai berikut :\r\n\r\nTabel 3.2 Demultiplexer\r\n\r\nE̅0 E̅1 E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n\r\n12\r\n\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nPada percobaan kedua sama seperti percobaan pertama dimana nilai\r\noutput diperngaruhi oleh niali input dari A. Baik A0,A1.dan A2. Namun pada\r\npercobaan kedua ini nilai E0 dan E1 harus sama dengan supaya pada output\r\nada nilai yang keluar. Karena pada percobaan kedua ini bersifat active low\r\ndan E2 harus bernilai 1 karena bersifat active high supaya rangkaian tersebut\r\ndapat aktif. Pada percobaan kali ini bekerja dengan cara mengkonversikan\r\nbilangan biner terhadap bilangan oktal.\r\n\r\n3. Dekoder BCD ke 7 Segmen\r\nPada gambar 3.3 merupakan contoh rangkaian dari decoder BCD ke 7\r\nsegmen.\r\n\r\nGambar 3.3 BCD 7 Segment\r\n\r\nPada rangkaian diatas didapatkan data seperti pada tabel kebenaran berikut\r\nini :\r\n\r\nTabel 3.3 BCD 7 Segment\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X Tidak ada\r\n1 0 X X X X Tidak ada\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n\r\n13\r\n\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 [\r\n1 1 1 0 1 1 ]\r\n1 1 1 1 0 0\r\n\r\n[\r\n]\r\n\r\n1 1 1 1 0 1\r\n\r\n]\r\n[\r\n\r\n1 1 1 1 1 0\r\n\r\n[\r\n[\r\n1 1 1 1 1 1 []\r\n\r\nPada percobaan ini kita melakukan proses decoding. Dimana pada\r\npercobaan ini kita dapat menguraikan isyarat pada bahasa mesin digital\r\nataupun computer yang mengandung unsur digital di konversikan menjadi\r\nbilangan decimal sehingga dapat dipahami oleh manusia. Pada percobaan\r\nkali ini input LT berfungsi sebagai penguji lampu dari 7 segment dan\r\nBlanking berfungsi sebagai pengosongan 7 segment sehingga angka yang\r\nada pada 7 segment dapat diisi kembali atau diganti dengan angka yang\r\nlainnya. Dan dapat dilihat, pada saat nilai LT bernilai nol (0) dan Blanking\r\nbernilai X (bebas) dan juga pada saat LT bernilai satu (1) dan Blanking\r\nbernilai nol (0) maka display tidak menampilkan bentuk apapun walaupun\r\nsudah diberi inputan sedangkan pada saat LT dan Blanking bernilai satu (1)\r\nmaka inputan yang diberikan pada rangkain tersebut akan menampilkan\r\nbentuk-bentuk angka pada displaynya sesuai dengan angka biner yang\r\nmerepresentasikan angka desimal tersebut. Misal, inputannya 0110 maka,\r\ndisplay akan menampilkan angka enam (6) dan karena 7 segment ini hanya\r\nsatu (1) bit maka, display akan menampilkan bentuk-bentuk aneh lainnya.\r\n\r\n14\r\n\r\n15\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\nAdapun kesimpulan yang didapat pada percobaan kali ini adalah\r\nsebgai berikut :\r\n1. Multiplexer merupakan sebuah rangkaian logika yang terdiri banyak nya\r\ninputan tetapi hanya memiliki satu nilai output saja. Sedangkan\r\ndemultiplexer kebalikan daripada multiplexer.\r\n2. Multiplexer berfungsi terhadap tranmisi data, sedangkan Demultiplexer\r\nberfungsi terhadap system komunikasi\r\n3. Encoder adalah sebuah piranti yang digunakan untuk mengubah suatu\r\nsistem bilangan digital (contohnya, sistem bilangan desimal) pada\r\ninputnya menjadi sistem bilangan biner pada outputnya. sedangakan\r\nDecoder adalah sebuah piranti yang digunakan untuk mengubah bilangan\r\nbiner pada bagian inputnya menjadi bilangan lainnya (contohnya, desimal)\r\nsehingga dapat dimengerti oleh manusia atau dengan kata lain, decoder\r\nadalah penerjemah atau pengurai sandi.\r\n4. Encoder berfungsi sebagai rangakain untuk mengkodekan data input\r\nmejadi data bilangan dengan format tertentu. Encoder berfungsi sebagai\r\nrangakain untuk mengkodekan data input mejadi data bilangan dengan\r\nformat tertentu.', 'MUHAMMAD HIFDHI DZAKWAN', 'UNIT 1'),
(551, '3332210067', 'Dalam analisis percobaan ini, praktikan akan berusaha menganalisis hasil\r\npercobaan “Medium Scale Integration” yang dilakukan oleh praktikan, kemudian\r\npraktikan akan mencoba menganalisis hasil praktik yang dilakukan, antara lain\r\nsebagai berikut. 3.2.1 Multiplekser\r\nBerikut adalah percobaan pertama dengan multiplexer, dapat diamati pada\r\ntabel 3.1. Tabel 3.1 Multiplekser\r\n\r\nA0 A1 E\r\n\r\nI0\r\nI1\r\nI2\r\nI3 Y\r\n\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n\r\nKeluaran dari percobaan ini dipengaruhi oleh nilai A0 dan A1\r\n. Ketika\r\n\r\nA0dan A1 keduanya 0, bagian output menampilkan input baris I0. Jika A0 adalah 0\r\ndan A1 adalah 1, maka jalur input I2 muncul pada output. Jika A0 adalah 1 dan A1\r\nadalah 0, maka jalur input I1 muncul pada output. Jika A0 dan A1 berada di 1, maka jalur input I3 muncul di output. Seperti pada tabel pada baris kedua, jika A0\r\ndan A1 keduanya 0, output yang ditampilkan adalah input dari baris I0, yaitu nol\r\n(0). Dan rangkaian ini active low, yaitu rangkaian yang aktif bila diberi nilai\r\nlogika nol (0).\r\n.\r\n\r\n11\r\n\r\n3.2.2 Demultiplekser\r\nBerikut adalah percobaan pertama dengan demultiplexer, dapat diamati\r\npada tabel 3.2.\r\n\r\n. Tabel 3.2 Demultiplekser\r\n\r\nE\r\n0 E\r\n1 E2 A0 A1 A2 O\r\n\r\n0 O\r\n1 O\r\n2 O\r\n3 O\r\n4 O\r\n5 O\r\n6 O\r\n7\r\n\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nUntuk menjalankan eksperimen, nilai �0\r\n\r\ndan �1 harus nol (0) karena\r\n\r\nkeduanya Aktif LOW dan E2 harus satu (1) karena Aktif adalah HIGH agar\r\nrangkaian dapat aktif dan dapat digunakan dalam pengalaman adalah Nilai A0, A1\r\ndan A2 sangat berpengaruh dalam menentukan posisi output yang bernilai satu (1)\r\ndan juga dapat ditentukan secara manual sebagai berikut :\r\nKarena percobaan ini mengubah bilangan biner menjadi oktal, A0: 2\r\n\r\n0\r\n, A1: 2\r\n1\r\n, dan\r\n\r\nA2: 2\r\n2\r\n. Misalnya, A0 adalah 0 dan A1 = A2 = 1 , maka\r\n0 + 2\r\n1 + 2\r\n2 = 0 + 2 + 4 = 6\r\nDan hasilnya enam (6), enam (6) menunjukkan posisi awal, yaitu satu (1), jadi O6. 3.2.3.Dekoder BCD ke 7 Segmen\r\nBerikut adalah percobaan pertama dengan demultiplexer, dapat diamati\r\npada tabel 3.3. Tabel 3.3 Dekoder BCD ke 7 Segmen\r\nLT Blanking D1 D1 D1 D1 Bentuk Display\r\n0 X X X X X -\r\n\r\n12\r\n\r\n1 0 X X X X - 1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1\r\n\r\n1 1 0 1\r\n\r\n1 1\r\n\r\n1 1 1 0\r\n\r\n1 1 1 1 1 1 - Pada percobaan ini dilakukan suatu proses yang disebut decoding, proses\r\nini menggambarkan sebuah mesin digital atau komputer dalam bentuk bilangan\r\nbiner dan desimal agar manusia dapat memahaminya. Pada percobaan ini LT\r\nbertindak sebagai penguji lampu 7 ruas dan Blanking sebagai 7 ruas kosong, sehingga nomor pada ruas 7 dapat diisi atau diganti dengan nomor lain. Dan bisa\r\ndilihat jika nilai LT adalah nol (0) dan Blanking adalah X (kosong) dan juga jika\r\nLT adalah satu (1) dan Blanking adalah nol (0) maka tampilan tidak menunjukkan\r\nbentuk sama sekali meskipun itu dimasukkan pada saat LT dan nilai hapus satu\r\n(1), input yang diberikan pada garis menunjukkan bentuk angka pada tampilan\r\nsesuai dengan angka biner yang mewakili angka tersebut. Misalnya, jika inputnya\r\nadalah 0110 maka tampilan akan menampilkan angka enam (6), dan karena 7\r\nsegmen tersebut hanya satu (1) bit, tampilan layar akan menunjukkan bentuk\r\nbilangan yang asing.\r\n\r\n13\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerikut adalah kesimpulan yang didapat dari praktikum Shift Register. 1. Multiplexer adalah rangkaian dengan input banyak tetapi dengan output\r\ntunggal. Demultiplexer adalah rangkaian dengan input tunggal tetapi\r\ndengan output banyak. 2. Multiplexer digunakan untuk data dengan banyak input yang dapat\r\ndisatukan untuk ditransmisikan dengan efisien, sedangkan Demultiplexer\r\nbekerja dengan mengembalikan data yang sebelumnya menyatu menjadi\r\ndata terpisah yang dapat digunakan sesuai fungsinya. Contoh\r\nmentransmisikan video dengan data rekaman gambar dan suara agar dapat\r\ndibaca indra manusia masing-masing penglihatan dan pendengaran. 3. Rangkaian dekoder di antaranya adalah BCD To 7 Segment yang\r\nmengubah biner menjadi nilai angka desimal. 4. Decoder berfungsi menerjemahkan kode biner yang dipahami mesin\r\nkomputer menjadi bilangan desimal yang dipahami manusia, sedangkan\r\nsebaliknya encoder berfungsi menerjemahkan bilangan desimal yang\r\ndipahami manusia menjadi kode biner yang dipahami mesin komputer.', 'ARIE SURYA LESMANA', 'UNIT 1'),
(552, '3332210008', 'Pada percobaan kali ini bahwa nilai input pada sebuah rangkaian\r\ndipengaruhi oleh nilai dari A0 dan A1. A0 dan A1 merupakan sebuah selector\r\npada tabel diatas. , jika pada A0 dan A1 kedua-duanya bernilai 0 maka yang\r\nditampilkan pada bagian output adalah input jalur I0. Jika pada A0 bernilai\r\n0 dan A1 bernilai 1 maka yang ditampilkan pada bagian output adalah input\r\njalur I2. Jika pada A0 bernilai 1 dan A1 bernilai 0 maka yang ditampilkan\r\npada bagian output adalah input jalur I1. Jika pada A0 dan A1 kedua-duanya\r\nbernilai 1 maka yang ditampilkan pada bagian output adalah input jalur I3.\r\n\r\n10\r\n\r\nSeperti yang pada tabel baris kedua ketika A0 dan A1 kedua-duanya bernilai\r\n0 maka output yang ditampilkan adalah inputan yang berada di jalur I0, yaitu\r\nnol (0). Dan rangkaian ini bersifat active low, yaitu rangkaian yang akan\r\naktif ketika diberi nilai logika nol (0).\r\n2. Percobaan Demultiplexer\r\nBerikut ini adalah rangkaian daripada demultiplexer.\r\n\r\nGambar 3.2 Rangkaian Demultiplexer\r\nPada rangkaian diatas didapat data pada tabel kebenaran sebagai\r\nberikut :\r\n\r\nTabel 3.2 Demultiplexer\r\n\r\nE̅0 E̅1 E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\n11\r\n\r\nPada percobaan kedua sama seperti percobaan pertama dimana nilai\r\noutput diperngaruhi oleh niali input dari A. Baik A0,A1.dan A2. Namun pada\r\npercobaan kedua ini nilai E0 dan E1 harus sama dengan supaya pada output\r\nada nilai yang keluar. Karena pada percobaan kedua ini bersifat active low\r\ndan E2 harus bernilai 1 karena bersifat active high supaya rangkaian tersebut\r\ndapat aktif. Pada percobaan kali ini bekerja dengan cara mengkonversikan\r\nbilangan biner terhadap bilangan oktal.\r\n\r\n3. Dekoder BCD ke 7 Segmen\r\nBerikut ini adalah rangkaian dari decoder BCD ke 7 segmen.\r\n\r\nGambar 3.3 BCD 7 Segment\r\n\r\nPada rangkaian diatas didapat data pada tabel kebenaran berikut ini :\r\n\r\nTabel 3.3 BCD 7 Segment\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X Tidak ada\r\n1 0 X X X X Tidak ada\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n\r\n12\r\n\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 [\r\n1 1 1 0 1 1 ]\r\n1 1 1 1 0 0\r\n\r\n[\r\n]\r\n\r\n1 1 1 1 0 1\r\n\r\n]\r\n[\r\n\r\n1 1 1 1 1 0\r\n\r\n[\r\n[\r\n1 1 1 1 1 1 []\r\n\r\nPada percobaan ini kita melakukan proses decoding. Dimana pada\r\npercobaan ini kita dapat menguraikan isyarat pada bahasa mesin digital\r\nataupun computer yang mengandung unsur digital di konversikan menjadi\r\nbilangan decimal sehingga dapat dipahami oleh manusia. Pada percobaan\r\nkali ini input LT berfungsi sebagai penguji lampu dari 7 segment dan\r\nBlanking berfungsi sebagai pengosongan 7 segment sehingga angka yang\r\nada pada 7 segment dapat diisi kembali atau diganti dengan angka yang\r\nlainnya. Dan dapat dilihat, pada saat nilai LT bernilai nol (0) dan Blanking\r\nbernilai X (bebas) dan juga pada saat LT bernilai satu (1) dan Blanking\r\nbernilai nol (0) maka display tidak menampilkan bentuk apapun walaupun\r\nsudah diberi inputan sedangkan pada saat LT dan Blanking bernilai satu (1)\r\nmaka inputan yang diberikan pada rangkain tersebut akan menampilkan\r\nbentuk-bentuk angka pada displaynya sesuai dengan angka biner yang\r\nmerepresentasikan angka desimal tersebut. Misal, inputannya 0110 maka,\r\ndisplay akan menampilkan angka enam (6) dan karena 7 segment ini hanya\r\nsatu (1) bit maka, display akan menampilkan bentuk-bentuk aneh lainnya.\r\n\r\n13\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\nAdapun kesimpulan yang didapat pada percobaan kali ini adalah\r\nsebgai berikut :\r\n1. Multiplexer merupakan sebuah rangkaian logika yang terdiri banyak nya\r\ninputan tetapi hanya memiliki satu nilai output saja. Sedangkan\r\ndemultiplexer kebalikan daripada multiplexer.\r\n2. Multiplexer berfungsi terhadap tranmisi data, sedangkan Demultiplexer\r\nberfungsi terhadap system komunikasi\r\n3. Encoder adalah sebuah piranti yang digunakan untuk mengubah suatu\r\nsistem bilangan digital (contohnya, sistem bilangan desimal) pada\r\ninputnya menjadi sistem bilangan biner pada outputnya. sedangakan\r\nDecoder adalah sebuah piranti yang digunakan untuk mengubah bilangan\r\nbiner pada bagian inputnya menjadi bilangan lainnya (contohnya, desimal)\r\nsehingga dapat dimengerti oleh manusia atau dengan kata lain, decoder\r\nadalah penerjemah atau pengurai sandi.\r\n4. Encoder berfungsi sebagai rangakain untuk mengkodekan data input\r\nmejadi data bilangan dengan format tertentu. Encoder berfungsi sebagai\r\nrangakain untuk mengkodekan data input mejadi data bilangan dengan\r\nformat tertentu.', 'SIROJ AL QURO', 'UNIT 1'),
(553, '3332210009', 'Pada hasil percobaan dari Multiplexer ini, terdapat selector yaitu A0, dan A1. Terdapat\r\npula masukan dari Multiplexer ini yaitu I0, I1, I2, I3 dan E itu dapat diabaikan saja.\r\nNamun, jika pada A0 dan A1 keduanya ini bernilai 0 maka yang ditampilkan pada output\r\nini yaitu jalur I0. Setelah itu Jika pada A0 nilainya 0 dan A1 nilainya 1 maka yang\r\nditampilkan pada bagian output adalah pada input jalur I2. Jika pada A0 nilai 1 dan A1\r\nbernilai 0 maka yang ditampilkan pada bagian output input jalur I1 dan jika A0 dan A1 itu\r\nkeduanya nilainya sama yaitu 1 maka yang ditampilkan pada bagian output adalah input\r\njalur I3.\r\n\r\n3.2.2 Demultiplexer\r\nPada percobaan, Demultiplexer didapatkan hasil sebagai berikut:\r\n\r\nTabel 3. 2 Demultiplexer\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n\r\n10\r\n\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nPada hasil percobaan dari Demultiplexer ini terdapat selector nya yaitu A0, A1, A2 dan\r\ndisini masukan nya hanya ada 1 yaitu E2. Pada nilai E0 dan E1 harus bernilai 0,\r\ndikarenakan kedua nya itu bersifat Active low dan pada E2 bernilai 1, dikarenakan bersifat\r\nActive High sehingga rangkaiannya menjadi aktif dan dapat digunakan pada percobaan\r\ntersebut.\r\n\r\n3.2.3 Dekoder BCD ke 7 segmen\r\nPada percobaan, Dekoder BCD ke 7 segmen didapatkan hasil sebagai berikut :\r\n\r\nTabel 3. 3 Dekoder BCD ke 7 segmen\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n\r\n11\r\n\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 -\r\n1 1 1 0 1 1 -\r\n1 1 1 1 0 0 -\r\n1 1 1 1 0 1 -\r\n1 1 1 1 1 0 -\r\n1 1 1 1 1 1 -\r\n\r\nUntuk dapat membuat atau membangun sebuah decoder 7 segmen ini yaitu menentukan\r\npersamaan yang dapat mewakili fngsi decoder di tiap ruas dan dapat disimpulkan dengan\r\nrangkaian ini terdapat 7 masukan. Lt berfungsi sebagai penguji pada lampu dari 7 segmen\r\nBlanking berfungsi sebagai pengosongan pada 7 segmen, sehingga angka yang ada pada\r\npada 7 segmen dapat diisi kembali atau diganti dengan angka yang lainnya. Jika LT ini\r\nbernilai 1 dan blanking bernilai 0 maka display tersebut tidak akan menampilkan apapun,\r\nakan tetapi pada saat LT dan Blaning bernilai 1 maka inputan yang diberikan pada\r\nrangkaian tersebut dapat menampilkan bentuk bentuk angka pada display sesuai dengan\r\nangka biner.\r\n\r\n12\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nPada percobaan mengenai MSI (MEDIUM SCALE INTEGRATION), didapatkan\r\nkesimpulan sebagai berikut:\r\n1. Multiplexer ini merupakan rangkaian yang dapat menerima beberapa inputan yang\r\nmenyeleksi salah satu dari input untuk dikeluarkan di sisi output.\r\n2. Demultiplexer ini yang menerima sebuah input signal dan melakukan pemilihan\r\nsatu dari banyak jalur data output.\r\n3. Manfaatnya decoder ini dapat memudahkan munusia bisa berinteraksi dengan\r\nkode atau sistem bilangan yang dimengerti oleh mesin digital ke isyarat atau\r\nbilangan yang dapat dimengerti manusia.Manfaat Enkoder ini dapat membantu\r\nmanusia untuk bisa beinteraki dengan mesin digital dengan cara mengkodekaan\r\nisyrat dari manuia ke bentuk sistem isyarat atau bilangan yang dimengerti oleh\r\nmesin digital atau computer.', 'ARIF RAMADHAN', 'UNIT 1'),
(554, '3332210084', 'Pada percobaan praktikum unit 7 ini tenatang “MSI (Medium Scale\r\nIntegration)’’ terdapat beberapa percoban yang diterapkan pada modul ini yaitu\r\nmultiplekser, demultiplekser dan Decoder BCD 7 Segment berikut merupakan\r\nanalisa hasil yang sudah dilakukan :\r\n3.2.1. Multiplekser\r\nMultiplekser suata alat yang berfungsi untuk memilih masukan dari\r\nsetiap jalur masukan (Input) \'n\' dan memasukkannya ke satu jalur keluaran\r\n(Output) multiplekser dapat ilustrasikan sebagai berikut :\r\n\r\nGambar 3. 1 Multiplekser\r\nTabel 3. 1 Tabel 3.1 Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nJika E adalah 1, rangkaian tidak akan memberikan output, tetapi jika Enya\r\nadalah 0, output berarti rangkaian ini aktif rendah. Dari tabel tersebut, jika\r\nA0 dan A1 adalah 0, maka output akan mengambil input I0, jika A0 = 1\r\ndan A1 = 0, maka akan diambil I1, dan jika A0 dan A1 = 1 akan diambil\r\nI3.\r\n\r\n3.2.2. Demultiplekser\r\n\r\nTabel 3. 2 Demultiplekser\r\n\r\nE0\r\n̅̅̅ dan E1\r\n̅̅̅ harus bernilai nol (0) karena keduanya bersifat Active\r\nLOW Active Low adalah rangkaian logika yang jika nilai inputannya nol\r\nmaka rangkaian akan mati, E2 harus bernilai satu (1) karena bersifat\r\nActive HIGH adalah rangkaian logika yang jika nilai inputannya satu\r\nmaka rangkaian akan aktif dan dapat digunakan pada percobaan ini.\r\nPada percobaan ini mengkonversi bilangan biner ke bilangan oktal maka\r\nA0: 20\r\n, A1: 21\r\n, dan A2: 22\r\n\r\n. Misal, pada A0 bernilai 0 dan A1 = A2 = 1 maka,\r\n\r\ndiperoleh\r\n\r\n0 + (2\r\n1\r\n) + (2\r\n2\r\n) = 0 + 2 + 4 = 6\r\n\r\nDan hasilnya adalah enam (6), enam (6) menunjukkan posisi dari output\r\nyang bernilai satu (1), yaitu O6.\r\n3.2.3. Dekoder BCD ke 7 Segmen\r\nSeven Segment merupakan segmen yang digunakan untuk\r\nmenampilkan decimal, seperti namanya terdidi dari 7 segmen. Rangkaian\r\nDecoder BCD terhadap Seven Segment berfungsi sebagai penampil\r\nmasukkan yang awalnya biner, menjadi decimal. Percobaan ini\r\nmenghasilkan data:\r\n\r\nTabel 3.3 Dekoder BCD ke 7 Segmen\r\n\r\nE̅0 E̅1 E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nLT Blanking D1 D1 D1 D1\r\n\r\nBentuk\r\nDisplay\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n\r\nLT bertindak sebagai penguji jalan 7-segmen dan blanking bertindak\r\nsebagai 7-segmen kosong, sehingga Anda dapat mengisi nomor 7-segmen\r\natau menggantinya dengan nomor lain. Juga, jika nilai LT adalah nol (0)\r\ndan blanking bernilai X (kosong), dan jika LT bernilai 1 (1) dan blanking\r\nadalah nol (0), tampilan akan menunjukkan Form tidak muncul. Telah\r\nmasuk.\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 1 c\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1 u\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1\r\n\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1. Kesimpulan\r\nBerdasarkan pada praktikum yang telah dilakukan, mengenai “MSI” dapat\r\ndipahami dan dipelajari sebagai :\r\n1. Mengenali piranti multiplekser dan demultiplekser.\r\n2. Mengetahui pemanfaatan multiplexer dan demultiplexer.\r\n3. Mengenali beberapa rangkaian decoder dan encoder.\r\n4. Mengetahui pemanfaatan decoder dan encoder.', 'IRSYAD AZHAR', 'UNIT 1'),
(555, '3332200004', 'Pada percobaan kali ini kita akan menganalisis hasil dari percobaan\r\nmultiplexer, Demultiplexer, dan Decoder BCD ke 7 segmen.\r\n\r\nPercobaan yang pertama yaitu rangkaian multiplexer, Pada rangkaian\r\nmultiplexer ini adalah rangkaian yang akan memilih satu masukan saja yang\r\nnantinya akan dijadikan output. Berikut adalah Tabel hasil percobaan dan\r\nrangkaian multiplekser dengan IC 74LS153.\r\nTabel 3. 1 Multiplexer\r\n\r\nA0 ̅ I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\n10\r\n\r\nGambar 3. 1 Rangkaian Multiplexer\r\n\r\nPada perobaan kali ini dapat dlihat tabel hasil percobaan Multiplexer dimana nilai\r\nselector Ao dan A1 diabaikan karena nilai E (enable) bernilai 1 yang artinya\r\nrangkaian tidak aktif atau mati sehingga hasil keluarannya 0 atau dapat kita\r\nabaikan. kemudian pada saat selector Ao dan A1 diberi nilai 0 dan 0 maka sektor\r\ntersebut memilih jalur inputan I0. dimana pada inputan I0 bernilai 0 dan I1-13\r\nbernilai 1, maka inputan I0 tersebut akan dipilih sebagai nilai outputnya.\r\nkemudian ketika selector Ao bernilai 0 dan selektor A1 memiliki nilai 1 maka\r\nselector tersebut akan memilih jalur I2. jika inputan I2 bernilai 1 maka outputnya\r\nakan memiliki nilai 1 dan inputan yang lainnya dapat diabaikan. Ketika selector\r\nAo bernilai 1 dan A1 bernilai 0 maka selektor akan memilih jalur I1. ketika I1\r\nbernilai 1 maka outputnya akan bernilai 1 dan inputan yang lain dapat diabaikan.\r\nkemudian pada saat Ao =1 dan A1 = 1 maka selektor akan memilih jalur inputan\r\nI3. dimana jika inputan I3 berniali 0 maka output akan bernilai sesuai dengan I3.\r\n\r\nPercobaan kedua yaitu demultiplexer, Pada rangkaian ini memiliki\r\nsedikit input namun terdapat banyak output, atau bisa disebut dengan data\r\ndistributor. Berikut adalah tabel hasil percobaan dan gambar rangkaian\r\ndemultiplekser dengan IC 74LS138.\r\n\r\n11\r\n\r\nTabel 3. 2 Demultiplexer\r\n\r\n̅̅̅ ̅ ̅̅̅ ̅ A0 A1 A2 ̅0 ̅1 ̅2 ̅3 ̅4 ̅5 ̅6 ̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nGambar 3. 2 Rangkaian Demultiplexer\r\n\r\nPada percobaan ini didapatkan hasil percobaan pada tabel diatas\r\nDemultiplekser dimana pada gerbang Enable (Eo-E2) adalah gerbang untuk\r\nmenentukan aktif atau tidaknya rangkaian, pada hasil tabel percobaan dari baris\r\nyang pertama memiliki nilai E0 = 1 yang membuat rangkaianmenjadi tidak aktif\r\natau masih dalam keadaan mati, sehingga nilai E1 dan E2 kita abaikan. dan\r\noutputnya menghasilkan nilai 0, kemudian hal yang sama terjadi pada baris\r\n\r\n12\r\n\r\nkedua dimana nilai E1 = 1, maka rangkaian tidak akan aktifdan nilai keluarannya\r\nmasih bernilai 0, dan pada baris ketiga juga memiliki kondisi yang sama dimana\r\nnilai E2 = 0 maka rangkaian tersebut tidak aktif, dan nilai keluarannya masih\r\nbernilai 0. Kemudian dari baris 4 sampai baris terakhir jangkauan aktif karena\r\nmemiliki nilai masukan masukan e0 = 0, e1 = 0, dan e2 = 1. Kemudian di baris ke-4\r\npersembahan untuk ao-a2 bernilai 0 semua kemudian diperoleh dengan nilai 1, dan\r\nyang lain bernilai 0, kemudian di baris kelima di mana a0 seletor bernilai 0, a1 =1,\r\nkemudian ketika ao = 0, a1 =1, a2 =1, kemudian ketika ao = 0, a1, a2 = 0, ketika ao =\r\n0, Kemudian ketika a0 =1, a1 =1, dan kemudian yang terakhir jika a0, a1, a2 =1 maka\r\nselektor akan memilih keluaran di o7 jadi itu adalah bernilai 1 dan sisanya adalah 0.\r\n\r\nPercobaan ketiga yaitu Decoder BCD ke 7 segmen, Berikut merupakan tabel\r\nhasil percobaan serta gambar rangkaian nya.\r\n\r\nTabel 3. 3 Decoder BCD ke 7 Segmen\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X MATI\r\n1 0 X X X X MATI\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n\r\n13\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1 MATI\r\n\r\nGambar 3. 3 Decoder BCD ke 7 Segmen\r\n\r\nPada percobaan ini adalah percobaan dengan menggunakan decoder BCD\r\n7 segmen dimana fungsi dari decoder ini adalah untuk merubah bilangan binner\r\nke bilangan yang mudah dipahami oleh manusia yaitu bentuk bilangan desimal,\r\npada percobaan ini dapat kita ketahui pada tabel hasil percobaan 3.3 Decoder BCD\r\n7 segmen, pada baris pertama nilai dari LT = 0 yang artinya pada kondisi ini\r\nrangkaian dapat diabaikan karena fungsi dari LT (lampt test) ini adalah untuk\r\nmendeteksi adanya lampu yang mati atau nyala, dan saat LT ini bernilai 0 maka\r\nrangkaian tidak bisa mendiagnosis keadaan sehingga input D tidak menampilkan\r\napapun pada display. selanjutnya pada baris kedua dimana nilai LT = 1 namun\r\nnilai blanking bernilai 0 artinya rangkaian masih dalam kondisi off, sehingga nilai\r\n\r\n14\r\n\r\ninput Do-D3 dapat kita abaikan. selanjutnya baris ke-3 sampai baris ke-12\r\ndiberikan nilai LT =1 dan Blanking = 1 menyatakan bahwa rangkaian ini dalam\r\nkeadaan aktif dan didapatkan bentuk display dari 0 sampai 9 atau dalam bentuk\r\nbilangan desimal hanya sampai bernilai 9, ketika pada saat benilai 10 dan\r\nseterusnya maka bentuk dari display tersebut akan randomatau menampilkan nilai\r\nacak.\r\n\r\n15\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerdasarkan pada praktikum yang telah dilakukan, mengenai Rangkaian\r\nMSI(Medium Scale Integration) dapat diambil kesimpulan sebagai berikut:\r\n1. Multiplexer adalah rangkaian logika kombinasional yang disusun\r\nkhusus untuk pengalihan salah satu dari beberapa jalur inputke satu jalur\r\nOutput. Jalur Input yang terpilih menentukan input mana yang dapat\r\nterhubung ke output. Multiplexer mempunyai outputan yang sedikit\r\nkarena telah terseleksi. Sedangkan Demultiplexer amerupakan\r\nrangkaian logika yang menerima satu input data dan mendistrubusikan\r\ninput tersebut menjadi beberapa output yang sudah disediakan yang\r\nmerupakan kebalikan multiplexer.\r\n2. Multiplekser dan demultiplekser dapat digunakan untuk pemanfaatan\r\nindustri untuk hal atau tujuan tertentu.\r\n3. Encoder adalah suatu rangkaian yang mengubah data input bilangan\r\ndesimal ke bentuk bilangan biner sehingga dapat diterma oleh\r\nkomputer. Sedangkan Dekoder adalah alat yang digunakan untuk\r\nmengembalikan proses encoding dan dapat dilihat hasil data yang\r\nsebenarnya atau dalam bentuk bilangan biner kedalam bentuk desimal\r\nsehingga dapat dipahami oleh manusia, decoder ini yang nantinya akan\r\nditampilkan pada seven segmen.\r\n4. Membangun rangkaian dekoder dengan modul BCD to 7 segment yang\r\nmenhasilkan perubahan bilangan biner ke bilangan desimal pada seven\r\nsegment.', 'PANDU ARIAN WIRA WINATA', 'UNIT 1'),
(556, '3332210043', 'Di praktikum unit 8 ini membahas tentang MSI(Medium Scale\r\nIntegration), ada beberapa percobaan di praktikum kali ini yaitu\r\nMultiplekser, Demultiplekser, dan Percobaan Decoder ke 7 segmen.\r\nPercobaan pertama adalah multiplekser. Multiplekser merupakan alat yang\r\nberfungsi untuk memilih masukan dari setiap jalur masukan (Input) \'n\' dan\r\nmemasukkannya ke satu jalur keluaran (Output). Dibawah ini adalah\r\nrangkaian multiplekser.\r\n\r\ngambar 3. 1 Multiplekser\r\n\r\nGambar diatas merupakan Multiplekser adalah dapat dicontohkan\r\npengaplikasiannya menjadi suatu saklar penghubung antara banyak\r\nmasukan dengan satu keluaran, yang akan ditentukan oleh suatu sinyal\r\nkendali dimana saklar tersebut terhubungkan. Didapat hasil praktikum yang\r\ntelah dilakukan ditabel dibawah ini\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nDilihat dari data diatas jika E bernilai 1, maka rangkaian tidak akan\r\nmengeluarkan keluaran apapun, sedangkan jika E-nya bernilai 0, akan\r\n\r\n10\r\n\r\nkeluar ouput, yang berarti rangkaian ini bersifat active low. Dilihat dari tabel\r\nbahwa, jika A0 dan A1 nya bernilai 0, maka output akan mengabil dari input\r\nI0, jika A0=1 dan A1=0, maka akan mengambil I1, A0 dan A1=1\r\nmengambil I3 dan seterusnya. Selanjutnya ada percobaan demultiplekser.\r\nDemultiplekser merupakan rangkaian logika yang menerima satu input data\r\ndan mendistribusikan input tersebut ke beberapa output yang tersedia.\r\nDidapat data dari percobaan yang dilakukan di tabel dibawah ini.\r\n\r\nDari data diatas bisa dilihat jika E0\r\n̅̅̅ dan E1\r\n̅̅̅ harus bernilai nol\r\n(0) karena keduanya bersifat Active LOW Active Low adalah rangkaian\r\nlogika yang jika nilai inputannya nol maka rangkaian akan mati, E2 harus\r\nbernilai satu (1) karena bersifat Active HIGH adalah rangkaian logika\r\nyang jika nilai inputannya satu maka rangkaian akan aktif dan dapat\r\ndigunakan pada percobaan ini.\r\nPada percobaan ini mengkonversi bilangan biner ke bilangan oktal maka\r\nA0: 20\r\n, A1: 21\r\n, dan A2: 22\r\n\r\n. Misal, pada A0 bernilai 0 dan A1 = A2 = 1 maka,\r\n\r\ndiperoleh 0 + (2\r\n1) + (2\r\n2) = 0 + 2 + 4 = 6. Dan hasilnya adalah enam\r\n(6), enam (6) menunjukkan posisi dari output yang bernilai satu (1), yaitu\r\nO6. Percobaan terakhir adalah percobaan Decoder BCD 7 segmen. 7\r\nsegmen merupakan segmen yang digunakan untuk menampilkan decimal,\r\nseperti namanya terdidi dari 7 segmen. Rangkaian Decoder BCD terhadap\r\nSeven Segment berfungsi sebagai penampil masukkan yang awalnya\r\nbiner menjadi decimal. Dipercobaan ini mendapat data sebagai berikut.\r\nE̅0 E̅1 E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\n11\r\n\r\nDari data diatas LT berfungsi sebagai penguji lampu dari 7 segment dan\r\nBlanking berfungsi sebagai pengosongan 7 segment sehingga angka yang\r\nada pada 7 segment dapat diisi kembali atau diganti dengan angka yang\r\nlainnya. Dan dapat dilihat, saat nilai LT bernilai nol (0) dan Blanking\r\nbernilai X (bebas) dan juga pada saat LT bernilai satu (1) dan Blanking\r\nbernilai nol (0) maka display tidak menampilkan bentuk apapun\r\nwalaupun sudah diberi inputan.\r\nLT Blanking D1 D1 D1 D1\r\n\r\nBentuk\r\nDisplay\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 1 c\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1 u\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1\r\n\r\n12\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nDari praktikum yang telah dilakukan bisa diambil kesimpulan jika\r\nmultiplekser dan Demultiplekser biasa dimanfaatkan pada perangkat –\r\nperangkat pengolah data seperti CPU. Encoder dan Decoder bermanfaat\r\nuntuk melakukan pengoprasian apapun pada komputer Memudahkan\r\nmanusia mengerti data yang diinputkan dan juga memudahkan mesin\r\nmembaca data yang diinputkan', 'ACHMAD ADAM YOGASWARA', 'UNIT 1'),
(557, '3332210072', 'Bisa dilihat pada tabel saat E atau Enable bernilai satu “1”, jadinya tidak\r\nada keluarannya ada istilah lainnya yaitu don’t care, Enable juga\r\nmempunyai sifat active flow artinya kebalikan, maka dari itu pada saat\r\nbernilai satu “1” tidak ada keluaran yang ditampilkan. Selain itu ada\r\njuga A0 dan A1 yang memiliki fungsi untuk selektor masukan mana\r\nyang akan dijadikan keluaran nantinya. Percobaan multiplekser ini juga\r\ndapat dicoba pada software proteus sebagai berikut.\r\n\r\nGambar 3.1 Percobaan Multiplekser pada Software Proteus\r\nBisa dilihat pada gambar diatas saat A0 bernilai satu “1” dan A1 bernilai\r\nnol “0” dengan masukannya I0,I1, I2, dan I3 berturut-turut bernilai\r\n1,1,0, dan 1, maka hasil keluarannya adalah satu “1”, hal ini\r\ndikarenakan pada selektor (A0 dan A1) dipilih keluarannya adalah pada\r\nI1 yang bernilai satu “1” dan begitu pula pala percobaan lainnya.\r\n2. Demultiplekser\r\nUntuk percobaan Demultiplekser kali ini didapatkanlah hasil percobaan\r\nbisa dilihat dibawah ini.\r\n\r\nTabel 3.2 Hasil Percobaan Demultiplekser\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n\r\n10\r\n\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nUntuk demultiplekser E0 dan E1 bersifat Active Flow, maka akan aktif\r\nsaat nol “0” dan akan mati saat bernilai satu “1” makanya pada\r\npercobaan pertama dan kedua untuk nilai yang lain dianggap don’t care\r\nkarena E0 dan E1 bernilai satu “1” (tidak aktif) maka keluarannya pun\r\ntidak akan ditampilkan atau bernilai nol “0” keseluruhannya. Percobaan\r\ndemultiplekser juga dapat dilakukan pada software proteus sebagai\r\nberikut.\r\n\r\nGambar 3.2 Percobaan Demultiplekser pada Software Proteus\r\nBisa dilihat pada gambar diatas saat E2 bernilai satu “1” dan E0,E1\r\nbernilai nol “0” maka proses akan dijalankan dan akan ada keluaran\r\nyang ditampilkan. A0 sampai A2 merupakan selektor masukan mana\r\nyang akan dijadikan keluaran, pada percobaan di gambar bilangan biner\r\npada selektor bernilai satu maka keluarannya akan ditampilkan pada\r\njalur O1 dan begitu pun seterusnya sesuai dengan nilai decimal pada\r\nselektor.\r\n1. Dekoder BCD ke 7 Segment\r\n\r\n11\r\n\r\nUntuk percobaan terakhir yang dilakukan yaitu Dekoder BCD ke 7 bisa\r\ndilihat hasilnya dibawah.\r\nTabel 3.3 Hasil Percobaan Dekoder BCD ke 7 Segment\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X 8\r\n1 0 X X X X BLANK\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 c\r\n1 1 1 0 1 1 ↄ\r\n1 1 1 1 0 0 u\r\n1 1 1 1 0 1 c\r\n1 1 1 1 1 0 t\r\n1 1 1 1 1 1 -\r\n\r\nDari table diatas didapatkan hasil sebagai berikut. Dilihat LT (Lamp\r\nTest) dan Blanking juga bersifat Active Flow seperti E0 dan E1 pada\r\npercobaan demultiplekser sebelumnya. LT memiliki fungsi sebagai\r\npengecek apakah lampu-lampu pada seven segment yang berfungsi\r\ndengan baik (menyala), dan unutk blanking digunakan untuk mereset.\r\nDilakukan pula percobaan pada software proteus sebagai berikut.\r\n\r\n12\r\n\r\nGambar 3.3 Percobaan Decoder BCD ke 7 Segment\r\nBisa dilihat dari gambar diatas dilihat D0 sampai D3 berfungsi sebagai\r\nmasukan bilangan biner yang akan diubah ke dalam bentuk decimal dan\r\nditampilkan pada 7 segment, karena bilangan decimal berbasis 10 (0-9)\r\n\r\nmaka nilai yang lebih dari itu (10-14) akan ditampilkan dengan bentuk-\r\nbentuk menyerupai kode, dan nilai 15 akan melakukan reset (7 segment\r\n\r\nmati).\r\n\r\n13\r\nBAB IV\r\nKESIMPULAN\r\n\r\n4.1 Kesimpulan\r\nDari percobaan MSI kali ini didapatkan kesimpulan sebagai berikut.\r\n1. Praktikan dapat mengenali piranti multiplekser dan demultiplekser,\r\nyaitu piranti yang dapat mengubah masukan dan keluaran.\r\n2. Praktikan mengetahui pemanfaatan multiplekser, yaitu sebagai data\r\nselektor yang dimana penerapannya bisa dilihat pada kabel telepon\r\nrumah yang hanya ada 1 tetapi bisa digunakan banyak perangkat dan\r\nlebih efisien, sedangkan demultiplekser adalah sebagai output selektor.\r\n3. Praktikan dapat mengenali apa itu encoder dan decoder, yaitu piranti\r\natau alat yang dapat mengubah bahasa yang dikenali manusia (decimal)\r\nke bahasa mesin (bilangan biner), sedangkan decoder membuka\r\ninformasi yang ada dalam bahasa mesin (bilangan mesin) dan diubah\r\nmenjadi bahasa yang dikenali manusia (decimal)\r\n4. Praktikan mengetahui pemanfaatan decoder dan encoder, yaitu pada\r\nseven segment, dari bahasa mesin (bilangan biner) menjadi bahasa\r\nmanusia (decimal) dan ditampilkan pada seven segment.', 'MUHAMMAD TAMIR HADID', 'UNIT 1'),
(558, '3332210035', 'Multiplexer atau disingkat MUX merupakan alat atau\r\nkomponen elektronika yang bisa memilih input (masukan) yang\r\nakan diteruskan ke bagian output (keluaran). Berikut adalah table\r\nhasil percobaan pada percobaan rangkaian multiplexer.\r\nTabel 3 1 Hasil Percobaan rangkaian Multiplexer\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nPada rangkaian multiplexer menggunakan gerbang AND,\r\nada beberapa gerbang AND yang disusun, dan kemudian\r\ndihubungkan menjadi satu dengan gerbang OR. pada gerbang\r\nAND input yang pertama berfungsi sebagai pengirim data,\r\nsedangkan input kedua berfungsi untuk saklar agar bisa bergantian\r\ndengan gerbang AND yang lain dalam pengiriman data. pada\r\ngambar, jika output gerbang AND yang ke bawah bernilai 1, maka\r\ndata pada input gerbang AND terkirim.\r\n3.2.2 Demultiplexer\r\n\r\nDemultiplexer merupakan rangkaian yang menerima\r\ninformasi dari beberapa saluran dan membagikannya ke tujuan\r\nyang jumlahnya lebih banyak. Berikut adalah table hasil percobaan\r\npada percobaan rangkaian demultiplexer.\r\n\r\n10\r\n\r\n10\r\n\r\nTabel 3 2 Hasil Percobaan Rangkaian Demultiplexer\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nPada rangkaian demultiplexer, gerbang yang digunakan\r\nadalah gerbang AND, output dari multiplexer di cabangkan ke\r\nsalah satu input-input dari gerbang AND. sedangkan input gerbang\r\nyang satu nya berfungsi sebagai saklar untuk penerima data yang\r\nmasuk yang kemudian dikeluarkan ke masing-masing output.\r\n3.2.3 Decoder BCD ke 7 Segmen\r\n\r\nDekoder BCD ke 7 segment jenis TTL adalah rangkaian\r\nyang berfungsi untuk mengubah kode bilangan biner BCD (Binary\r\nCoded Decimal) menjadi data tampilan untuk penampil/display 7\r\nsegment yang bekerja pada tegangan TTL (+5 volt DC). Berikut\r\nadalah table hasil percobaan pada percobaan decoder BCD ke 7\r\nsegmen.\r\nTabel 3 3 Hasil Percobaan Rangkaian Decoder BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X X\r\n1 0 X X X X X\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n\r\n11\r\n\r\n11\r\n\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 -\r\n1 1 1 0 1 1 -\r\n1 1 1 1 0 0 -\r\n1 1 1 1 0 1 -\r\n1 1 1 1 1 0 -\r\n1 1 1 1 1 1 -\r\n\r\nSeven segment dapat menampilkan angka-angka desimal\r\ndan beberapa karakter tertentu melalui kombinasi aktif atau\r\ntidaknya LED penyusunan dalam seven segment. Untuk\r\nmemudahkan penggunaan seven segment, umumnya digunakan\r\nsebuah decoder (mengubah/ mengkoversi input bilangan biner\r\nmenjadi decimal) atau seven segment driver yang akan mengatur\r\naktif tidaknya led-led dalam seven segment sesuai dengan nilai\r\nbiner yang diberikan.\r\nInput pada biner pada switch dikonversikan masuk ke\r\ndalam decoder, baru kemudian decoder mengkonversi bilangan\r\nbiner tersebut menjadi decimal, yang nantinya akan ditampilkan\r\npada seven segment.\r\n\r\n12\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nAdapun kesimpulan yang dapat diambil dalam percobaan praktikum MSI\r\n(medium scale integration) adalah sebagai berikut:\r\n1. Multiplexer atau disingkat MUX merupakan alat atau komponen\r\nelektronika yang bisa memilih input (masukan) yang akan diteruskan ke\r\nbagian output (keluaran). Demultiplexer merupakan rangkaian yang\r\nmenerima informasi dari beberapa saluran dan membagikannya ke tujuan\r\nyang jumlahnya lebih banyak.\r\n2. Pemanfaatan multiplexer dan demultiplexer adalah System komunikasi,\r\nMemori computer, Jaringan telepon, Transmisi dan system computer\r\nsatelit.\r\n3. Rangkaian Encorder adalah rangkaian yang berfungsi sebagai rangakain\r\nuntuk mengkodekan data input mejadi data bilangan dengan format\r\ntertentu. Rangkaian Decorder merupakan rangkaian digital yang dapat\r\nmengubah bilangan biner menjadi bilangan desimal, Artinya input decoder\r\nmerupakan bilangan biner, dan output-nya pun berbentuk biner.\r\n4. Pemanfaatan decoder dan encoder adalah Akurasi Sistem RFID(Radio\r\nFrequency Identification), Proses Baca Program Flash PEROM MC S51\r\nAtmel, Sensor gas methane TG S 2611, dan Sistem keamanan dengan\r\nidentifikasi dan autentifikasi.', 'M HOMSI AWALUDIN', 'UNIT 1'),
(559, '3332210076', 'Pada percobaan kali ini bahwa nilai input pada sebuah\r\nrangkaian dipengaruhi oleh nilai dari A0 dan A1. A0 dan A1\r\nmerupakan sebuah selector pada tabel diatas. , jika pada A0 dan A1\r\nkedua-duanya bernilai 0 maka yang ditampilkan pada bagian\r\noutput adalah input jalur I0. Jika pada A0 bernilai 0 dan A1 bernilai\r\n1 maka yang ditampilkan pada bagian output adalah input jalur I2.\r\nJika pada A0 bernilai 1 dan A1 bernilai 0 maka yang ditampilkan\r\npada bagian output adalah input jalur I1. Jika pada A0 dan A1\r\nkedua-duanya bernilai 1 maka yang ditampilkan pada bagian\r\noutput adalah input jalur I3. Seperti yang pada tabel baris kedua\r\nketika A0 dan A1 kedua-duanya bernilai 0 maka output yang\r\nditampilkan adalah inputan yang berada di jalur I0, yaitu nol (0).\r\nDan rangkaian ini bersifat active low, yaitu rangkaian yang akan\r\naktif ketika diberi nilai logika nol (0).\r\n2. Percobaan Demultiplexer\r\nBerikut ini adalah rangkaian daripada demultiplexer.\r\n\r\nGambar 3. 2 Rangkaian demultiplexer\r\n\r\nPada rangkaian diatas didapat data pada tabel kebenaran\r\nsebagai berikut :\r\n\r\n11\r\n\r\nTabel 3 2 Hasil Percobaan Demultiplexer\r\n\r\n̅ ̅ E2 ̅ ̅ ̅ ̅ ̅ ̅ ̅ ̅\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nPada percobaan kedua sama seperti percobaan pertama\r\ndimana nilai output diperngaruhi oleh niali input dari A. Baik\r\nA0,A1.dan A2. Namun pada percobaan kedua ini nilai E0 dan E1\r\nharus sama dengan supaya pada output ada nilai yang keluar.\r\nKarena pada percobaan kedua ini bersifat active low dan E2 harus\r\nbernilai 1 karena bersifat active high supaya rangkaian tersebut\r\ndapat aktif. Pada percobaan kali ini bekerja dengan cara\r\nmengkonversikan bilangan biner terhadap bilangan oktal.\r\n3. Dekoder BCD ke 7 Segmen\r\nBerikut ini adalah rangkaian dari decoder BCD ke 7 segmen.\r\n\r\nGambar 3. 3 rangkaian decoder BCD ke 7 segmen\r\n\r\nPada rangkaian diatas didapat data pada tabel kebenaran berikut ini\r\n:\r\n\r\nTabel 3 3 Hasil Rangkaian Decoder BCD\r\n\r\nLT Blanking Bentuk Display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n\r\n12\r\n\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 0\r\n1 1 0 0 1 0 1\r\n1 1 0 0 1 1 2\r\n1 1 0 1 0 0 3\r\n1 1 0 1 0 1 4\r\n1 1 0 1 1 0 5\r\n1 1 0 1 1 1 6\r\n1 1 1 0 0 0 7\r\n1 1 1 0 0 1 8\r\n1 1 1 0 1 1 9\r\n1 1 1 1 0 0 c\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0 u\r\n1 1 1 1 1 1\r\n\r\nPada percobaan ini kita melakukan proses decoding.\r\nDimana pada percobaan ini kita dapat menguraikan isyarat pada\r\nbahasa mesin digital ataupun computer yang mengandung unsur\r\ndigital di konversikan menjadi bilangan decimal sehingga dapat\r\ndipahami oleh manusia. Pada percobaan kali ini input LT\r\nberfungsi sebagai penguji lampu dari 7 segment dan Blanking\r\nberfungsi sebagai pengosongan 7 segment sehingga angka yang\r\nada pada 7 segment dapat diisi kembali atau diganti dengan angka\r\nyang lainnya. Dan dapat dilihat, pada saat nilai LT bernilai nol (0)\r\ndan Blanking bernilai X (bebas) dan juga pada saat LT bernilai\r\nsatu (1) dan Blanking bernilai nol (0) maka display tidak\r\nmenampilkan bentuk apapun walaupun sudah diberi inputan\r\nsedangkan pada saat LT dan Blanking bernilai satu (1) maka\r\ninputan yang diberikan pada rangkain tersebut akan menampilkan\r\nbentuk-bentuk angka pada displaynya sesuai dengan angka biner\r\nyang merepresentasikan angka desimal tersebut. Misal, inputannya\r\n0110 maka, display akan menampilkan angka enam (6) dan karena\r\n7 segment ini hanya satu (1) bit maka, display akan menampilkan\r\nbentuk-bentuk aneh lainnya.\r\n\r\n13\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\nAdapun kesimpulan yang didapat pada percobaan kali ini adalah\r\nsebgai berikut :\r\n1. Multiplexer merupakan sebuah rangkaian logika yang terdiri banyak\r\nnya inputan tetapi hanya memiliki satu nilai output saja. Sedangkan\r\ndemultiplexer kebalikan daripada multiplexer.\r\n2. Multiplexer berfungsi terhadap tranmisi data, sedangkan\r\nDemultiplexer berfungsi terhadap system komunikasi\r\n3. Encoder adalah sebuah piranti yang digunakan untuk mengubah\r\nsuatu sistem bilangan digital (contohnya, sistem bilangan desimal)\r\npada inputnya menjadi sistem bilangan biner pada outputnya.\r\nsedangakan Decoder adalah sebuah piranti yang digunakan untuk\r\nmengubah bilangan biner pada bagian inputnya menjadi bilangan\r\nlainnya (contohnya, desimal) sehingga dapat dimengerti oleh\r\nmanusia atau dengan kata lain, decoder adalah penerjemah atau\r\npengurai sandi.\r\n4. Encoder berfungsi sebagai rangakain untuk mengkodekan data input\r\nmejadi data bilangan dengan format tertentu. Encoder berfungsi\r\nsebagai rangakain untuk mengkodekan data input mejadi data\r\nbilangan dengan format tertentu.', 'LINDU SURYA TELAUMBANUA', 'UNIT 1');
INSERT INTO `plagiator_postmodel` (`id`, `nim`, `isi_laprak`, `nama`, `unit`) VALUES
(560, '3332210022', 'Multiplekser merupakan rangkaian yang meikliki banyak masukan\r\ndan memiliki satu keluaran. Yang dimana terlihata pada tabel terdapat\r\nempat masukan yang dipilih untuk nilainya menjadi keluaran. Pda tabel\r\nterlihat bahwa I merupakan inputnya, Y merupakan outputnya, dan A\r\nmerupakan selectornya dalam menentukan selectornya dapat terlihat pada\r\noutputnya dimana outputnya berjumlah 4 maka nilai 2 dipangkat berapa\r\n\r\n8\r\n\r\nagar menjadi 4 yaitu nilainya adalah 2. Sehingga selector pada percobaan\r\ntersebut terdapat 2. Dapat terlihat E pada tabel tidak memiliki garis\r\ndiatasnya yang dimana merupakan active low. Hal tersebut dibuktikan\r\ndengan saat diberi nilai 1 maka akan bersifat don’t care, tetapi ketika diberi\r\nnilai 0 maka akan aktif.\r\nA0 A1 E I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nPada tabel percobaan pertama terdapat selector yaitu A yang dimana\r\nLSB nya adalah A0 dan MSB nya adlaha A1. Dalam pembacaan biner\r\ndimulai dari MSB ke LSB jadi dibaca dari A1 ke A0. Pada kolom kedua\r\nsaat selector bernilai 00 maka menghasilkan nilai 0 maka input yang akan\r\ndi select adalah input 0. Sehingga outputnya akan menghasilkan nilai 0 yang\r\ndiperoleh dari niali inputnyta yang telah di select. Contoh selanjutnya pada\r\nkolom ke empat dimana selectornya adalah 10 berarti bernilai 2. Sehingga\r\nI2 yang akan menjadi nilai outputnya. Hal tersbut dapat diulangi untuk\r\nkolom selanjutnya.\r\n\r\nDemultiplekser adalah rangkaian yang memiliki satu masukan untuk\r\nmenghasilkan keluaran yang banyak. Pada percobaan berikut terdapat E0\r\ndan E1 yang memiliki garis diatasnya yang berarti merupakan active low.\r\nYang dimana E0 dan E1 nilainya 0 karena active low akan aktif apabila\r\ndiberi nilai 0. Pada percobaan tersebut masukan yang menjadi selectornya\r\nadalah A. Jadi dapat terlihat pada tabel bahwa masukannya berupa E\r\n\r\n9\r\n\r\nselectornya berupa A dan keluaarannya berupa 0. Pin selector disesuaiakan\r\ndengan output yang dimana 2 dipangkat 3 yaitu 8 maksudnya ketika\r\noutputnya 8 maka selectornya akan 3 bit.\r\nE0\r\n̅̅̅ E1\r\n̅̅̅ E2 A0 A1 A2 O0 O1 O2 O3 O4 O5 O6 O7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nDemultiplekser memiliki 3 selector yaitu A0, A1, A2. Input yang\r\nterdapat pada tabel yaitu 3 dan outputnya 8. Mau sebanyak apapun\r\noutputnya inputnya hanya ada 1. E yang terdapat pada tabel tersebut dapat\r\ndigabungkan dengan gerbang AND. Inputannya yang ada bersifat active\r\nhigh. Pada selector yang merupakan MSB adalah A2 dan LSB nya adalah\r\nA0. Dalam menentukan output yang berbeda dari output lainnya dilihat dari\r\nselectornya contohnya pada kolom ke lima dimana selector memiliki biner\r\n100 yang nilainya 4 maka output yang di select oleh selector yaitu O4.\r\n\r\nPada percobaan terakhir terdapat percobaan Decoder BCD Ke 7\r\nSegment yang dimana LT tidak terdapat garis diatasnya yang berarti\r\nmerupakan active high yaitu kondisi dimana akan bekerja apabila diberi\r\nnilai 1. Blanking pada percobaan berfungsi sebagai power saat blanking 0\r\nmaka display akan mati atau gelap. Pada percobaan tersbeut D merupakan\r\ninput yang dimana D3 pada tabel merupakan MSB dan D0 merupaakn LSB.\r\n\r\n10\r\n\r\nLT BLANKING D3 D2 D1 D0 DISPLAY\r\n0 X X X X X -\r\n1 0 X X X X gelap\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1 -\r\nPada tabel percobaan dapat dilihat bahwa bentuk display\r\ndipengaruhi oleh inputnya yang dimana saat inputnya 0000 maka display\r\nnya berupa 0 dan saat inputnya 0001 maka display nya adalah 1. Pada seven\r\nsegment angka terdirinya adalah 9. Jaidi disaat angka melebihi 9 maka\r\ndisplay akan berbentuk kode yang dapat dilihat pada tabel. Bentuk kode\r\npada angka yang melebihi 9 tidak ada kepastiannya dan akan berubah-ubah.\r\n\r\n11\r\nBAB IV\r\n\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\nKesimpulan yang daoat diperoleh dari percobaan tersebut adalah\r\nsebagai berukut.\r\n1. Multiplekser adalah rangkaian yang memilih banyak inputan\r\nmenjadi 1 output. Demultiplekser adalah perangkat yang memiliki\r\nbanyak output dari 1 input.\r\n2. Pada multiplekser yaitu system komunikasi. Pada demulktiplekser\r\nyaitu arithmetic logic unit.\r\n3. Pemanfaatan decoider dan encoder yaitu Encoder pada keyboard .\r\nDecoder pada memori komputer.', 'ALI RAHMAN HAMID', 'UNIT 1'),
(561, '3332210081', 'Sesuai pada data diatas, bahwa rangkaian multiplexer mempunyai\r\ninput yang bersimbol E̅ yang artinya Enabler dan di simbolnya ada tanda – yang\r\nartinya active low yang artinya akan aktif apabila diberi input 0 dan tidak akan\r\naktif jika inputnya 1. Selain input E̅, ada input yang simbolnya A0dan A1untuk\r\nmenemukan nilai keluarannya. A0 dapat dikatakan sebagai LSB dan A1 dapat\r\ndikatakan sebagai MSB. Ada juga beberapa input lain yaitu I0, I1, I2, dan I3 dan\r\ndata dari 4 input itu yang adalah faktor dari keluaran multiplexer. Pengaplikasian\r\ndari multiplekser ini terdapat pada printer komputer yang dimana printer pada\r\nkomputer memiliki beberapa input dan menghasilkan 1 output. Berikut adalah\r\nrangkaian multiplexernya :\r\n\r\n11\r\n\r\nGambar 3.1. Rangkaian Multiplekser\r\n\r\n3.2.2 Demultiplekser\r\nBerikut adalah data yang didapatkan pada percobaan kedua yaitu\r\n\r\ndemultiplexer:\r\n\r\nTabel 3.2. Data Percobaan Demultiplekser\r\n\r\nE0\r\n̅̅̅ E1\r\n̅̅̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nSeperti data diatas rangkaian ini hampir sama seperti multiplekser\r\ndikarenakan mempunyai enabler. Tetapi, pada rangkaian demultiplekser ini\r\n\r\nmemiliki 3 input enabler yang merupakan enabler 0 dan 1 tersebut yaitu active-\r\nlow yang apabila nilai pada input bernilai 0 dan enabler 2 merupakan active-high\r\n\r\nyang akan aktif apabila nilai input bernilai 1.\r\n\r\n12\r\n\r\nAda juga 3 input lain yaitu A0, A1, dan A2, yang bisa\r\nmempengaruhi output. Dengan A2 sebagai MSB dan A0 sebagai LSB. Seperti di\r\npercobaan nilai A0 senilai 0, nilai pada A2dan A2 bernilai 1. Dengan mengikuti\r\nMSB dan LSB aka diurutkan menjadi 110. Angka 110 pada biner apabila\r\ndikonversikan menjadi desimal bernilai 6. Berikut adalah gambar demultiplekser.\r\n\r\nGambar 3.2. Rangkaian Demultiplekser\r\n\r\n13\r\n\r\n3.2.3 Decoder BCD 7 Segmen\r\nPada percobaan ketiga ini yaitu percobaan pada decoder BCD 7\r\n\r\nsegmen didapatkan data sebagai berikut ini:\r\n\r\nTabel 3.3. Data Percobaan Dekoder BCD 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk Display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 A\r\n1 1 1 0 1 1 B\r\n1 1 1 1 0 0 C\r\n1 1 1 1 0 1 D\r\n1 1 1 1 1 0 E\r\n1 1 1 1 1 1 -\r\n\r\nSeperti pada data diatas bisa disimpulkan bahwa dekoder BCD 7\r\nsegmen ialah pengubahan suatu bilangan biner menjadi desimal. Angka desimal\r\npada 7 segmen ini hanya sampai 9 saja dikarenakan hanya mengandung 1 digit.\r\nDan jika sudah lebih dari sembilan akan diganti dengan huruf tergantung pada\r\nvendor dari IC yang digunakan.\r\n\r\n14\r\n\r\nDalam percobaan ini ada juga LT yang artinya Lamp Test,\r\ndigunakkan untuk dapat menampilkan output tersebut. Lalu ada pula\r\nBlanking/Backlight, yang digunakkan untuk menahan hasil dari output, apabila\r\nblanking aktif, ketika nilai input diubah – ubah maka nilai dari output tidak akan\r\nberubah sebelum blanking tersebut dimatikan.berikut adalah gambar dari\r\nrangkaian dekoder BCD 7 segmen\r\n\r\nGambar 3.3. Rangkaian Decoder BCD 7 Segmen\r\n\r\n15\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nPada percobaan unit 8 modul MSI (Medium Scale Integrated) ini didapatkan\r\nkesimpulan sebagai berikut ini:\r\n1. Multiplekser merupakan rangkaian kombinasional yang dimana\r\nmemiliki banyak input atau disebut multi-input dan hanya mempunyai\r\nsatu output atau disebut juga single-output. Sedangkan demultiplekser\r\nmerupakan rangkaian kombinasional atau gabungan yang dimana\r\n\r\nmemiliki satu input (single-input) dan memiliki banyak output (multi-\r\noutput) dengan kata lain kondisi syaratnya lebih leluasa ketimbang\r\n\r\nmultiplekser.\r\n2. Pemanfaatanya dari multiplekser atau demultiplekser ini bisa di sistem\r\nkomunikasi yang dimana mengirim suatu sinyal audio atau video.\r\n3. Decoder adalah pengubah sinyal digital ke analog yang dimana hanya\r\nbisa dimengerti oleh sistemnya saja. Sedangkan encoder adalah\r\npengubah sinyal analog ke digital yang dimana bahasanya diubah dari\r\nbahasa yang dapat dipahami oleh manusia diubah menjadi kode kode\r\nbahasa yang hanya bisa dibaca oleh sistemnya saja.\r\n4. Pemanfaatan pada decoder dan encoder yaitu contohnya misalnya ingin\r\nmengakses suatu memori pada komputer dengan suatu data.', 'FAIZ IKHWAN FIRMANSYAH', 'UNIT 1'),
(562, '3332210088', 'Pada percobaan praktikum unit 7 ini tenatang “MSI (Medium Scale\r\nIntegration)’’ terdapat beberapa percoban yang diterapkan pada modul ini yaitu\r\nmultiplekser, demultiplekser dan Decoder BCD 7 Segment berikut merupakan\r\nanalisa hasil yang sudah dilakukan :\r\n1.1.1 Multiplekser\r\n\r\nMultiplekser suata alat yang berfungsi untuk memilih masukan dari\r\nsetiap jalur masukan (Input) \'n\' dan memasukkannya ke satu jalur keluaran\r\n(Output) multiplekser dapat ilustrasikan sebagai berikut :\r\n\r\nGambar 3.1 Multiplekser\r\n\r\nPada gambar 3.1 diatas merupakan Multiplekser adalah dapat dicontohkan\r\npengaplikasiannya menjadi suatu saklar penghubung antara banyak\r\nmasukan dengan satu keluaran, yang akan ditentukan oleh suatu sinyal\r\nkendali dimana saklar tersebut terhubungkan. hasil tabel praktikum yang\r\nsudah dilakukan oleh praktikan sebagai berikut :\r\nTabel 3.1 Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n\r\n7\r\n\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nDapat dilihat jika E bernilai 1, maka rangkaian tidak akan\r\nmengeluarkan keluaran apapun, sedangkan jika E-nya bernilai 0, akan\r\nkeluar ouput, yang berarti rangkaian ini bersifat active low. Dilihat dari\r\ntabel bahwa, jika A0 dan A1 nya bernilai 0, maka output akan mengabil\r\ndari input I0, jika A0=1 dan A1=0, maka akan mengambil I1, A0 dan\r\nA1=1 mengambil I3 dan seterusnya\r\n\r\n1.1.2 Demultiplekser\r\n\r\nTabel 3.2 Demultiplekser\r\n\r\nE0\r\n̅̅̅ dan E1\r\n̅̅̅ harus bernilai nol (0) karena keduanya bersifat Active\r\nLOW Active Low adalah rangkaian logika yang jika nilai inputannya nol\r\nmaka rangkaian akan mati, E2 harus bernilai satu (1) karena bersifat\r\nActive HIGH adalah rangkaian logika yang jika nilai inputannya satu\r\nmaka rangkaian akan aktif dan dapat digunakan pada percobaan ini.\r\nPada percobaan ini mengkonversi bilangan biner ke bilangan oktal maka\r\nA0: 20\r\n, A1: 21\r\n, dan A2: 22\r\n\r\n. Misal, pada A0 bernilai 0 dan A1 = A2 = 1 maka,\r\n\r\ndiperoleh\r\n\r\n0 + (2\r\n1\r\n) + (2\r\n2\r\n) = 0 + 2 + 4 = 6\r\n\r\nDan hasilnya adalah enam (6), enam (6) menunjukkan posisi dari output\r\nyang bernilai satu (1), yaitu O6.\r\nE̅0 E̅1 E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\n8\r\n\r\n1.1.3 Dekoder BCD ke 7 Segmen\r\n\r\nSeven Segment merupakan segmen yang digunakan untuk\r\nmenampilkan decimal, seperti namanya terdidi dari 7 segmen. Rangkaian\r\nDecoder BCD terhadap Seven Segment berfungsi sebagai penampil\r\nmasukkan yang awalnya biner, menjadi decimal. Percobaan ini\r\nmenghasilkan data:\r\n\r\nTabel 3.3 Dekoder BCD ke 7 Segmen\r\n\r\nLT berfungsi sebagai penguji lampu dari 7 segment dan Blanking\r\nberfungsi sebagai pengosongan 7 segment sehingga angka yang ada pada\r\n7 segment dapat diisi kembali atau diganti dengan angka yang lainnya.\r\nDan dapat dilihat, saat nilai LT bernilai nol (0) dan Blanking bernilai X\r\n(bebas) dan juga pada saat LT bernilai satu (1) dan Blanking bernilai nol\r\n(0) maka display tidak menampilkan bentuk apapun walaupun sudah\r\ndiberi inputan.\r\nLT Blanking D1 D1 D1 D1\r\n\r\nBentuk\r\nDisplay\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 1 c\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1 u\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1\r\n\r\n9\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerdasarkan pada praktikum yang telah dilakukan, mengenai “MSI” dapat\r\ndiambil kesimpulan sebagai berikut :\r\n1. Multiplekser adalah piranti yang mengeluarkan satu output dari beberapa\r\ninput, dan demultiplekser adalah memasukan satu inputan namun memiliki\r\nbeberapa output.\r\n2. Multiplekser dan Demultiplekser dimanfaatkan pada perangkat-perangkat\r\npengolah data seperti CPU.\r\n3. Rangkaian decoder digunakan untuk mengembalikan proses encoding\r\nsehingga dapat dilihat informasi aslinya, sedangkan encoder berfungsi\r\nuntuk mengkodekan data input menjadi data bilangan format tertentu.\r\n4. Encoder dan Decoder bermanfaat untuk melakukan pengoprasian apapun\r\npada computer. Memudahkan manusia mengerti data yang diinputkan dan\r\njuga memudahkan mesin membaca data yang diinputkan.', 'SAIF ADITYA RACHMAN', 'UNIT 1'),
(563, '3332210020', 'Pin A0, dan A1 adalah pin yang berfungsi untuk mengatur saluran\r\ninputan yang diberikan dengan keluaran yang akan dihasilkan. Apabila\r\npada percobaan ini A0 dan A1 bernilai sama yaitu 0, maka output-an\r\nyang dihasilkan akan sesuai dengan input yang diberikan pada input\r\nI0. Saat A0 = 1 dan A1 = 0, output yang dihasilkan akan sesuai dengan\r\ninput I1. Pada saat nilai A0 = 0 dan A1 = 1, putput yang akan dihasilkan\r\nsesuai dengan input I2. Adapun saat nilai A0 = 1 dan A1 = 1, maka\r\noutput yang dihasuilkan akan sesuai nilainya dengan input I3.\r\nSedangkan pin E adalah gerbang untuk mengaktifkan atau\r\nmenonaktifkan rangkaian.\r\nRangkaian ini merupakan rangkaian active low, dimana\r\nrangkaian tersebut akan aktif apabila diberi inputan bernilai 0 atau low.\r\nHasil percobaan tersebut ditunjukkan dengan tabel sebagai berikut.\r\n\r\n12\r\n\r\nTabel 3.1 Percobaan Multispeker\r\n\r\nA0 A1 Eത I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nGambar 3.5.Rangkaian Logika Multiplekser\r\n\r\n13\r\n\r\n3.2.2 Percobaan Demultiplekser\r\n\r\nPercobaan ini dilakukan berdasarkan rangkaian yang disusun\r\nsebagai berikut.\r\n\r\nGambar 3.6. Rangkaian Demultiplekser[2]\r\nOutput yang dihasilkan dari rangkaian demultiplekser sangat\r\nbergantung dengan pin Enable (E) dan selector (A) pada rangkaian\r\ntersebut. Pin Enable berfungsi sebagai gerbang untuk mengaktfkan\r\natau menonaktifkan rangkaian tersebut. Adapun pada rangkaian yang\r\ntelah diujikan, rangkaian tersebut akan aktif apabila nilai E̅ 0 = 0,\r\nE̅ 1 = 0, dan E2 = 1.\r\nPercobaan ini bertujuan untuk mengolah data dari bilangan\r\nbiner ke bilangan oktal dengan menggunakan 3 buah inputan. Output\r\nyang dihasilkan dapat ditentukan melalui data yang diberikan pada\r\nselector. Untuk menentukan hasilnya, kita harus menukar pembacaan\r\nposisi LSB(least significant bit) dan MSB (most significant bit) pada\r\ninputan yang diberikan. Saat input selector bernilai\r\n0 atau A0 = A1 = A2 = 0, maka output yang dihasilkan berada\r\ndi saluran O0. Pada saat input selector bernilai 1 atau A0=0, A1=0,\r\ndan A2=1, kita perlu menukar LSB dan MSB masukan tersebut\r\nmenjadi A0=1, A1=0, dan A2=0. Sehingga, output yang dihasilkan\r\nakan bernilai 4 dan saluran yang akan dilewati adalah saluran O4. Hal\r\n\r\n14\r\n\r\nini berlaku untuk inputan berapapun pada rangkaian Demultiplekser.\r\nTabel 3.2. Hasil Percobaan Demultiplekser\r\n\r\nE̅0 E̅1 E2 A0 A1 A2 O0 O1 O2 O3 O4 O5 O6 O7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nGambar 3.7. Percobaan Demultiplekser\r\n3.2.3 Percobaan Dekoder BCD ke 7 Segmen\r\n\r\nPada percobaan ini, dilakukan untuk mengolah data dalam\r\nbentuk biner menjadi bilangan desimal dan ditampilkan melalui 7\r\nsegmen. Rangkaian percobaan ini dapat disusun seperti pada gambar\r\nberikut.\r\n\r\n15\r\n\r\nGambar 3.8. Percobaan Dekoder ke 7 Segmen[3]\r\nPin LT dan Blanking yang terdapat dalam rangkaian tersebut\r\nberfungsi sebagai saklara yang mengaktifkan dan menonaktifkan\r\nrangkaian tersebut. Berdasarkan hasil percobaan yang telah di\r\nlakukan, dapat disimpulkan bahwa rangkaian tersebut bersifat active\r\nhigh. Perangkat 7 Segmen hanya mampu menampilkan bilangan\r\ndesimal yang berdigit 1, seperti bilangan desimal 0-9. Sehingga pada\r\nsaat input biner bernilai lebih dari 9, maka 7 segmen tidak mampu\r\nmenampilkannya atau bentuk yang ditampilkan akan mengalami\r\nperbedaan dengan nilai sebenarnya.\r\nTabel 3.3. Hasil Percobaan Dekoder ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X\r\n1 0 X X X X\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n\r\n16\r\n\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1\r\n\r\nGambar 3.9. Rangkaian BCD to 7 Segment\r\n\r\n17\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\nDari percobaan yang telah dilakukan mengenai ‘’MSI (Medium Scale\r\nIntegration)’’, dapat diambil kesimpulan sebagai berikut.\r\n1. Multiplekser adalah piranti yang menghuungkan banyak\r\nmasukan dengan satu keluaran. Sedangkan demultiplekser\r\nmerupakan piranti yan menghubungkan satu masukan dengan\r\nbanyak keluaran.\r\n2. Piranti multiplekser dan demultipekser biasa digunakan untuk\r\nmengubah suatu masukan kedalam format tertentu.\r\n3. Rangkaian encoder 4 to 1 berarti rangkaian tersebut merubah 4\r\nbuah masukan menjadi 1 buah output. Sedangkan rangkaian\r\ndecoder 3 to 8 berarti rangkaian tersebut merubah 8 buah masukan\r\nmenjadi 8 buah output.\r\n4. Berikut rangkaian decoder menggunakan bantuan 7 segmen.', 'Tartila Dinar Haqiqi', 'UNIT 1'),
(564, '3332210006', 'terdiri dari 1 bit input, bit 4-output, dan bit control.Analisis Percobaan\r\nBerikut Analisi dari percobaan MSI sebagai berikut\r\n3.2.1 Analisis Multiplekser\r\nTabel 1.1 Multiplekser\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nPada tabel multiplekser diatas Ketika A1 = 0 dan A0 = 0, dan inputnya 1000\r\nmaka outputnya yaitu 1. Jadi output pada multiplekser tegantung pada\r\nterminal pengendali (A1 ,A0) karena untuk memilih sinyal jalur input.\r\n3.2.2 Analisis Demultiplekser\r\nTabel 1.2 Demultiplekser\r\n̅E̅0 E̅1 E2 A0 A1 A2 O̅\r\n00 O̅\r\n11 O̅\r\n22 O̅\r\n33 O̅\r\n44 O̅\r\n55 O̅\r\n66 O̅\r\n77\r\n\r\n11\r\n\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nPada tabel demultiplekser pada tabel diatas Ketika inputnya 100 (bilangan desimal\r\ndari 100 yaitu 4) maka outputnya 00001000 karena bilangan desimalnya 4 jadi 1\r\ndiletakan pada O4 begitupun dengan inputan lainnya akan mendistribusikan nilai\r\noutputnya\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\nTabel 1.3 Dekoder BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n\r\n12\r\n\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 10\r\n1 1 1 0 1 1 11\r\n1 1 1 1 0 0 12\r\n1 1 1 1 0 1 13\r\n1 1 1 1 1 0 14\r\n1 1 1 1 1 1 15\r\n\r\nPada tabel diatas saat pada percobaan bcd 7 segmen ini ada kondisi invalid yaitu\r\nKetika output diatas 9 maka akan masuk kekondisi invalid jadi output yang\r\ntertampil bukan 10 melainkan symbol c pada percobaan decoder 7segemen, IC ini\r\nmengubah biner BCD menjadi data tampilan untuk penampil 7 segment yang\r\nbekerja pada tegangan TTL\r\n\r\n13\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nKesimpulan yang didapat pada percobaan MSI ini adalah sebagai berikut:\r\n1. Multiplexer adalah mengganti banyak input jadi satu output sedangkan\r\ndemultiplexer yaitu menerima satu input lalu didistribusikan ke\r\noutputnya\r\n2. Multiplexer berfungsi untuk mengumpulkan sinyal untuk\r\ndigabungkan.sedangkan Demultiplexser berfungsi untuk memecahkan\r\nsinyal yang sudah digabungkan .\r\n3. Contoh rangkaian encoder itu adalah encoder decimal ke BCD dan\r\ncontoh rangkaian decoder itu ada BCD ke 7 segmen\r\n4. Manfaat dari ENCODER dan DECODER adalah pada penggunaan\r\nkalkulator untuk membedakan operasi apa yang dilakukan', 'RIZAL SANJAYA', 'UNIT 1'),
(565, '3332210063', 'Keluaran dari percobaan ini dipengaruhi oleh nilai A0 dan A1. Jika\r\nA0 dan A1 keduanya 0, area output menunjukkan input jalur I0. Jika\r\nA0 adalah 0 dan A1 adalah 1, seperti yang dilihat di output adalah\r\ninput jalur I2. Jika A0 adalah 1 dan A1 adalah 0, maka bagian output\r\nmenunjukkan input jalur I1. Jika keduanya A0 dan A1 memiliki nilai\r\n1, output akan menunjukkan input jalur I3. Jika A0 dan A1 keduanya\r\n0, seperti pada tabel di baris kedua, output yang ditampilkan adalah\r\ninput di baris I0, yaitu nol (0). Dan rangkaian ini aktif rendah. Ini\r\nadalah rangkaian yang menjadi aktif ketika nilai logikanya nol (0). 3.2.2 Percobaan Demultiplexer\r\nPercobaan kedua menggunakan Demultiplekser, didapatkan\r\ndata – data hasil sebagai berikut:\r\n\r\nTabel 3.2 Percobaan Demultiplekser\r\n\r\n�\r\n0\r\n�\r\n1\r\n�2 A0 A1 A2 �\r\n0 �\r\n1 �\r\n2 �\r\n3 �\r\n4 �\r\n5 �\r\n6 �\r\n7\r\n\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n\r\n12\r\n\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nUntuk melakukan percobaan kedua, nilai �0\r\ndan �1\r\nharus\r\n\r\nbernilai nol (0) karena keduanya bersifat Active LOW dan E2\r\nharus bernilai satu (1) karena bersifat Active HIGH agar\r\nrangkaiannya aktif dan dapat digunakan pada percobaan tersebut. Nilai dari A0, A1 dan A2 sangat berpengaruh untuk menentukan\r\noutput yang bernilai satu (1) dan juga dapat diketahui dengan cara\r\nperhitungan menggunakan rumus/kaidah konversi bilangan biner\r\nke bilangan oktal sebagai berikut:\r\nKarena percobaan ini mengkonversi bilangan biner ke bilangan oktal\r\nmaka A0: 2\r\n\r\n0\r\n, A1: 2\r\n1\r\n, dan A2: 2\r\n\r\n2\r\n\r\n. Misal, pada A0 bernilai 0 dan A1 = A2 = 1 maka, 0 + 2\r\n\r\n1 + 2\r\n2 = 0 + 2 + 4 = 6\r\nDan hasilnya adalah enam (6), enam (6) menunjukkan posisi\r\n\r\ndari output yang bernilai satu (1), yaitu O6. 3.2.3 Percobaan BCD Seven Segment\r\nPercobaan kedua menggunakan BCD Seven Segment, didapatkan data – data hasil sebagai berikut:\r\n\r\nTabel 3.3 Percobaan BCD Seven Segment\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X\r\n- 1 0 X X X X\r\n\r\n-\r\n\r\n13\r\n\r\n1 1 0 0 0 0\r\n0\r\n1 1 0 0 0 1\r\n1\r\n1 1 0 0 1 0\r\n2\r\n1 1 0 0 1 1\r\n3\r\n1 1 0 1 0 0\r\n4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0\r\n6\r\n1 1 0 1 1 1\r\n7\r\n1 1 1 0 0 0\r\n8\r\n1 1 1 0 0 1\r\n9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1\r\n- Pada saat percobaan ini proses yang dilakukan disebut decoding, proses ini mengkonversi isyarat mesin digital atau komputer yang\r\nberupa bilangan biner ke bilangan desimal sehingga dapat dimengerti\r\noleh manusia. Dalam percobaan ini, LT bertindak sebagai penguji 7- segmen dan blanking bertindak sebagai 7-segmen kosong, sehingga\r\nAnda dapat mengisi nomor 7-segmen atau menggantinya dengan nomor\r\nlain. Juga, jika nilai LT adalah nol (0) dan blanking bernilai X (kosong), dan jika LT bernilai 1 (1) dan blanking adalah nol (0), tampilan akan\r\nmenunjukkan Form tidak muncul. Jika nilai LT dan blanking\r\n\r\n14\r\n\r\ndimasukkan saat nilainya 1, maka saat dimasukkan ke dalam rangkaian, angka-angka ditampilkan di layar sesuai dengan angka biner yang\r\nmewakili nilai desimal. Misal, inputannya 0110 maka, display akan\r\nmenampilkan angka enam (6) dan karena 7 segment ini hanya satu (1)\r\nbit maka, display akan menampilkan bentuk – bentuk lainnya. Misal, inputannya 0110 maka, display akan menampilkan angka enam\r\n(6) dan karena 7 segment ini hanya satu (1) bit maka, display akan\r\nmenampilkan bentuk – bentuk lainnya.\r\n\r\n15\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nDari seluruh percobaan bisa diambil beberapa kesimpulan yang penting\r\nyaitu:\r\nDari seluruh percobaan bisa diambil beberapa kesimpulan yang penting\r\nyaitu:\r\n1. Mengenali piranti multiplekser dan demultiplekser. 2. Mengetahui pemanfaatan multiplexer dan demultiplexer.', 'AHMAD BUKHARI', 'UNIT 1'),
(566, '3332210041', 'Berikut adalah analisis dari percobaan yang telah dilakukan pada\r\npraktikum MSE.\r\n3.2.1 Multiplekser\r\nDari percobaan multiplekser ini, maka didapatkanlah hasil\r\nberikut.\r\n\r\nTabel 3.1 Percobaan Multiplekser\r\n\r\nA0 A1 E I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n\r\n9\r\n\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nDidapatkan hasil bahwa, 2 selektor pada percobaam yaitu A0\r\ndan A1 dapat menentukan banyaknya jumlah input. E yang bernilai 1\r\nmenyebabkan rangkaian mati, dan saat bernilai 0 rangkaian aktif. A0 dan\r\nA1 adalah selectornya, yang apabila 0 0, output-nya adalah yang berada\r\npada I0. dan apabila bernilai 1 0, outputnya bernilai I1.\r\nKesimpulannya adalah bahwa multiplekser dapat mengambil salah\r\nsatu masukan dari beberapa jalur dan hanya memiliki satu jalur nilai\r\nkeluaran.\r\n\r\nGambar 3.1 Rangkaian Multiplekser Selektor 1 0\r\nDapat dilihat pada gambar di atas yaitu ketika selektornya bernilai\r\n1 dan 0, yang terpilih adalah nilai masukan dari I1.\r\n3.1.1 Demultiplekser\r\nDidapatkanlah hasil d a r i p e r c o b a a n i n i s e b a g a i\r\nb e r i k u t .\r\n\r\nTabel 3.2 Percobaan Demultiplekser\r\n\r\nE 0 E 1 E2 A0 A1 A2 O 0 O 1 O 2 O 3 O 4 O 5 O 6 O 7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\n\r\n10\r\n\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nDidapatkan hasil pada percobaan ini, bahwa 3 selektor pada\r\ndemultiplekser yaitu A0, A1, dan A2, jumlah outputnya adalah 8. Nilai\r\noutput nya O0 sampai O7. E yang bernilai 1 menyebabkan rangkaian\r\nmati, dan saat bernilai 0 rangkaian aktif. A0, A1, dan A2 adalah\r\nselectornya yang apabila 0 0 0, keluarannya adalah O0. Dan apabila\r\nbernilai 0 1 0, output nya O2.\r\nKesimpulannya adalah demultiplekser dapat mengambil satu\r\nmasukan pada salah satu jalur dari banyak jalur pada output.\r\n\r\nGambar 3.2 Rangkaian Demultiplekser Dengan Selektor 0 1 0\r\nKetika selektornya bernilai 0 1 0 jalur keluaran yang dipilih adalah\r\nkeluaran O2.\r\n3.1.2 Dekoder BCD ke 7 Segmen\r\nDidapatkan hasil dari percobaan dekoder BCD ke 7 segmen\r\n\r\n11\r\n\r\nadalah sebagai berikut.\r\n\r\nTabel 3.3 Percobaan Dekoder BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 -\r\n1 1 1 0 1 1 -\r\n1 1 1 1 0 0 -\r\n1 1 1 1 0 1 -\r\n1 1 1 1 1 0 -\r\n1 1 1 1 1 1 -\r\n\r\nkeimpulkan rdari percobaan diatas yaitu, memiliki 7 masukan\r\nyaitu, LT sebagai pengecek fungsi segmen, blanking untuk peran saklar\r\ndidalam rangkaian yang berguna menyalakan ketika masukannya\r\nbernilai 1, dan D0, D1, D2, dan D3. Pada percobaan kali ini, nilai\r\nmaksimalnya adalah 9.\r\n\r\n12\r\n\r\nGambar 3.3 Rangkaian Dekoder BCD ke 7 Segmen Masukan 1 1 0 0\r\n\r\n13\r\n\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\nAdapun kesimpulan yang dapat diambil dari percobaan praktikum MSI ini,\r\nsebagai berikut:\r\n1. Multiplexer berfungsi menerima inputan digital dan memilih inputan yang akan\r\ndikeluarkan melalui output. Sedangkan, demultiplexer adalah sebaliknya, hanya\r\nmemiliki satu jalur inputan tetapi memiliki jalur output yang banyak.\r\n2. Pemanfaatan dari decoder dan encoder adalah remote televisi, timer microwave,\r\nkeyboard komputer.\r\n3. Rangkaian enkoder contohnya rangkaian enkoder desimal (10 line) ke BCD,\r\nsedangkan rangkaian dekoder contohnya rangkaian dekoder BCD ke 7 segmen.\r\n4. Decoder dapat menerima inputan dalam bentuk biner dan dpat mengaktifkan\r\noutputnya sesuai dengan biner inputannya. Sedangkan, encoder yaitu kebalikannya\r\ndari decoder, biasanya dalam bentuk bit.', 'DILLA ADELIA PRIONO', 'UNIT 1'),
(567, '3332200101', 'Sesuai dengan dasar teori diatas bahwa teori yang mendasar mengenai hal\r\nyang akan kita analisa di dalam unit terakhir ini. Kemudian kita akan sedikit\r\nmengkomparasi keakuratan Antara hasil secara teoritis dengan hasil secara\r\npraktik.\r\n3.2.1 Multiplexer\r\nDalam percobaan multiplexer ini sendiri secara garis besar bisa kita liat pada\r\nbagian dasar teori bagian 3.1.3. pada percobaan ini secara khusus kita akan\r\nmenguji cobakan multiplexer agar dapat membuktikan prinsip kerja multiplexer\r\nyang memliki parameter sendiri. Diantaranya, hubungan Antara jumlah input\r\nselector terhadap input data pada output yang dihasilkan. Agar dapat\r\nmemudahkan dapat kita lihat pada tabel dibawah ini.\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nTabel 3. 1 Hasil percobaan multiplexer\r\n\r\n10\r\n\r\nPada tabel diatas bisa dilihat bahwa jenis multiplexer tersebut adalah\r\nmultiplexer decoder two to four. Dimana two sendiri merupakan jumlah dari pin\r\ninput selector yang kemudian dapat mempengaruhi jumlah inputan data yang\r\njumlah nya 2 bit. Kemudian akan menghasilkan 1 buah chanel output (y) yang\r\nmemiliki arti ketika kita analogikan jumlah dari input data ketika dimisalkan\r\ndengan kode In dan jumlah dari input selector adalah An maka akan terbentuk\r\npersamaaan seperti di bawah ini.\r\nIn = 2\r\nAn ... ... ... ... ... . . (3.1)\r\n\r\nSelanjutnya kita coba jelsakan masing-masing peran pada setiap variable\r\nyang ada pada table 3.1. pertama terdapat variable E atau enable yang memiliki\r\nfungsi sebagai switch pada IC. Jika enable memiliki nilai ‘1’ maka IC multiplexer\r\ntidak akan bekerja atau menghasilkan sebuah tegangan. Akan tetapi, ketika\r\nenable bernilai ‘0’ maka IC akan bekerja atau memberikan sebuah tegangan.\r\nMaka enable sendiri pada percobaan ini berperan sebagai saklar yang memakai\r\nprinsip dari Active low.\r\nDari kedua pin selector yang ada memiliki peranan yang secara lebih khusus\r\nlagi dalam memilih nilai mana yang terdapat pada input data yang kemudian akan\r\ndikeluarkan pada variable output. Kemudian terdapat beberapa kriteria dalam\r\npembentukan output sendiri terhadap input selector yang akan dijelaskan beserta\r\ncontohnya.\r\n Ketika A0 = A1 = 1 maka output pada Y akan menunjukan nilai yang\r\nkemudian ditampilkan pada input data I3 hal ini bisa kita lihat pada table\r\nnomor 8 dan juga 9 yang dimana 11 sendiri merupakan bentuk decimal 3\r\n Ketika A0 = A1 = 0 maka output pada Y akan mengeluarkan nilai yang\r\nkemudian ditampilkan dalam input data I0, hal ini bisa kita ketahui dalam\r\ntable nomor 2 dan juga 3 yang dimana 00 sendiri adalah bentuk decimal dari\r\n0\r\n\r\n11\r\n\r\n Ketika A0 dan A1 = 1 output y sendiri akan menampilkan nilai yang\r\nkemudian ditunjukan pada input I2, hal ini bisa kita lihat dalam data pada\r\ntable baris 4 dan juga 5. Nilai 01 sendiri merupakan bentuk decimal dari 2\r\n Ketika A0 = 1 dan A1 = 0 maka keluaran Y akan menunjukan nilai yang\r\nkemudian akan ditampilkan pada input I2, hal ini bisa kita lihat dari data pada\r\ntable pada baris 6 dan 7 dimana 10 merupakan bentuk decimal dari 1\r\n\r\nDi dalam penerapanya sendiri tidak ada yang mampu menjamin bahwa teori\r\nyang dijelaskan dapat kemudian di implementasikan dengan maksimal. Hal ini\r\ndikarenakan pada suatu kondisi IC multiplexer jenis yang satu dengan jenis yang\r\nlainya memiliki prinsip kerja yang tidak serupa.\r\n3.2.2 Demultiplexer\r\nDalam uji coba selanjutnya ini, kami akan mengaudit secara khusus sekali\r\n\r\nlagi, yang bertujuan untuk mengetahui aturan fungsi Demux secara terus-\r\nmenerus. Oleh karena itu, dalam pengujian ini, kami mengaudit pedoman fungsi\r\n\r\nDemultiplexer yang memiliki batasan termasuk hubungan antara jumlah pemilih\r\ninformasi dan informasi hasil dan bentuk hasil. Agar lebih jelas kembali mari kita\r\nlihat table dibawah ini.\r\nNo E0 E1 E2 A0 A1 A2 O0 O1 O2 O3 O4 O5 O6 O7\r\n1 1 x x 0 0 0 0 0 0 0 0 0 0 0\r\n2 X 1 X 0 0 0 0 0 0 0 0 0 0 0\r\n3 X x 0 0 0 0 0 0 0 0 0 0 0 0\r\n4 0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n5 0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n6 0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n7 0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n8 0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n\r\n12\r\n\r\n9 0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n10 0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n11 0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nTabel 3. 2 Demultiplexer\r\n\r\nPada Tabel 3.2 sendiri Encoder tiga sampai delapan.. Dimana tiga atau tiga\r\nadalah jumlah pemilih info dalam bit. Pekerjaan banyak penyeleksi di Mux dan\r\nDemux pada dasarnya serupa. Namun, yang berpengaruh adalah bahwa di\r\nDemuk tugas pemilih angka menentukan seberapa banyak informasi yang\r\ndihasilkan mengingat seberapa banyak informasi yang dihasilkan merupakan\r\nvariabel dependen, sehingga Demux dapat dipastikan bukan variabel hasil, yang\r\nmerupakan salah satu variabel terikat. info adalah 1 saluran. Jika kita menerima\r\nAn adalah jumlah pemilih informasi dan On adalah jumlah informasi hasil, kita\r\ndapat membuat kondisi seperti 3.2.\r\nOn = 2\r\nIn\r\n----------(3.2)\r\n\r\nSelain itu, pada informasi dari Tabel 3.2, sangat terlihat bahwa ada tiga input\r\npemberdayaan dimana pemberdayaan itu sendiri memiliki kualitas perubahan\r\ndari IC. Meskipun ada tiga, pada dasarnya pemberdayaan itu sendiri dapat\r\nbekerja dengan pedoman Dinamis Rendah. Hal ini dapat ditunjukkan dalam tes\r\nno. 1,2 dan, 3 di mana semua hasil adalah nol mengingat fakta bahwa kondisi\r\nhasil pada enabe adalah nol. Untuk bekerja dengan klarifikasi ini, reproduksi\r\nsirkuit pemberdayaan diperkenalkan seperti yang ditampilkan pada Gambar 3.1\r\ndi bawah ini.\r\n\r\nGambar 3. 1 rangkaian simulasi enable\r\n\r\n13\r\n\r\nSelain itu, penjelasan yang lebih jelas tentang pemberdayaan demux\r\nadalah dengan menempatkan TINGGI atau 1 pada hasil berdasarkan standar\r\nuntuk nilai dua kali lipat di pemilih info yang memengaruhi pengaturan nilai 1\r\npada hasil sesuai kode paralel dari pemilih informasi. Berikutnya adalah standar\r\nuntuk demux di samping contoh yang diambil oleh para profesional.\r\n- Kapanpun A0=A1=A2=1 adalah 7(10) =111(2). Dari penetapan harga\r\npemberdayaan sekarang, nilai satu dibentuk pada O7 no. 11\r\n- Bila A0=A1=1 dan A2=0 adalah 6(10)=110(2) Dari setting harga\r\npemberdayaan sekarang, nilai satu dibingkai pada O6 no. 7\r\n- Setiap kali A0=A2=1 dan A1=0 adalah 5(10)=101(2) Dari penetapan harga\r\npemberdayaan sekarang, nilai satu dibentuk di O5 no 9\r\n- Pada saat A1= A0=0 dan A2=1 adalah 4 (10) =100(2). Dari penetapan harga\r\npemberdayaan sekarang, nilai satu dibentuk pada O4 no 5\r\n- Kapanpun A0=A1=1 dan A2=0 adalah 3(10)=11(2). Dari penetapan harga\r\npemberdayaan sekarang, nilai satu dibentuk di O3 no 10\r\n- Pada titik ketika A0=A2=0 dan A1=1 adalah 2(10)=10(2). Dari penetapan harga\r\npemberdayaan sekarang, nilai satu dibentuk pada O2 no 6.\r\n- Kapanpun A1=A2=0 dan A0=1 adalah 1(10)=1(2). Dari penetapan harga\r\npemberdayaan sekarang, nilai satu dibentuk pada O1 no 8\r\n- Kapanpun A1=A2=A1=0 adalah 0(10)=0(2). Dari penetapan harga\r\npemberdayaan sekarang, nilai satu dibentuk pada O0 no 4.\r\n\r\n3.2.3 Decorder BCD to 7 segment\r\nDalam pengujian ini, kami berencana untuk menunjukkan bahwa Decoder\r\nmampu mengubah tanda dalam Bahasa Mesin dalam 4-siklus paralel yang\r\ndisusun sebagai variabel dalam tabel dengan Variabel Dn (dari d1, d2, d3, dan\r\nd4) sebagai dua kali lipat kualitas (kualitas potensial yang muncul di suatu tempat\r\ndi kisaran 1 dan 0). Diubah ke desimal dengan menghubungkan setiap decoder\r\n\r\n14\r\n\r\ninfo ke saluran yang diberikan pada 7 fragmen untuk membentuk angka sesuai\r\ndengan aturan 7 bagian. Dalam pemeriksaan ini, diperoleh untuk mengikuti\r\ninformasi.\r\n\r\nNo LT Blanking D1 D2 D3 D4 Display\r\n1 0 X x X X x -\r\n2 1 0 x X X x -\r\n3 1 1 0 0 0 0 0\r\n4 1 1 0 0 0 1 1\r\n5 1 1 0 0 1 0 2\r\n6 1 1 0 0 1 1 3\r\n7 1 1 0 1 0 0 4\r\n8 1 1 0 1 1 1 5\r\n9 1 1 0 1 1 0 6\r\n10 1 1 0 1 0 1 7\r\n11 1 1 1 0 0 0 8\r\n12 1 1 1 0 0 1\r\n13 1 1 1 0 1 0\r\n14 1 1 1 1 0 1\r\n\r\n15 1 1 1 1 0 0\r\n\r\n16 1 1 1 1 1 1\r\n\r\n17 1 1 1 1 1 0 -\r\nTabel 3. 3 BCD to 7 segment\r\n\r\nDalam informasi putih, seperti yang telah kita pahami, transformasi\r\ndibentuk berdasarkan kontribusi ke paralel ideal untuk membingkai harga\r\n\r\n15\r\n\r\nhasil dalam struktur desimal seperti yang ditunjukkan oleh dua kali lipat\r\nyang mendekat. Kita harus menerima model di mana 0001(2) adalah jenis\r\nangka 1(10) dalam desimal dan menampilkan angka itu dalam 7 fragmen.\r\nSelain itu, ada info pekerjaan yang menarik, khususnya LT dan\r\nBlanking, yang keduanya berperan sebagai Light Test pada 7 bagian apa\r\nkemampuan untuk benar-benar melihat sifat dari tindakan ringan di 7\r\nbagian. Pada level dasar, jika nilai Lt sama dengan 0, semua lampu akan\r\nmenyala. Namun, saat Blanking adalah 0 itu mematikan lampu di 7 bagian.\r\nSelain itu, ketika 7 bagian digandakan 1001,1010,1101,1101,\r\n11000 dan 1111. Struktur desimal berikutnya tidak sejauh yang kita\r\nketahui, khususnya A, B, C, D, E, dan F belum struktur yang berbeda,\r\nmisalnya pada tabel 3.3 ini dengan alasan bahwa model IC digunakan untuk\r\nmembingkai desimal dalam 7 bagian seperti itu.\r\n\r\n16\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nDalam praktikum kali ini kita dapat menarik kesimmpulan yang akan\r\nmenjawab tujuan dari praktikum kali ini.\r\n1. Gadget Multiplexer dan Demultiplexer memiliki sifat terbalik. Yang\r\npertama adalah pemilih pekerjaan Mux mengambil bagian dalam\r\nmemilih informasi input mana yang akan muncul pada variabel hasil,\r\nsementara di Demux pemilih berpura-pura pekerjaan dalam\r\nmenempatkan nilai 1 berdasarkan kode pemilih dalam hasil.\r\n2. Kontras selanjutnya adalah kuantitas sumber informasi dan kuantitas\r\nhasil. Di Mux, jumlah informasi informasi dipengaruhi oleh jumlah\r\npemilih (kondisi 3.1) sedangkan jumlah hasil adalah satu. Sedangkan\r\nDemux kuantitas sumber data adalah satu dan kuantitas hasil\r\ndipengaruhi oleh jumlah pemilih (kondisi 3.2)\r\n3. Eksekusi aplikasi MSI sesuai spesialis adalah titik di mana kita\r\nmemainkan game NBA 2k17 (atau seri lainnya). Di menu \"MyGm\"\r\nyang memposisikan kami sebagai ketua klub NBA. Dalam gerakan\r\npemain termasuk ada teknik \"Penjelajahan Pemain\". Di mana\r\npenjelajahan Pemain ini, kita dapat memutuskan standar untuk pemain\r\nyang kita butuhkan berdasarkan batasan seperti ketepatan tiga tempat,\r\nKotak, Ambil, dan keputusan sentral lainnya yang kita butuhkan.\r\nKetika kita telah memasuki model mengingat cakupan meter yang kita\r\nbutuhkan, maka, pada saat itu, pemain yang memenuhi aturan ideal\r\nakan muncul dengan persyaratan untuk memenuhi pertukaran.\r\n\r\n17\r\n\r\n4. Decoder dalam eksplorasi ini kita mengubah struktur info decoder\r\ndalam bahasa mesin, menjadi paralel tertentu ke dalam bahasa manusia\r\ndalam struktur desimal yang ditunjukkan pada 7 bagian. Sedangkan\r\nencoder adalah sesuatu yang bertentangan dengan decoder dimana\r\ndecoder pada tingkat dasar mencoba untuk mengubah bahasa desimal\r\nmenjadi dua kali lipat.', 'Muhammad Zidan abdillah', 'UNIT 1'),
(568, '3332210096', 'Output pada percobaan ini dipengaruhi oleh nilai A0 dan A1,\r\njika pada A0 dan A1 kedua-duanya bernilai 0 maka yang ditampilkan\r\npada bagian output adalah input jalur I0. Jika pada A0 bernilai 0 dan\r\nA1 bernilai 1 maka yang ditampilkan pada bagian output adalah input\r\njalur I2. Jika pada A0 bernilai 1 dan A1 bernilai 0 maka yang\r\nditampilkan pada bagian output adalah input jalur I1. Jika pada A0\r\ndan A1 kedua-duanya bernilai 1 maka yang ditampilkan pada bagian\r\noutput adalah input jalur I3. Seperti yang pada tabel baris kedua\r\nketika A0 dan A1 kedua-duanya bernilai 0 maka output yang\r\nditampilkan adalah inputan yang berada di jalur I0, yaitu nol (0). Dan\r\nrangkaian ini bersifat active low, yaitu rangkaian yang akan aktif\r\nketika diberi nilai logika nol (0).\r\n\r\n17\r\n\r\n3.2.2 Percobaan Demultiplexer\r\n\r\nPercobaan kedua menggunakan Demultiplekser, didapatkan\r\ndata – data hasil sebagai berikut:\r\n\r\nTabel 3.2 Percobaan Demultiplekser\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0\r\n\r\nO̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n\r\n1 X X 0 0 0 0\r\n\r\n0 0 0 0 0 0 0\r\n\r\nX 1 X 0 0 0 0\r\n\r\n0 0 0 0 0 0 0\r\n\r\nX X 0 0 0 0 0\r\n\r\n0 0 0 0 0 0 0\r\n\r\n0 0 1 0 0 0 1\r\n\r\n0 0 0 0 0 0 0\r\n\r\n0 0 1 0 0 1 0\r\n\r\n0 0 0 1 0 0 0\r\n\r\n0 0 1 0 1 0 0\r\n\r\n0 1 0 0 0 0 0\r\n\r\n0 0 1 0 1 1 0\r\n\r\n0 0 0 0 0 1 0\r\n\r\n0 0 1 1 0 0 0\r\n\r\n1 0 0 0 0 0 0\r\n\r\n0 0 1 1 0 1 0\r\n\r\n0 0 0 0 1 0 0\r\n\r\n0 0 1 1 1 0 0\r\n\r\n0 0 1 0 0 0 0\r\n\r\n0 0 1 1 1 1 0\r\n\r\n0 0 0 0 0 0 1\r\n\r\nUntuk melakukan percobaan kedua, nilai E0\r\n̅̅̅ dan E1\r\n̅̅̅ harus\r\nbernilai nol (0) karena keduanya bersifat Active LOW dan E2 harus\r\nbernilai satu (1) karena bersifat Active HIGH agar rangkaiannya\r\naktif dan dapat digunakan pada percobaan tersebut. Nilai dari A0,\r\nA1 dan A2 sangat berpengaruh dalam menentukan posisi dari output\r\nyang bernilai satu (1) dan juga dapat diketahui dengan cara manual\r\nsebagai berikut:\r\nKarena percobaan ini mengkonversi bilangan biner ke\r\nbilangan oktal maka A0: 20\r\n, A1: 21\r\n, dan A2: 22\r\n\r\n. Misal, pada A0\r\n\r\nbernilai 0 dan A1 = A2 = 1 maka,\r\n\r\n18\r\n\r\n0 + (2\r\n1\r\n) + (2\r\n2\r\n) = 0 + 2 + 4 = 6\r\n\r\nDan hasilnya adalah enam (6), enam (6) menunjukkan posisi\r\ndari output yang bernilai satu (1), yaitu O6.\r\n\r\n3.2.3 Percobaan BCD Seven Segment\r\n\r\nPercobaan kedua menggunakan BCD Seven Segment,\r\ndidapatkan data – data hasil sebagai berikut:\r\n\r\nTabel 3.3 Percobaan BCD Seven Segment\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X\r\n\r\nX -\r\n\r\n1 0 X X X\r\n\r\nX -\r\n\r\n1 1 0 0 0\r\n\r\n0 0\r\n\r\n1 1 0 0 0\r\n\r\n1 1\r\n\r\n1 1 0 0 1\r\n\r\n0 2\r\n\r\n1 1 0 0 1\r\n\r\n1 3\r\n\r\n1 1 0 1 0\r\n\r\n0 4\r\n\r\n1 1 0 1 0\r\n\r\n1 5\r\n\r\n1 1 0 1 1\r\n\r\n0 6\r\n\r\n1 1 0 1 1\r\n\r\n1 7\r\n\r\n1 1 1 0 0\r\n\r\n0 8\r\n\r\n1 1 1 0 0\r\n\r\n1 9\r\n\r\n1 1 1 0 1\r\n0\r\n1 1 1 0 1\r\n1\r\n1 1 1 1 0\r\n0\r\n\r\n19\r\n\r\n1 1 1 1 0\r\n1\r\n\r\n1 1 1 1 1\r\n0\r\n\r\n1 1 1 1 1\r\n\r\n1 -\r\nDalam percobaan ini dilakukan proses yang disebut decoding,\r\nproses ini menguraikan isyarat mesin digital atau komputer yang\r\nberupa bilangan biner ke bilangan desimal sehingga dapat\r\ndimengerti oleh manusia. Pada percobaan ini, LT berfungsi sebagai\r\npenguji lampu dari 7 segment dan Blanking berfungsi sebagai\r\npengosongan 7 segment sehingga angka yang ada pada 7 segment\r\ndapat diisi kembali atau diganti dengan angka yang lainnya. Dan\r\ndapat dilihat, pada saat nilai LT bernilai nol (0) dan Blanking\r\nbernilai X (bebas) dan juga pada saat LT bernilai satu (1) dan\r\nBlanking bernilai nol (0) maka display tidak menampilkan bentuk\r\napapun walaupun sudah diberi inputan sedangkan pada saat LT\r\ndan Blanking bernilai satu (1) maka inputan yang diberikan pada\r\nrangkain tersebut akan menampilkan bentuk-bentuk angka pada\r\ndisplaynya sesuai dengan angka biner yang merepresentasikan\r\nangka desimal tersebut. Misal, inputannya 0110 maka, display\r\nakan menampilkan angka enam (6) dan karena 7 segment ini hanya\r\nsatu (1) bit maka, display akan menampilkan bentuk – bentuk aneh\r\nlainnya.\r\n\r\n20\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nAdapun hal – hal yang dapat penulis simpulkan adalah sebagai berikut.\r\n1.Multiplekser adalah suatu rangkaian yang memiliki banyak\r\nmasukan tetapi hanya memiliki satu keluaran\r\n2.Demultiplekser adalah suatu rangkaian yang hanya memiliki\r\nsatu masukan tetapi memiliki beberapa keluaran\r\n3. Encoder adalah sebuah piranti yang digunakan untuk\r\nmengubah suatu sistem bilangan digital (contohnya, sistem\r\nbilangan desimal) pada inputnya menjadi sistem bilangan\r\nbiner pada outputnya\r\n4.Decoder adalah sebuah piranti yang digunakan untuk\r\nmengubah bilangan biner pada bagian inputnya menjadi\r\nbilangan lainnya (contohnya, desimal) sehingga dapat\r\ndimengerti oleh manusia atau dengan kata lain, decoder adalah\r\npenerjemah atau pengurai sandi', 'ARIYA FERDIANSAH', 'UNIT 1');
INSERT INTO `plagiator_postmodel` (`id`, `nim`, `isi_laprak`, `nama`, `unit`) VALUES
(569, '3332190077', 'Pada praktikum unit 8 ini tentang MSI (Medium Scale Integration)\r\nterdiri dari beberapa percobaan. Setelah melakukan seluruh percobaan maka\r\nkita akan menganalisa hasil percobaan yang telah dilakukan. Berikut adalah\r\nanalisa dari masing-masing percobaan.\r\n3.2.1 Multiplekser\r\n\r\nmultipleksing adalah istilah yang digunakan untuk menunjuk ke\r\nsebuah proses di mana beberapa sinyal pesan analog atau aliran data digital\r\ndigabungkan menjadi satu sinyal. Pada percobaan ini kita akan\r\nmembuktikan cara kerja dari multiplexer tersendiri.\r\n\r\n7\r\n\r\nSetelah melakukan percobaan sesuai dengan prosedur percobaan.\r\nMaka akan mendapatkan hasil yang dituliskan pada tabel hasil percobaan.\r\nBerikut adalah tabel hasil percobaan dari percobaan yang pertama ini.\r\n\r\nTabel 3. 1 Percobaan Multiplexer\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nDapat dilihat dari tabel diatas cara kerja dari multiplexer tersendiri\r\nsecara jelas nampak pada hasil yang ada pada tabel. Namun pada\r\npenerapannya teori multiplexing tidak selamanya bekerja secara maksimal\r\ndikarenakan ada berbagai jenis IC multiplexer yang setiap jenisnya punya\r\nsistem dan cara kerja yang berbeda beda.\r\n3.2.2 Demultiplekser\r\n\r\nDemultiplexing tersendiri merupakan kegiatan memecah sinyak-\r\nsinyal yang tergabung sehingga terpisah sesuai dengan tujuannya masing\r\n\r\nmasing. Pada percobaan ini juga kita akan membuktikan cara kerja dari\r\ndemultiplekser.\r\nSetelah melakukan percobaan sesuai dengan prosedur percobaan.\r\nMaka akan mendapatkan hasil yang dituliskan pada tabel hasil percobaan.\r\nBerikut adalah tabel hasil percobaan dari percobaan kedua ini.\r\n\r\n8\r\n\r\nTabel 3. 2 Percobaan Demultiplekser\r\n\r\nE0̅̅̅̅ E1̅̅̅̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nDapat dilihat dari tabel diatas adanya hubungan dari input selector\r\nterhadap output data dan output yang terbentuk. Peranan dari jumlah\r\nselector pada multiplekser dan demultiplekser pada dasarnya sama.\r\nPerbedaannya hanya pada demultiplekser jumlah selector menetukan jumah\r\noutput data.\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\n\r\nPada percobaan ini kita akan membuktikan bahwa decoder berfungsi\r\nuntuk mengkonversi sebuat sinyal kedalam bentuk biner. Setelah\r\nmendapatkan nilai biner akan diubah kedalam bentuk decimal yang akan\r\nditampilkan pada 7 segmen.\r\nSetelah melakukan percobaan sesuai dengan prosedur percobaan.\r\nMaka akan mendapatkan hasil yang dituliskan pada tabel hasil percobaan.\r\nBerikut adalah tabel hasil percobaan dari percobaan ketiga ini.\r\n\r\n9\r\n\r\nTabel 3. 3 Dekoder BCD ke 7 Segmen\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X MATI\r\n1 0 X X X X MATI\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1 MATI\r\n\r\nDapat dilihat pada tabel diatas kita menghitung nilai decimal dari\r\nbiner-biner yang telah kita dapat dan menampilkannya pada 7 segmen.\r\nAdapun peran dari LT dan juga Blanking adalah untuk mengecek kualitas\r\nsusunan lampu pada 7 segmen.\r\n\r\n10\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\nPada praktikum unit 7 ini tentang MSI yang terdiri dari beberapa\r\npercobaan kita bisa mengambil kesimpulan. Kesimpulan yang bisa kita ambil\r\ndari percobaan yang sudah dilakukan adalah seperti berikut :\r\n1) Piranti multiplekser dan juga demultiplekser memiliki watak yang\r\nberkebalikan.\r\n2) Peranan dari multiplekser adalah untuk menggabungkan sinyal-sinyal\r\nsedangkan peranan demultiplekser adalah untuk memecah sinyal-sinyal.\r\n3) Ada banyak jenis decoder dan juga encoder. Contohnya untuk decoder ada\r\ndecoder 2 ke 4, decoder 3 ke 8, decoder 4 ke 16, dan masih banyak lagi.\r\n4) Encoder berfungsi untuk mengkodekan data input menjadi bilangan\r\ndengan format tertentu. Decoder kebalikannya, berfungsi untuk menerima\r\nbilangan dengan format tertentu sehingga kita bisa menerima informasi\r\nasli', 'ATHALLAH ZAIDAN', 'UNIT 1'),
(570, '3332210065', 'Pada percobaan ke 1 nilai outputnya adalah (0) karena E’ nya (1)\r\nPada percobaan ke 2 nilai A1(0),A0(0) E’(0) Maka input yang di ambil adalah\r\nI0(0) dan outputnya adalah 0\r\nPada percobaan ke 3 nilai A1(0),A0(0) E’(0) Maka input yang di ambil adalah\r\nI0(1) dan outputnya adalah 1\r\nPada percobaan ke 4 nilai A1(1),A0(0) E’(0) Maka input yang di ambil adalah\r\nI2(1) dan outputnya adalah 1\r\nPada percobaan ke 5 nilai A1(1),A0(0) E’(0) Maka input yang di ambil adalah\r\nI2(0) dan outputnya adalah 0\r\nPada percobaan ke 6 nilai A1(0),A0(1) E’(0) Maka input yang di ambil adalah\r\nI1(1) dan outputnya adalah 1\r\nPada percobaan ke 7 nilai A1(0),A0(1) E’(0) Maka input yang di ambil adalah\r\nI1(0) dan outputnya adalah 0\r\nPada percobaan ke 8 nilai A1(1),A0(1) E’(0) Maka input yang di ambil adalah\r\nI3(0) dan outputnya adalah 0\r\nPada percobaan ke 9 nilai A1(1),A0(1) E’(0) Maka input yang di ambil adalah\r\nI3(1) dan outputnya adalah 1\r\nJadi nilai output tergantung input dan nilai input tergantung selector,Dan untuk\r\npembacaan selector itu dari sebelah kanan ke sebelah kiri.contohnya: Jika kita lihat\r\npercobaan ke 2 yaitu ketika selektornya 0 maka kita ambil input di I0 dan outputnya\r\ntergantung dari nilai inputnya. Dan itu semua akan aktif/ON jika E’ nya adalah 0\r\n\r\n10\r\n\r\nTabel 3.2 demultiplexer\r\n\r\nE0’,E1’ = tombol on/off (1 off / 0 on)\r\nE2 = selektor\r\nA0.A1,A2,A3 = input\r\nO0’,O1’,O2’,O3’,O4’,O5’,O6’,O7’ = output\r\nX = don’t care\r\nNilai input 111,110,011\r\nPada percobaan nilai input A0(1),A1(1), A2(1) dan E2(1) Maka inputnya adalah\r\n111 jika di desimalkan adalah 7, jadi outputnya adalah O7’\r\nPada percobaan nilai input A0(1),A1(1), A2(0) dan E2(1) Maka inputnya adalah\r\n011 jika di desimalkan adalah 3, jadi outputnya adalah O3’\r\nPada percobaan nilai input A0(0),A1(1), A2(1) dan E2(1) Maka inputnya adalah\r\n110 jika di desimalkan adalah 6, jadi outputnya adalah O6’\r\nJadi nilai output tergantung input dan nilai input tergantung selector,Dan untuk\r\npembacaan selector itu dari sebelah kanan ke sebelah kiri, contohnya: Jika kita lihat\r\npercobaan [110] jadi nilai input A0(1),A1(1), A2(0) dan E2(1) Maka inputnya\r\nadalah 011 jika di desimalkan adalah 3, jadi outputnya yang kita pilih adalah\r\nO3’karena sesuai dengan inputnya yang telah di desimalkan\r\nE0’ E1’ E2 AO A1 A2 O0’ O1’ O2’ O3’ O4’ O5’ O6’ 07’\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\n11\r\n\r\nTabel 3.3 Dekoder BCD ke 7 Segmen\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X 8\r\n1 0 X X X X blank\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 invalid\r\n1 1 1 0 1 1 invalid\r\n1 1 1 1 0 0 invalid\r\n1 1 1 1 0 1 invalid\r\n1 1 1 1 1 0 invalid\r\n1 1 1 1 1 1 invalid\r\n\r\nLT = lamp test\r\nBlanking = mematikan data\r\nD3,D2,D1,D0 = Data biner\r\nBentuk display = output\r\n\r\n12\r\n\r\nPercobaan ke 1 ketika LT (0) maka bentuk displaynya adalah 8 ,karena prinsip\r\nlamp test adalah menguji lampu dan mengabaikan data\r\nPercobaan ke 2 ketika blanking (X) maka bentuk displaynya adalah blank/mati\r\n,karena prinsip blanking adalah blank/mati\r\nPercobaan ke 3 ketika D3(0),D2(0),D1(0),D0(0) maka bentuk displaynya adalah 0\r\nkarena decimal 0000 adalah 0\r\nPercobaan ke 4 ketika D3(0),D2(0),D1(0),D0(1) maka bentuk displaynya adalah 1\r\nkarena decimal 0001 adalah 1\r\nPercobaan ke 5 ketika D3(0),D2(0),D1(1),D0(0) maka bentuk displaynya adalah 2\r\nkarena decimal 0010 adalah 2\r\nPercobaan ke 6 ketika D3(0),D2(0),D1(1),D0(1) maka bentuk displaynya adalah 3\r\nkarena decimal 0011 adalah 3\r\nPercobaan ke 7 ketika D3(0),D2(1),D1(0),D0(0) maka bentuk displaynya adalah 4\r\nkarena decimal 0100 adalah 4\r\nPercobaan ke 8 ketika D3(0),D2(1),D1(0),D0(1) maka bentuk displaynya adalah 5\r\nkarena decimal 0101 adalah 5\r\nPercobaan ke 9 ketika D3(0),D2(1),D1(1),D0(0) maka bentuk displaynya adalah 6\r\nkarena decimal 0110 adalah 6\r\nPercobaan ke 9 ketika D3(0),D2(1),D1(1),D0(1) maka bentuk displaynya adalah 7\r\nkarena decimal 0111 adalah 7\r\nPercobaan ke 9 ketika D3(1),D2(0),D1(0),D0(0) maka bentuk displaynya adalah 8\r\nkarena decimal 1000 adalah 8\r\nPercobaan ke 9 ketika D3(1),D2(0),D1(0),D0(1) maka bentuk displaynya adalah 9\r\nkarena decimal 1001 adalah 9\r\nPercobaan ke 10,11,12,13,14,15 maka bentuk displaynya akan INVALID karena\r\ndecimal hanya sampai 9 saja jika lebih dari 9 maka akan masuk ke INVALID\r\nJadi bentuk display tergantung dari output yang telah di desimalkan ketika\r\nD3(0),D2(0),D1(0),D0(1) maka bentuk displaynya adalah 1 karena decimal 0001\r\nadalah 1 ,jadi bentuk displaynya berbentuk angka 1. Dan kondisi invalid itu ketika\r\nangka display setelah berbentuk angka 9 karena decimal itu hanya sampai angka 9\r\nsaja jika lebih dari angka 9 maka akan masuk ke invalid\r\n\r\n13\r\nBAB IV\r\nKESIMPULAN\r\n\r\n1. Multiplexer itu memperkecil data selector output (banyak input)dan\r\nDemultiplexer adalah memperkecil data selector input (banyak output)\r\n2. Pemanfaatan Multiplexer dan Demultiplexer adalah di bagian komunikasi\r\ndan fungsinya untuk menghemat penggunaan chanel\r\n3. Decoder adalah pengubahan angka decimal menjadi biner sedangkan\r\nencoder adalah mengubah angka biner menjadi decimal\r\n4. Decoder dan encoder fungsinya adalah untuk kita bisa berkomunikasi\r\ndengan mesin', 'MOGA MAKMUR', 'UNIT 1'),
(571, '3332210026', 'Pada tabel multiplekser diatas Ketika A1 = 0 dan A0 = 0, dan inputnya 1000\r\nmaka outputnya yaitu 1. Jadi output pada multiplekser tegantung pada\r\nterminal pengendali (A1 ,A0) karena untuk memilih sinyal jalur input.\r\n3.2.2 Analisis Demultiplekser\r\nTabel 1.2 Demultiplekser\r\nPada tabel demultiplekser pada tabel diatas Ketika inputnya 100 (bilangan desimal\r\ndari 100 yaitu 4) maka outputnya 00001000 karena bilangan desimalnya 4 jadi 1\r\ndiletakan pada O4 begitupun dengan inputan lainnya akan mendistribusikan nilai\r\noutputnya\r\nPada tabel diatas saat pada percobaan bcd 7 segmen ini ada kondisi invalid yaitu\r\nKetika output diatas 9 maka akan masuk kekondisi invalid jadi output yang\r\n\r\n12\r\n\r\ntertampil bukan 10 melainkan symbol c pada percobaan decoder 7segemen, IC ini\r\nmengubah biner BCD menjadi data tampilan untuk penampil 7 segment yang\r\nbekerja pada tegangan TTL\r\n\r\n13\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nKesimpulan yang didapat pada percobaan MSI ini adalah sebagai berikut:\r\n1. Multiplexer adalah mengganti banyak input jadi satu output sedangkan\r\ndemultiplexer yaitu menerima satu input lalu didistribusikan ke\r\noutputnya\r\n2. Multiplexer berfungsi untuk mengumpulkan sinyal untuk\r\ndigabungkan.sedangkan Demultiplexser berfungsi untuk memecahkan\r\nsinyal yang sudah digabungkan .\r\n3. Contoh rangkaian encoder itu adalah encoder decimal ke BCD dan\r\ncontoh rangkaian decoder itu ada BCD ke 7 segmen\r\n4. Manfaat dari ENCODER dan DECODER adalah pada penggunaan\r\nkalkulator untuk membedakan operasi apa yang dilakukan', 'MUHAMMAD YAFI AGUNG', 'UNIT 1'),
(572, '3332210045', 'Setelah kita melakukan percobaan dan mendapatkan datra, kita bisa mengetahui\r\nbahwa ketika diinputkan nilai 8 atau nilai 8 keatas maka hasilnya atau ynya akan\r\nbernilai 1, sedangkan memiliki inputan dibawah 8 akan memiliki nilai keluaran atau\r\ny 0.\r\nKemudian kita melakukan percobaan Demultiplexer dan mendapatkan\r\nhasil sebagai berikut\r\n\r\nTabel 3.2 Demultiplekser\r\n\r\nE̅0 E̅1 E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nSetelah kita melakukan percobaan dan kita telah mendapatkan data kita bisa\r\nmengetahui bahwa ketika pin kontrolnya memiliki nilai 7 atau menyala semua maka\r\npada keluaran atau outputnya di segment 7 akan menyala. Apabila salah satu pin\r\nkontrol atau semua pin kontrol tidak menyala maka pada outputnya pun tidak akan\r\nmenyala.\r\nKemudian kita melakukan percobaan dan mendapatkan data sebagai berikut:\r\n\r\nTabel 3.3 Dekoder BCD ke 7 Segment\r\n\r\nLT Blanking D1 D1 D1 D1 Bentuk Display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n\r\n7\r\n\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 0\r\n1 1 0 0 1 0 1\r\n1 1 0 0 1 1 2\r\n1 1 0 1 0 0 3\r\n1 1 0 1 0 1 4\r\n1 1 0 1 1 0 5\r\n1 1 0 1 1 1 6\r\n1 1 1 0 0 0 7\r\n1 1 1 0 0 1 8\r\n1 1 1 0 1 1 9\r\n1 1 1 1 0 0 c\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0 u\r\n1 1 1 1 1 1\r\n\r\nDari percobaan ketiga ini kita bisa mengetahui bahwa prinsip kerja IC tersebut\r\nadalah sebagai decoder BCD ke seven segment, yaitu yang fungsinya untuk me\r\npermudah dalam menggunakan seven segment. Cara kerjanya dengan\r\nmenggunakan dengan menterjemahkan empat input bilangan biner kedalam bentuk\r\ndesimal yaitu angka 0-9 yang akan ditampilkan oleh seven segment\r\n\r\n8\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerikut adalah kesimpulan setelah melakukan percobaan MSI ( Medium Scale\r\nIntegration).\r\n1. Multiplexer adalah sebuah rangkaian khusus yang dimana memiliki banyak\r\ninputan kemudian dari banyaknya inputan tersebut akan di seleksi sehingga\r\nyang akan keluar pada output hanya satu inputan dari banyaknya inputan\r\nyang ada. Sedangkan demultiplexer hanya memiliki satu inputan tetapi\r\nmendistribusikan kebeberapa output.\r\n2. Penggunaan dari multiplexer ini bisa kita temukan pada relay, sistem\r\ntransisi dan station tribunary. Sedangkan pada demultiplexer bisa kita\r\ntemukan pada arithmetic logic unit\r\n3. Rangkaian decoder adalah rangkaian kombinasi yang memeiliki 2 buah\r\ninputan yang dimana salah sastu inputnya akan menjadi tinggi apabila\r\ndecorder diaktifkan ,sedangkan encoder adalah kebalikan dari decoder\r\nyaitu, sebuah rangkaian yang memiliki fungsi untuk mengkodekan data\r\ninput menjadi data bilangan dengan format tertentu.\r\n4. Pemanfaatan decoder adalah untuk memudahkan kita dalam menyatakan\r\ndata pada 7 segmen. Dan memudahkan manusia mengerti data yang\r\ndiinputkan,sedangkan pemanfaatan encoder adalah untuk mengkodekan\r\ndata input menjadi data bilangan dengan format tertentu. Dan juga\r\nmemudahkan mesin membaca data yang diinputkan.', 'KHOIRUN NUFAIL RAMADHAN', 'UNIT 1'),
(573, '3332210073', 'Setelah melakukan percobaan mengenai Medium Scale Integration\r\ndidapatkan hasil percobaan berdasarkan analisis berikut ini.\r\nA. Multiplekser 4 to 1\r\nPada percobaan pertama mengenai Multiplekser 4 to 1 digunakan sebuah\r\nrangkaian sebagai berikut ini.\r\n\r\nGambar 3.1 Rangkaian Multiplekser 4 to 1\r\n\r\nSehingga berdasarkan gambar 3.1, didapatkan hasil percobaan sebagai\r\ntabel berikut ini.\r\n\r\nTabel 3.1 Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nBerdasarkan percobaan Multiplekser 4 to 1, terdapat A0 dan A1 sebagai\r\npengendali sedangkan nilai I1, I2 dan I3 sebagai masukan yang dikendalikan oleh\r\n\r\n8\r\n\r\nA0 dan A1 sehingga dihasilkan hanya satu output. Dengan pengaturan bahwa E\r\nsebagai enable yang akan aktif ketika terdapat nilai 0 (active low). Adapun ketika\r\nA0 dan A1 dengan enable 0 dengan diberikan input logika 0 sedangkan pada I1\r\nsampai sampai 13 diberikan input logika 0 maka outputnya akan 0. Sedangkan pada\r\nA0 dan A1 nya enable diberikan logika nol dengan I0 sama dengan 1 dan I1 sampai\r\nI3 diberikan 0 maka outputnya akan bernilai 1. Sehingga pemilihan jalur output\r\npada Multiplekser 4 to 1 didasari dengan kondisi E (Enable), A0 dan A1, dan juga\r\nnilai I0 hingga I3.\r\nB. Demultiplexer 1 to 8\r\nAdapun percobaan kedua mengenai Demultiplekser 1 to 8 digunakan\r\nsebuah rangkaian sebagai berikut ini.\r\n\r\nGambar 3.2 Demultiplekser 1 to 8\r\n\r\nSehingga jika digunakan rangkaian tersebut didapatkan sebuah hasil\r\npercobaan Demultiplekser seperti pada tabel berikut ini.\r\nTabel 3.2 Demultiplekser\r\n\r\nE̅0 E̅1 E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\n\r\n9\r\n\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nDianalisis pada nilai = 001 011 101\r\nPada Percobaan kali ini, peran dari A0, A1 dan A2 sebagai pengendali untuk\r\npemilih yang akan dihubungkan, sehingga input tersebut akan mempengaruhi\r\nbagaimana pengeluarannya. Sedangkan untuk nilai input pada E0 dan E1 haruslah\r\nbernilai 0, hal ini dikarenakan E0 dan E1 memiliki sifat active low agar dapat\r\nbekerja. Adapun E2 pada percobaan ini berkebalikan dari E0 dan E1, sehingga nilai\r\nE2 harus bernilai 1 yang dimana hal tersebut dikarenakan sifat dari E2 yaitu active\r\nhigh.\r\nAdapun jika nilai input pada A0,A1 dan A2 adalah 001 (dibalik menjadi 100\r\nkarena LSB MSB) hasil output akan keluar angka 1 pada O4. Hal ini dapat terjadi\r\nkarena pengendali pada A0,A1 dan A2 sesuai pada bilangan biner 100 yang jika\r\ndikonversikan akan menghasilkan desimal 4. Sehingga konsep tersebutpun sama\r\npada A0,A1 dan A2 pada input 011 yang jika dibalik berdasarkan LSB MSB\r\nmenjadi 110. Dimana 110 adalah biner dari desimal 6, sehingga output 1 akan\r\nmuncul pada O6. Begitupun juga pada input A0, A1 dan A2 dengan nilai 101 yang\r\ndibalik berdasarkan LSB MSB akan menjadi sama yaitu 101. Sehingga pada output\r\n1 akan muncul pada O5 yang dimana hal ini disebabkan oleh biner 101 jika diubah\r\nke desimal adalah 5.\r\nC. Decoder BCD 7 Segment\r\nPada percobaan ketiga mengenai Decoder BCD 7 Segment, digunakan\r\nrangkaian seperti pada gambar berikut ini.\r\n\r\n10\r\n\r\nGambar 3.3 Decoder BCD 7 Segment\r\n\r\nAdapun hasil dari penggunaan rangkaian yang sesuai pada gambar 3.3\r\nadalah pada tabel berikut ini.\r\n\r\nTabel 3.3 Dekoder BCD ke 7 Segmen\r\n\r\nLT Blanking D1 D1 D1 D1 Bentuk Display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 0\r\n1 1 0 0 1 0 1\r\n1 1 0 0 1 1 2\r\n1 1 0 1 0 0 3\r\n1 1 0 1 0 1 4\r\n1 1 0 1 1 0 5\r\n1 1 0 1 1 1 6\r\n1 1 1 0 0 0 7\r\n1 1 1 0 0 1 8\r\n1 1 1 0 1 1 9\r\n1 1 1 1 0 0 c\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0 u\r\n1 1 1 1 1 1\r\nSehingga berdasarkan tabel di atas, didapatkan bahwa konsep penggunaan\r\nDecoder BCD 7 Segment adalah merubah sebuah input biner kedalam output berupa\r\ndesimal. Dimana nilai D merupakan bilangan biner yang diinputkan, sehingga\r\nterdapat nilai desimal dari 0 hingga 9 yang dapat terbentuk. Adapun kondisi dimana\r\noutput tidak dapat menampilkan adalah ketika melebihi dari 9. Hasil tersebut\r\n\r\n11\r\n\r\ndinyatakan invalid, hal ini disebabkan oleh melebihinya kapasitas kemampuan\r\nsebuah Decoder yang hanya mampu mencapai desimal 9.\r\n\r\n12\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nSetelah melakukan percobaan mengenai MSI, dapat ditarik sebuah kesimpulan\r\nsebagai berikut ini.\r\n1. Multiplekser merupakan rangkaian yang terdapat banyak input dengan\r\nsatu output. Sedangkan Demultiplekser merupakan kebalikannya.\r\n2. Kegunaan dari Multiplekser adalah sebagai pengubah data banyak menjadi\r\nsatu kesatuan. Sedangkan Demultiplekser merupakan data yang berupa\r\nsatu menjadi lebih banyak.\r\n3. Encoder bahwasanya merupakan pengubah sistem dari desimal menjadi\r\nsebuah bilangan biner. Sedangkan decorder merupakan bilangan biner\r\nmenjadi sebuah bilangan desimal.\r\n\r\n4. Decorder BCD 7 Segment sangat diperlukan agar memudahkan keperluan-\r\nkeperluan manusia mengenai gerbang logika.', 'MUHAMMAD TEGAR ALKAUSAR CAHYADI', 'UNIT 1'),
(574, '3332210025', 'Dapat dilihat jika E bernilai 1, maka rangkaian tidak akan mengeluarkan\r\nkeluaran apapun, sedangkan jika E-nya bernilai 0, akan keluar ouput, yang berarti\r\nrangkaian ini bersifat active low. Dilihat dari tabel bahwa, jika A0 dan A1 nya\r\nbernilai 0, maka output akan mengabil dari input I0, jika A0=1 dan A1=0, maka\r\nakan mengambil I1, A0 dan A1=1 mengambil I3 dan seterusnya.\r\n\r\n2. Percobaan Demultiiplekser\r\nData yang didapat setelah dilakukannya percobaan yaitu:\r\nTabel 3. 2 Demultiplekser\r\n\r\nEഥ0 Eഥ1 E2 A଴ Aଵ Aଶ Oഥ0 Oഥ1 Oഥ2 Oഥ3 Oഥ4 Oഥ5 Oഥ6 Oഥ7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nE଴\r\nതതത dan Eଵ\r\nതതത harus bernilai nol (0) karena keduanya bersifat Active LOW\r\nActive Low adalah rangkaian logika yang jika nilai inputannya nol maka rangkaian\r\nakan mati, E2 harus bernilai satu (1) karena bersifat Active HIGH adalah rangkaian\r\nlogika yang jika nilai inputannya satu maka rangkaian akan aktif dan dapat\r\ndigunakan pada percobaan ini.\r\nPada percobaan ini mengkonversi bilangan biner ke bilangan oktal maka\r\nA0: 20\r\n, A1: 21\r\n, dan A2: 22\r\n\r\n. Misal, pada A0 bernilai 0 dan A1 = A2 = 1 maka, diperoleh\r\n0 + (2\r\nଵ) + (2\r\nଶ) = 0 + 2 + 4 = 6\r\n\r\n8\r\n\r\nDan hasilnya adalah enam (6), enam (6) menunjukkan posisi dari output yang\r\nbernilai satu (1), yaitu O6.\r\n\r\n3.Percobaan BCD Seven Segment\r\nSeven Segment merupakan segmen yang digunakan untuk menampilkan\r\ndecimal, seperti namanya terdidi dari 7 segmen. Rangkaian Decoder BCD terhadap\r\nSeven Segment berfungsi sebagai penampil masukkan yang awalnya biner, menjadi\r\ndecimal. Percobaan ini menghasilkan data:\r\n\r\nTabel 3. 3 Dekoder BCD ke 7 Segmen\r\n\r\nLT Blanking Dଵ Dଵ Dଵ Dଵ Bentuk Display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1\r\n\r\nLT berfungsi sebagai penguji lampu dari 7 segment dan Blanking berfungsi\r\nsebagai pengosongan 7 segment sehingga angka yang ada pada 7 segment dapat\r\n\r\n9\r\n\r\ndiisi kembali atau diganti dengan angka yang lainnya. Dan dapat dilihat, saat nilai\r\nLT bernilai nol (0) dan Blanking bernilai X (bebas) dan juga pada saat LT bernilai\r\nsatu (1) dan Blanking bernilai nol (0) maka display tidak menampilkan bentuk\r\napapun walaupun sudah diberi inputan.\r\n\r\n10\r\nBAB IV\r\nPENUTUP\r\n\r\n1.6 4.1 Kesimpulan\r\nSetelah melakukan percobaan kali ini, kesimpulan yang didapat adalah:\r\n1.Multiplekser adalah piranti yang mengeluarkan 1 output dari beberapa\r\ninput, dan demultiplekser adalah kebalikannya.\r\n2.Multiplekser dan Demultiplekser dimanfaatkan pada perangkat-perangkat\r\npengolah data seperti CPU.\r\n3. Rangkaian Decoder dan Encoder bermacam.\r\n4. Encoder dan Decoder bermanfaat untuk melakukan pengoprasian apapun\r\npada computer.', 'Ilham Rizki Febriyan', 'UNIT 1'),
(575, '3332210047', 'Pada tabel tersebut didapat bahwa terdapat 3 buah input I1,I2, dan I3 dan juga terdapat\r\nsebuah output Y. Terdapat juga A0A1 sebagai selector dari sistem tersebut dan E\r\nsebagai enabler. Sistem akan melakukan proses jika E = 0 dan sistem tidak akan\r\nmelakukan proses jika E = 1, sehingga sistem ini merupakan sistem yang aktif jika\r\nkondisi bernilai ‘0’ (Active Low).\r\nPada percobaan pertama kali nilai E = 1, sehingga sistem tidak akan melakukan proses\r\nsama sekali, sehingga nilai input lainnya apapun itu (baik ‘0’ atau ‘1’) tidak akan\r\nmemengaruhinya, sebab sistem tidak berjalan.\r\nNilai dari ‘A’ berfungsi sebagai selector, maksudnya adalah A akan menunjuk salah\r\nsatu nilai yang nantinya akan menjadi output dari ketiga input-an tersebut. Misalnya,\r\npada percobaan multiplexer kali ini, saat A0 = 0 dan A1=0, itu artinya adalah biner ‘00’\r\n(nol), sehingga output yang nantinya tertampilkan adalah nilai dari input I0. Sehingga\r\npada setiap percobaan didapati hasilnya sebagai berikut ini.\r\n\r\n10\r\n\r\na) A0 = 0 dan A1 = 0, sehingga nilainya adalah 0, dan output yang akan tertampil\r\nnantinya adalah I0, yaitu 0.\r\nb) A0 = 0 dan A1 = 0, sehingga nilainya adalah 0, dan output yang akan tertampil\r\nnantinya adalah I0, yaitu 1.\r\nc) A0 = 0 dan A1 = 1, sehingga nilainya adalah 2, dan output yang akan tertampil\r\nnantinya adalah I2, yaitu 1.\r\nd) A0 = 0 dan A1 = 1, sehingga nilainya adalah 2, dan output yang akan tertampil\r\nnantinya adalah I2, yaitu 0.\r\ne) A0 = 1 dan A1 = 0, sehingga nilainya adalah 1, dan output yang akan tertampil\r\nnantinya adalah I1, yaitu 1.\r\nf) A0 = 1 dan A1 = 0, sehingga nilainya adalah 1, dan output yang akan tertampil\r\nnantinya adalah I1, yaitu 0.\r\ng) A0 = 1 dan A1 = 1, sehingga nilainya adalah 3, dan output yang akan tertampil\r\nnantinya adalah I3, yaitu 0.\r\nh) A0 = 1 dan A1 = 1, sehingga nilainya adalah 3, dan output yang akan tertampil\r\nnantinya adalah I3, yaitu 1.\r\n\r\nUntuk hubungan antara input-output dapat dilihat pada Tabel 3.1 di atas yang\r\nkolomnya diberi warna orange.\r\n\r\n3.2.2. Percobaan Demultiplexer\r\nPada percobaan mengenai Demultiplexer kali ini didapati data hasil\r\npercobaan seperti yang tertera pada Tabel 3.2 di bawah ini.\r\nTabel 3. 2 Percobaan Demultiplexer\r\n\r\nE0 E1 E2 A0 A1 A2 O0 O1 O2 O3 O4 O5 O6 O7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n\r\n11\r\n\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nDiketahui bahwa E0, E1, dan E2 merupakan input yang diberikan kepada demultiplexer\r\ndan A0, A1, dan A2 merupakan selectornya yang menghubungkan antara input dan\r\noutputnya, lalu juga terdapat O1, O2, O3, O4, O5, O6, dan O7 sebagai output-output-nya.\r\nPada percobaan ini, enablernya adalah E0 dan E1, sehingga E0 dan E1 haruslah bernilai\r\n‘0’ agar sistem dapat menjalankan prosesnya. Sehingga, jika dicermati lebih lagi, nilai\r\nyang akan diproses menjadi outputnya hanyalah nilai dari E2 saja.\r\nSehingga pada saat percobaan pertama dan kedua dari percobaan demultiplexer kali\r\nini, saat E0 = 1 maka sistem dalam kondisi tidak melakukan proses, begitupun juga\r\npada saat E1 = 1, sehingga nilai input yang lain tidak memengaruhi atau “don’t care”.\r\nKemudian pada saat E2 = 0, maka sistem baru mulai melakukan proses dengan tidak\r\nmemerdulikan nilai input dari E0 dan E1.\r\nLalu, untuk selanjutnya, pada saat E0 = 0 dan E1 = 0, sistem akan melakukan proses\r\nseperti sebagai berikut.\r\na. A0 = 0, A1 = 0, dan A2 = 0, maka selector akan memilih output ‘000’ atau ‘0’\r\nmenjadi nilai dari E2, yaitu O0 = 1.\r\nb. A0 = 0, A1 = 0, dan A2 = 1, maka selector akan memilih output ‘001’ atau ‘4’\r\nmenjadi nilai dari E2, yaitu O4 = 1.\r\nc. A0 = 0, A1 = 1, dan A2 = 0, maka selector akan memilih output ‘010’ atau ‘2’\r\nmenjadi nilai dari E2, yaitu O2 = 1.\r\nd. A0 = 0, A1 = 1, dan A2 = 1, maka selector akan memilih output ‘011’ atau ‘6’\r\nmenjadi nilai dari E2, yaitu O6 = 1.\r\n\r\n12\r\n\r\ne. A0 = 1, A1 = 0, dan A2 = 0, maka selector akan memilih output ‘100’ atau ‘1’\r\nmenjadi nilai dari E2, yaitu O1 = 1.\r\nf. A0 = 1, A1 = 0, dan A2 = 1, maka selector akan memilih output ‘101’ atau ‘5’\r\nmenjadi nilai dari E2, yaitu O5 = 1.\r\ng. A0 = 1, A1 = 1, dan A2 = 0, maka selector akan memilih output ‘110’ atau ‘3’\r\nmenjadi nilai dari E2, yaitu O3 = 1.\r\nh. A0 = 1, A1 = 1, dan A2 = 1, maka selector akan memilih output ‘111’ atau 7\r\nmenjadi nilai dari E2, yaitu O7 = 1.\r\n\r\n3.2.3. Percobaan Decoder to 7 Segment\r\nPada percobaan mengenai :Decoder to 7 Segment” kali ini didapati data\r\nhasil percobaan seperti yang tertera pada Tabel 3.3 di bawah ini.\r\nTabel 3. 3 Percobaan Decoder to 7 Segment\r\nLT Blanking D3 D2 D1 D0\r\n\r\nBentuk\r\nDisplay\r\n\r\n0 X X X X X\r\n\r\n1 0 X X X X\r\n\r\n1 1 0 0 0 0\r\n\r\n1 1 0 0 0 1\r\n\r\n13\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n0\r\n\r\n14\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1\r\n\r\nPada saat LT bernilai ‘0’, maka sistem tidak melakukan proses atau dalam kondisi ‘off’,\r\nsehingga nilai input dari manapun akan percuma atau dalam kondisi “don’t care”.\r\nKemudian pada percobaan selanjutnya LT bernilai ‘1’ sehingga sistem sudah dalam\r\nkeadaan melakukan proses, hanya saja Blanking bernilai ‘0’ sehingga sistem tidak\r\nmenampilkan hasil proses. Sehingga baik pada saat\r\nLT = 1 & Blanking = X, dan\r\nLT = 1 & Balnking = 0,\r\nkeduanya dalam kondisi berbeda tetapi, sistem dari kedua kondisi tersebut sistem tidak\r\nmenampilkan hasil apapun di display-nya.\r\nKemudian pada saat nilai LT = 1 dan Blanking = 1, maka sistem sudah melakukan\r\nproses dan juga menampilkan hasil prosesnya tersebut. Sistem melakukan proses\r\nseperti sebagai berikut ini.\r\n\r\n15\r\n\r\na. D3 = 0, D2 = 0, D1 = 0, dan D0 = 0, output bernilai ‘0’ dan display akan berbentuk\r\n‘0’.\r\nb. D3 = 0, D2 = 0, D1 = 0, dan D0 = 1, output bernilai ‘1’ dan display akan berbentuk\r\n‘1’\r\nc. D3 = 0, D2 = 0, D1 = 1, dan D0 = 0, output bernilai ‘2’ dan display akan berbentuk\r\n‘2’\r\nd. D3 = 0, D2 = 0, D1 = 1, dan D0 = 1, output bernilai ‘3’ dan display akan berbentuk\r\n‘3’\r\ne. D3 = 0, D2 = 1, D1 = 0, dan D0 = 0, output bernilai ‘4’ dan display akan berbentuk\r\n‘4’\r\nf. D3 = 0, D2 = 1, D1 = 0, dan D0 = 1, output bernilai ‘5’ dan display akan berbentuk\r\n‘5’\r\ng. D3 = 0, D2 = 1, D1 = 1, dan D0 = 0, output bernilai ‘6’ dan display akan berbentuk\r\n‘6’\r\nh. D3 = 0, D2 = 1, D1 = 1, dan D0 = 1, output bernilai ‘7’ dan display akan berbentuk\r\n‘7’\r\ni. D3 = 1, D2 = 0, D1 = 0, dan D0 = 0, output bernilai ‘8’ dan display akan berbentuk\r\n‘8’\r\nj. D3 = 1, D2 = 0, D1 = 0, dan D0 = 1, output bernilai ‘9’ dan display akan berbentuk\r\n‘9’\r\n\r\nKemudian display output setelah ‘9’ akan berbentuk tidak beraturan, itu\r\ndisebabkan karena seharusnya nilai berupa 2 digit, namun display hanya menampilkan\r\nsatu digit saja, sehingga proses dalam sistem tidak berjalan dengan baik.\r\n\r\nk. D3 = 1, D2 = 0, D1 = 1, dan D0 = 0, output bernilai ‘10’ dan display akan berbentuk\r\nacak\r\nl. D3 = 1, D2 = 0, D1 = 1, dan D0 = 1, output bernilai ‘11’ dan display akan berbentuk\r\nacak\r\n\r\n16\r\n\r\nm. D3 = 1, D2 = 1, D1 = 0, dan D0 = 0, output bernilai ‘12’ dan display akan berbentuk\r\nacak\r\nn. D3 = 1, D2 = 1, D1 = 0, dan D0 = 1, output bernilai ‘13’ dan display akan berbentuk\r\nacak\r\no. D3 = 1, D2 = 1, D1 = 1, dan D0 = 0, output bernilai ‘14’ dan display akan berbentuk\r\nacak\r\n\r\nKemudian pada saat berikutnya sistem akan me-reset.\r\np. D3 = 1, D2 = 1, D1 = 1, dan D0 = 1, sistem akan me-reset dan tidak menampilan\r\nbentuk display apapun.\r\n\r\n17\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nPada percobaan mengenai “MSI” ini didapati beberapa kesimpulan diantaranya\r\nadalah sebagai berikut ini.\r\n1. Multiplexer suatu sistem digital yang membuat sebuah output dari beberapa\r\ninput, sedangkan demultiplexer adalah suatu sistem digital yang membuat\r\nbeberapa output dari suatu input saja.\r\n2. Multiplexer dan Demultiplexer biasa digunakan secara bersamaan dalam\r\npenggunaannya, misalnya dalam sistem komunikasi dan juga suatu sistem\r\nuntuk meng-filter data-data.\r\n3. Terdapat beberapa jenis decoder dan juga encoder, jenis dari decoder maupun\r\nencoder dinamakan berdasarkan jumlah input dan outputnya. Misalnya\r\nencoder yang membuat 8 input menjadi 3 output dinamakan 8 to 3 Encoder,\r\nsedangkan decoder sebaliknya jika decoder membuat 8 output dari 3 input,\r\nmaka dinamakan 3 to 8 decoder.\r\n4. Decoder dan Encoder memiliki fungsinya, baik saat dipakai secara mandiri\r\nataupun saat dipasang secara bersamaan, biasanya encoder digunakan dalam\r\ndunia kriptografi dan juga membuat sistem keamanan, sedangkan decoder\r\nbiasa dipakai untuk membaca informasi asli yang diberikan sebelum informasi\r\ntersebut dienkripsikan.', 'Gabriel Fernando', 'UNIT 1'),
(576, '3332210071', 'Dapat dilihat pada tabel saat E atau Enable bernilai satu “1”, maka\r\ntidak akan ada keluaran yang ditampilkan atau istilah lainnya\r\n\r\n7\r\n\r\nmenjadi don’t care, Enable pula memiliki sifat active flow yaitu\r\nkebalikan, makanya saat bernilai satu “1” tidak ada keluaran yang\r\nditampilkan. Ada pula A0 dan A1 yang berfungsi sebagai selektor\r\nmasukan mana yang akan dijadikan keluaran nantinya. Percobaan\r\nmultiplekser ini juga dapat dicoba pada software proteus sebagai\r\nberikut.\r\n\r\n4Gambar 3.1 Percobaan Multiplekser pada Software Proteus\r\nTerlihat pada gambar saat A0 bernilai satu “1” dan A1 bernilai nol\r\n“0” dengan masukan I0,I1, I2, dan I3 berturut-turut bernilai 1,1,0,\r\ndan 1, maka hasil keluarannya adalah satu “1”, hal ini disebabkan\r\nkarena pada selektor (A0 dan A1) dipilih keluarannya adalah pada\r\nI1 yang bernilai satu “1” dan begitu pula pala percobaan lainnya.\r\n3.2.2. Demultiplekser\r\nPada percobaan demultiplekser yang telah dilakukan maka\r\ndidapatkan hasil yang dapat dilihat pada tabel di bawah sebagai\r\nberikut.\r\n5Tabel 3.2 Hasil Percobaan Demultiplekser\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n\r\n8\r\n\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nPada demultiplekser E0 dan E1 bersifat Active Flow, maka akan\r\naktif saat nol “0” dan akan mati saat bernilai satu “1” maka dari itu\r\npada percobaan pertama dan kedua nilai yang lain dianggap don’t\r\ncare atau tidak usah dianggap karena E0 dan E1 bernilai satu “1”\r\n(tidak aktif) maka keluarannya pun tidak akan ditampilkan atau\r\nbernilai nol “0” keseluruhannya. Percobaan demultiplekser juga\r\ndapat dilakukan pada software proteus sebagai berikut.\r\n\r\n5Gambar 3.2 Percobaan Demultiplekser pada Software Proteus\r\nDapat dilihat pada saat E2 bernilai satu “1” dan E0,E1 bernilai nol\r\n“0” maka proses akan dijalankan dan akan ada keluaran yang\r\nditampilkan. A0 sampai A2 merupakan selektor masukan mana\r\nyang akan dijadikan keluaran, pada percobaan di gambar bilangan\r\nbiner pada selektor bernilai satu maka keluarannya akan\r\nditampilkan pada jalur O1 dan begitu pun seterusnya sesuai\r\ndengan nilai decimal pada selektor.\r\n3.2.3. Dekoder BCD ke 7 Segment\r\nAdapun percobaan terakhir yang dilakukan yaitu Dekoder BCD ke\r\n7 Segment mendapatkan hasil sebagai berikut.\r\n\r\n9\r\n\r\n6Tabel 3.3 Hasil Percobaan Dekoder BCD ke 7 Segment\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X 8\r\n1 0 X X X X BLANK\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 c\r\n1 1 1 0 1 1 ↄ\r\n1 1 1 1 0 0 u\r\n1 1 1 1 0 1 c\r\n1 1 1 1 1 0 t\r\n1 1 1 1 1 1 -\r\n\r\nDari hasil percobaan di atas dapat dilihat LT (Lamp Test) dan\r\nBlanking juga bersifat Active Flow seperti E0 dan E1 pada\r\npercobaan demultiplekser sebelumnya. LT berfungsi sebagai\r\npengecek apakah lampu-lampu pada seven segment berfungsi\r\ndengan baik (menyala), sedangkan blanking digunakan untuk\r\nmereset. Dilakukan pula percobaan pada software proteus sebagai\r\nberikut.\r\n\r\n10\r\n\r\n6Gambar 3.3 Percobaan Decoder BCD ke 7 Segment\r\nDapat dilihat D0 sampai D3 berfungsi sebagai masukan bilangan\r\nbiner yang akan diubah ke dalam bentuk decimal dan ditampilkan\r\npada 7 segment, karena bilangan decimal berbasis 10 (0-9) maka\r\n\r\nnilai yang lebih dari itu (10-14) akan ditampilkan dengan bentuk-\r\nbentuk menyerupai kode, dan nilai 15 akan melakukan reset (7\r\n\r\nsegment mati).\r\n\r\n11\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1. Kesimpulan\r\nPada percobaan kali ini didapatkan kesimpulan sebagai berikut.\r\n1. Praktikan dapat mengenali piranti multiplekser dan demultiplekser,\r\nyaitu piranti yang dapat mengubah masukan dan keluaran.\r\n2. Praktikan mengetahui pemanfaatan multiplekser, yaitu sebagai data\r\nselektor yang dimana penerapannya bisa dilihat pada kabel telepon\r\nrumah yang hanya ada 1 tetapi bisa digunakan banyak perangkat\r\ndan lebih efisien, sedangkan demultiplekser adalah sebagai output\r\nselektor.\r\n3. Praktikan dapat mengenali apa itu encoder dan decoder, yaitu\r\npiranti atau alat yang dapat mengubah bahasa yang dikenali\r\nmanusia (decimal) ke bahasa mesin (bilangan biner), sedangkan\r\ndecoder membuka informasi yang ada dalam bahasa mesin\r\n(bilangan mesin) dan diubah menjadi bahasa yang dikenali manusia\r\n(decimal)\r\n4. Praktikan mengetahui pemanfaatan decoder dan encoder, yaitu\r\npada seven segment, dari bahasa mesin (bilangan biner) menjadi\r\nbahasa manusia (decimal) dan ditampilkan pada seven segment.', 'IDZHAR ANUGRAH YUGINAR', 'UNIT 1'),
(577, '3332210010', 'Pada percobaaan kali ini adalah menguji rangkaian multiplekser.\r\nMultiplexer merupakan susunan logika yang memiliki banyak input dan hanya\r\nmemiliki satu output saja. Rangkaiannya adalah seperti gambar dibawah ini.\r\n\r\nMenghasilkan data percobaan seperti pada tabel dibawah ini.\r\nTabel 3. 1 Percobaan Pertama Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nPada percobaan kali ini, rangkaiannya akan bekerja jika nilai E ̅diberikan logika\r\n0. Sedangkan, jika diberi nilai 1 maka rangkaiannya tidak akan bekerja. Nilai\r\nyang diperhatikan adalahh nilai decimal dari A0 dan A1. Ketika nilai decimal pada\r\n\r\nGambar 3. 1 Rangkaian Multiplekser\r\n\r\n9\r\n\r\nA0 dan A1 adalah 0 maka output yang keluar adalah nilai pada I0, jika nilai decimal\r\npada A0 dan A1 adalah 1 maka output yang keluar adalah nilai pada I1. Jika nilai\r\ndecimal pada A0 dan A1 adalah 2 maka output yang keluar adalah nilai pada I2.\r\nJika nilai decimal pada A0 dan A1 adalah 3 maka output yang keluar adalah nilai\r\npada I3. Cara kerjanya adalah melihat nilai pada A1 terlebih dahulu kemudian\r\nA0, memilih inputan pada nilai Ix. Pada percobaan pertama dapat dilihat ketika\r\nnilai I0 = 0 maka nilai output Y=0. Begitupula dengan percobaan selanjutnya.\r\n3.2.2 Demultiplekser\r\nPada percobaaan kali ini adalah menguji rangkaian demultiplekser dimana\r\nrangkaian ini adalah kebalikan dari rangkaian sebelumnya. Demultiplexer\r\nmerupakan susunan logika yang memiliki satu input dan memiliki banyak output.\r\nRangkaiannya adalah seperti gambar dibawah ini.\r\n\r\nGambar 3. 2 Rangkaian Demultiplekser\r\nMenghasilkan data percobaan seperti pada tabel dibawah ini.\r\n\r\nTabel 3. 2 Percobaan Kedua Demultiplekser\r\n\r\nE0\r\n̅̅̅ E1\r\n̅̅̅ E2 A0 A1 A2 O0 O1 O2 O3 O4 O5 O6 O7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n\r\n10\r\n\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nPercobaan kali ini memiliki banyak output. Letak nilai 1 pada output tergantung\r\npada nilai selektornya. Karena banyak selector pada percobaan kali ini adalah 3\r\nbuah, maka nilai maksimal desimalnnya adalah 8 karena 23=8. Nilai input pada\r\nrangkaian ini adalah E0\r\n̅̅̅, E1\r\n̅̅̅ dan E2, dimana E0\r\n̅̅̅, E1\r\n̅̅̅ adalah aktif low sehingga akan\r\nmemilik nilai 0, sedangkan E2 adalah aktif high sehingga nilainya adalah 1.\r\nDimana A0, A1, dan A2, berperan sebagai input, jika nilai pada input adalah 0,\r\nmaka outputnya akan bernilai 0, jika pada input bernilai 1 maka outpu 1 akan\r\nberada pada O0, begitupun jika pada nilai inputnya adalah 8 maka nilai output 1\r\nakan muncul pada O7, dengan keluaran angka binner. Diambil contoh pada\r\npercobaan ke-6, nilai A0=0, A1=1, dan A2=0 atau bisa dituliskan 010 dengan nilai\r\ndecimal 2, maka keluar pada output O2. Dan pada percoban terakhir nilai A0=1,\r\nA1=1, danA2=1 atau bisa dituliskan 111 dengan nilai desimal 8, maka keluar pada\r\noutput O7. Perlu diingat bahwa nilai inputan pada A0, A1, dan A2 akan diproses\r\nterlebih dahulu kedalam gerbang AND sehingga hanya menghasilkan satu buat\r\nnilai output.\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\nPada percobaaan kali ini adalah menguji rangkaian 7 Segmen dimana\r\nrangkaian ini akan mengubah nilai input menjadi sebuah angka. Rangkaiannya\r\nadalah seperti gambar dibawah ini.\r\n\r\n11\r\n\r\nMenghasilkan data percobaan seperti pada tabel dibawah ini.\r\n\r\nTabel 3. 3 Percobaan Ketiga 7 Segment\r\n\r\nLT BLANKING D3 D2 D1 D0 DISPLAY\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1 -\r\n\r\nGambar 3. 3 Rangkaian 7 Segmen\r\n\r\n12\r\n\r\nPada rangkaian 7 Segment, nilai tertinggi yang dimiliki adalah dari 0-9. Artinya,\r\njika angkanya >9 seperti 10,11,12,13,... maka bentuk yang akan dimunculkan\r\nadalah berbentuk kode. Pada rangkaian ini, nilai D0, D1, D2, dan D3 berperan\r\n\r\nsebagai input. Terdapat juga blanking, apabila nilainya adalah 0 maka display-\r\nnya akan gelap dan ketika dikasih nilai 1 maka akan menyala, dengan nilai LT\r\n\r\nharus berlogika 1 agar rangkaiannya bisa berjalan. Pada percobaan ke-4 dengan\r\nnilai D0=1, D1=0, D2=0, dan D3=0 dengan nilai desimal 1 maka display akan\r\nmemunculkan angka 1. Sedangkan untuk percobaan ke-13, dengan nilai D0=0,\r\nD1=1, D2=0, dan D3=1 dengan nilai desimal 10 maka display akan memunculkan\r\nbentuk kode dan bukan angka, karena nilai pada 7 segment hanya 0-9.\r\n\r\n13\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerdasarkan pada praktikum yang telah dilakukan didapatkan kesimpulan\r\nsebagai berikut.\r\n1. Multiplexer adalah komponen susunan logika yang memiliki banyak input\r\ndengan satu buat output, sedangkan demultiplexer hanya memiliki satu input\r\ndengan beberapa jalur output.\r\n2. Multiplexer dapat dimanfaatkan untuk transmisi sistem komputer satelit,\r\nkarena fungsinya untuk menyeleksi data kemudian dipindahkan ke satu jalur\r\nkuluaran. Sedangkan demultiplexer dapat digunakan untuk arithmetic logic\r\nunit (ALU), karena fungsinya untuk mengkonstruksi data berbentuk seri\r\nmenjadi berbentuk paralel. .\r\n3. Encoder digunakan untuk engubah data dari analog ke digital. Sedangkan,\r\ndecoder adalah kebalikan dari proses encoder, yaitu mengkonversi dari digital\r\nke analog.\r\n4. Decoder digunakan ntuk memudahkan dalam menghidupkan 7 segmen.\r\nSedangkan, encoder untuk mengkode data input mejadi data bilangan.', 'ISTIANAH', 'UNIT 1');
INSERT INTO `plagiator_postmodel` (`id`, `nim`, `isi_laprak`, `nama`, `unit`) VALUES
(578, '3332210092', 'Pada percobaan praktikum unit 8 ini tenatang “MSI (Medium Scale\r\nIntegration)’’ terdapat beberapa percoban yang diterapkan pada modul ini\r\nyaitu multiplekser, demultiplekser dan Decoder BCD 7 Segment berikut\r\nmerupakan analisa hasil yang sudah dilakukan :\r\n1. Percobaan Multiplekser\r\nSeperti yang telah kita pahami Multiplekser merupakan Masukan ( Input\r\n) hanya satu yang diteruskan menuju lebih dari satu keluaran (output) sesuai\r\nsinyal kendali yang diproses. Multiplekser dapat dicontohkan\r\npengaplikasiannya menjadi suatu saklar penghubung antara banyak\r\nmasukan dengan satu keluaran, yang akan ditentukan oleh suatu sinyal\r\nkendali dimana saklar tersebut terhubungkan.\r\nDalam Percobaan Multiplekser ini merupakan percobaan pertama,\r\ndidapatkan data – data hasil sebagai berikut:\r\n\r\nTabel 3.1 Percobaan Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\npada output percobaan ini dipengaruhi oleh nilai A0 dan A1, jika pada\r\nA0 dan A1 kedua-duanya bernilai 0 maka yang ditampilkan pada bagian\r\noutput adalah input jalur I0. Jika pada A0 bernilai 0 dan A1 bernilai 1 maka\r\nyang ditampilkan pada bagian output adalah input jalur I2. Jika pada A0\r\nbernilai 1 dan A1 bernilai 0 maka yang ditampilkan pada bagian output\r\nadalah input jalur I1. Jika pada A0 dan A1 kedua-duanya bernilai 1 maka\r\nyang ditampilkan pada bagian output adalah input jalur I3. Seperti yang pada\r\n\r\n10\r\n\r\n10\r\n\r\ntabel baris kedua ketika A0 dan A1 kedua-duanya bernilai 0 maka output\r\nyang ditampilkan adalah inputan yang berada di jalur I0, yaitu nol (0). Dan\r\nrangkaian ini bersifat active low, yaitu rangkaian yang akan aktif ketika\r\ndiberi nilai logika nol (0).\r\nRangkaian Logika Multiplexer Sederhana dapat kita bentuk dari\r\nkombinasi beberapa gerbang logika dasar AND, OR dan NOT. MUX 2x1\r\nMUX 2x1 menunjukkan bahwa multiplexer dengan 2 input(a dan B) dan 1\r\nselektor(s) dan 1 output\r\n2. Percobaan Demultiplexer\r\nSeperti yang telah kita pelajari Demultiplekser merupakan suatu proses\r\nyang berkebalikan dengan multiplekser, demultiplekser ini mempunyai\r\nbanyak iputan yang diteruskan hanya satu inputan saja dan sesuai juga\r\nproses sinyal kendalinya\r\n\r\nGambar 3.1 rangkaian demultiplekser\r\n\r\nDalam percobaan demultiplekser ini merupakan percobaan kedua,\r\ndidapatkan perolehan data – data hasil sebagai berikut:\r\n\r\nTabel 3.2 Percobaan Demultiplekser\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\n\r\n11\r\n\r\n11\r\nX X 0 0 0 0\r\n\r\n0 0 0 0 0 0 0 0\r\n\r\n0 0 1 0 0 0\r\n\r\n1 0 0 0 0 0 0 0\r\n\r\n0 0 1 0\r\n\r\n0 1 0 0 0 0 1 0 0 0\r\n\r\n0 0 1 0\r\n\r\n1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1\r\n\r\n1 0 0 0 1 0 0 0 0 0 0\r\n\r\n0 0 1\r\n\r\n1 0 1 0 0 0 0 0 1 0 0\r\n\r\n0 0 1\r\n\r\n1 1 0 0 0 0 1 0 0 0 0\r\n\r\n0 0 1\r\n\r\n1 1 1 0 0 0 0 0 0 0 1\r\nDalam tabel tersebut untuk mengetahui kebenaran percobaan kedua, nilai\r\nE0\r\n̅̅̅ dan E1\r\n̅̅̅ harus bernilai nol (0) karena keduanya bersifat Active LOW\r\nActive Low adalah rangkaian logika yang jika nilai inputannya nol maka\r\nrangkaian akan mati.\r\nmaka pada E2 harus bernilai satu (1) karena bersifat Active HIGH adalah\r\nrangkaian logika yang jika nilai inputannya satu maka rangkaian akan aktif\r\ndan dapat digunakan pada percobaan ini. Nilai dari A0, A1 dan A2 sangat\r\nberpengaruh dalam menentukan posisi dari output yang bernilai satu (1)\r\ndan juga dapat diketahui dengan cara manual sebagai berikut:\r\nKarena pada percobaan ini mengkonversi bilangan biner ke bilangan oktal\r\nmaka A0: 20\r\n, A1: 21\r\n, dan A2: 22\r\n\r\n. Misal, pada A0 bernilai 0 dan A1 = A2 = 1\r\n\r\nmaka, diperoleh\r\n0 + (2\r\n1\r\n) + (2\r\n2\r\n) = 0 + 2 + 4 = 6\r\n\r\nDan hasilnya adalah enam (6), enam (6) menunjukkan posisi dari output\r\nyang bernilai satu (1), yaitu O6.\r\n3. Percobaan BCD Seven Segment\r\nSeven segment adalah suatu segmen-segmen yang digunakan untuk\r\nmenampilkan angka / bilangan decimal. Seven segment ini terdiri dari 7\r\nbatang LED yang disusun membentuk angka 8\r\n\r\n12\r\n\r\n12\r\n\r\nGambar 3.2 rangkaian BCD Seven Segment\r\nRangkaian decoder BCD ke seven segmen berfungsi sebagai\r\npenampil input yang berupa bilangan biner menjadi nilai desimalnya, yaitu\r\nberupa input biner masuk ke dalam decoder, kemudian decoder\r\nmengkonversi bilangan biner tersebut menjadi desimal, yang nantinya\r\ndesimal akan ditampilkan pada seven segment.\r\nPercobaan ketiga ini menggunakan BCD Seven Segment,\r\ndidapatkan data – data hasil sebagai berikut:\r\n\r\nTabel 3.3 Percobaan BCD Seven Segment\r\nLT Blanking D3 D2 D1 D0 Bentuk Display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1\r\n\r\n0 0 0 0 0\r\n\r\n1 1\r\n\r\n0 0 0 1 1\r\n\r\n1 1\r\n\r\n0 0 1 0 2\r\n\r\n1 1\r\n\r\n0 0 1 1 3\r\n\r\n1 1\r\n\r\n0 1 0 0 4\r\n\r\n1 1\r\n\r\n0 1 0 1 5\r\n\r\n1 1\r\n\r\n0 1 1 0 6\r\n\r\n1 1\r\n\r\n0 1 1 1 7\r\n\r\n1 1\r\n\r\n1 0 0 0 8\r\n\r\n1 1\r\n\r\n1 0 0 1 9\r\n\r\n1 1\r\n\r\n1 0 1 0\r\n\r\n1 1\r\n\r\n1 0 1 1\r\n\r\n1 1\r\n\r\n1 1 0 0\r\n\r\n13\r\n\r\n13\r\n\r\n1 1\r\n\r\n1 1 0 1\r\n\r\n1 1\r\n\r\n1 1 1 0\r\n\r\n1 1\r\n\r\n1 1 1 1 -\r\nDalam percobaan ini dilakukan proses yang disebut decoding, proses\r\nini menguraikan isyarat mesin digital atau komputer yang berupa bilangan\r\nbiner ke bilangan desimal sehingga dapat dimengerti oleh manusia. Pada\r\npercobaan ini, LT berfungsi sebagai penguji lampu dari 7 segment dan\r\nBlanking berfungsi sebagai pengosongan 7 segment sehingga angka yang\r\nada pada 7 segment dapat diisi kembali atau diganti dengan angka yang\r\nlainnya. Dan dapat dilihat, pada saat nilai LT bernilai nol (0) dan Blanking\r\nbernilai X (bebas) dan juga pada saat LT bernilai satu (1) dan Blanking\r\nbernilai nol (0) maka display tidak menampilkan bentuk apapun walaupun\r\nsudah diberi inputan.\r\nAgar penerapan 7-segmen ini dapat menampilkan suatu angka\r\ndesimal, maka diperlukan rangkaian pengendali untuk menterjemahkan\r\nkeadaan logika masukan BCD menjadi angka yang sesuai. Rangkaian\r\npengendali itu disebut dekoder BCD ke peraga 7 segmen.\r\n\r\n14\r\n\r\n14\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nAdapun kesimpulan setelan dilakukan praktikum ini adalah sebagai\r\nbaerikut\r\n1. Perbedaan utama antara multiplexer dan de-multiplexer adalah bahwa\r\nmultiplexer mengambil dua atau lebih sinyal, sedangkan de-multiplexer\r\nmembalikkan apa yang dilakukan multiplexer\r\n2. Multiplekser adalah suatu rangkaian yang memiliki banyak masukan tetapi\r\nhanya memiliki satu keluaran sedangkan Demultiplekser adalah suatu\r\nrangkaian yang hanya memiliki satu masukan tetapi memiliki beberapa\r\nkeluaran\r\n3. Encoder adalah sebuah piranti yang digunakan untuk mengubah suatu\r\nsistem bilangan digital pada inputnya menjadi sistem bilangan biner pada\r\noutputnya, sedangkan Decoder adalah sebuah piranti yang digunakan untuk\r\nmengubah bilangan biner pada bagian inputnya menjadi bilangan lainnya\r\nsehingga dapat dimengerti oleh manusia atau dengan kata lain.', 'Taufik Hidayat', 'UNIT 1'),
(579, '3332210069', 'Dari data percobaan pada tabel berikut, ketika enablenya bernilai 1 (high) maka\r\nmultiplekser tidak akan memulai pengolahan data dan akan tetap mati (non active)\r\nselama enablenya bernilai 1 atau dalam keadaan high. Enable harus di NOT-kan\r\nsupaya nilainya berubah menjadi 0 dan bisa memulai pengolahan datanya yang\r\nmenggunakan active low. Multiplekser menggunakan active low atau aktif saat\r\nenablenya bernilai 0.\r\nKetika input A0, A1, dan enable bernilai 0, 0, dan 0. Maka nilai output Y akan\r\nmengikuti nilai inputan I0, tidak peduli dengan nilai inputan I1, I2, dan I3. Jadi saat\r\nI0 nya bernilai 1, maka keluaran pada output Y nya juga akan bernilai 1, dan\r\nmisalkan I0 nya bernilai 0, maka output Y nya juga kan bernilai 0. Hal tersebut\r\ndisebabkan nilai 0, 0, dan 0 pada A0, A1, dan enable adalah selector yang berpatok\r\npada nilai kolom I0.\r\nKetika input A0, A1, dan enable bernilai 0, 1, dan 0. Maka nilai output Y akan\r\nmengikuti nilai inputan I2, tidak peduli dengan nilai inputan I0, I1, dan I3. Jadi saat\r\nI2 nya bernilai 1, maka keluaran pada output Y nya juga akan bernilai 1, dan\r\nmisalkan I2 nya bernilai 0, maka output Y nya juga kan bernilai 0. Hal tersebut\r\ndisebabkan nilai 0, 1, dan 0 pada A0, A1, dan enable adalah selector yang berpatok\r\npada nilai kolom I2.\r\nKetika input A0, A1, dan enable bernilai 1, 0, dan 0. Maka nilai output Y akan\r\nmengikuti nilai inputan I1, tidak peduli dengan nilai inputan I0, I2, dan I3. Jadi saat\r\nI1 nya bernilai 1, maka keluaran pada output Y nya juga akan bernilai 1, dan\r\nmisalkan I1 nya bernilai 0, maka output Y nya juga kan bernilai 0. Hal tersebut\r\ndisebabkan nilai 1, 0, dan 0 pada A0, A1, dan enable adalah selector yang berpatok\r\npada nilai kolom I1.\r\n\r\n9\r\nKetika input A0, A1, dan enable bernilai 1, 1, dan 0. Maka nilai output Y akan\r\nmengikuti nilai inputan I3, tidak peduli dengan nilai inputan I0, I1, dan I2. Jadi saat\r\nI3 nya bernilai 1, maka keluaran pada output Y nya juga akan bernilai 1, dan\r\nmisalkan I3 nya bernilai 0, maka output Y nya juga kan bernilai 0. Itu disebabkan\r\nnilai 1, 1, dan 0 pada A0, A1, dan enable adalah selector yang berpatok pada nilai\r\nkolom I3\r\n\r\n3.2.2 Demultiplekser\r\n\r\nTabel 3.2 Demultiplekser\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nDari data percobaan pada tabel berikut, saat E0 bernilai 1, maka E1 dan E2\r\nmenjadi non aktif, nilai selector A0, A1 dan A2 sama dengan 0, dan nilai output O0\r\nsampai O7 sama dengan 0. Dan pada saat E1 bernilai 1, maka E0 dan E2 tidak aktif,\r\ndan nilai selector A0, A1 dan A2 sama dengan 0, dan output O0 sampai O7 sama\r\ndengan 0. Serta pada saat E2 bernilai 0, maka E0 dan E1 tidak aktif, nilai selector\r\nA0, A1 dan A2 sama dengan 0, serta nilai output O0 sampai O7 sama dengan 0.\r\nDemultiplekser mulai mengolah data saat E0 bernilai 0, E1 bernilai 0 dan E2\r\nbernilai 1. Hal tersebut menunjukan bahwa E0 dan E1 menggunakan active low dan\r\n\r\n10\r\nE2 menggunakan active high. Nilai output O ditentukan oleh selector/input A0, A1,\r\nA2. Misalkan pada saat selector A memiliki biner bernilai 0 0 0, maka nilai output\r\nO0 adalah 1 dan output yang lain bernilai 0.\r\nPenentuan nilai output disebabkan karena nilai 1 diantara nilai input A dan\r\nmemiliki bilangan 2\r\nn\r\n. Jadi ketika nilai selector A memiliki biner bernilai 0 0 0\r\ntidak ada yang bernilai 1, maka output yang akan bernilai 1 jatuh pada output O0\r\nsisanya akan bernilai 0. Ketika nilai selector A memiliki biner bernilai 0 0 1 maka\r\nnilai output O4 adalah 1 dan output yang lain bernilai 0. Penentuan nilai output ini\r\ndisebabkan oleh adanya nilai 1 diantara nilai A dan memiliki bilangan 2\r\nn\r\n. Jadi saat\r\nnilai nilai selector A memiliki biner bernilai 0 0 1, maka nilai data akan diproses\r\nmenjadi 0 + 0 + 2\r\n\r\n2 = 4, jadi output yang akan bernilai 1 jatuh pada O4 sisanya akan\r\nbernilai 0. Ketka nilai selector A memiliki biner bernilai 0 1 1, maka nilai output\r\nO6 adalah 1 dan output yang lain bernilai 0. Penentuan nilai output ini disebabkan\r\noleh adanya nilai 1 diantara nilai A dan memiliki bilangan 2\r\nn\r\n. Jadi saat nilai nilai\r\nselector A memiliki biner bernilai 0 1 1, maka nilai data akan diproses menjadi 0 +\r\n2\r\n1 + 2\r\n2 = 6, jadi output yang akan bernilai 1 jatuh pada O6 sisanya akan bernilai 0.\r\nKetika nilai selector A memiliki biner bernilai 1 1 1, maka nilai output O7 adalah 1\r\ndan output yang lain bernilai 0. Penentuan nilai output ini disebabkan oleh adanya\r\nnilai 1 diantara nilai A dan memiliki bilangan 2\r\nn\r\n. Jadi saat nilai nilai selector A\r\n\r\nmemiliki biner bernilai 1 1 1, maka nilai data akan diproses menjadi 2\r\n0 + 2\r\n1 + 2\r\n2\r\n= 7, jadi output yang akan bernilai 1 jatuh pada O7 sisanya akan bernilai 0.\r\n\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\n\r\nTabel 1.3 Dekoder BCD ke 7 Segmen\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X X\r\n1 0 X X X X X\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n\r\n11\r\n\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 Bentuk c\r\n1 1 1 0 1 1\r\n\r\nBentuk c\r\nterbalik\r\n1 1 1 1 0 0 Bentuk u\r\n1 1 1 1 0 1 Bentuk c\r\n1 1 1 1 1 0 Bentuk t\r\n1 1 1 1 1 1 X\r\nDari data percobaan pada tabel berikut, saat input LT nya bernilai 0 maka\r\ndekoder masih non aktif belum memulai pengolahan datanya. Saat input LT nya\r\nbernilai 1 dan Blanking nya bernilai 0 maka angka yang akan terbentuk pada 7\r\nsegmen adalah output bernilai 0. Lalu saat LT bernilai 1 dan Blanking bernilai 1,\r\ndan inputan D memiliki biner 0 0 0 0, angka yang akan terbentuk pada 7 segmen\r\nadalah output bernilai 1. Hal tersebut menunjukkan bahwa LT dan Blanking\r\nmenggunakan active high untuk mengaktifkan proses output-nya. Pada saat LT dan\r\nBlanking bernilai 1 dan 1 serta input D memiliki biner 1 0 0 1, angka yang akan\r\nterbentuk pada 7 segmen adalah simbol-simbol yang menginterprestasikan angka 0\r\nsampai 9. Begitu juga dengan inputan selanjutnya, akan muncul simbol-simbol\r\nberbentuk huruf yang menginterprestasikan angka lebih dari 9 pada 7 segmen.\r\n\r\n12\r\n\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nDari hasil percobaan yang telah dilakukan pada praktikum tentang MSI\r\n(Medium Scale Integration), kesimpulan yang bisa didapatkan yaitu sebagai\r\nberikut.\r\n1. Multiplekser bekerja untuk memproses beberapa input menjadi satu output.\r\nSedangkan Demultiplekser bekerja untuk memproses satu input menjadi lebih\r\ndari satu output.\r\n2. Multiplekser dimanfaatkan untuk memori komputer dan transmisi sistem\r\nkomputer satelit. Sedangkan Demultiplekser dimanfaatkan untuk\r\nmengkonversi data seri ke data paralel.\r\n3. Decoder berfungsi untuk mengubah data biner menjadi data desimal, oktal dan\r\nlain sebagainya. Sedangkan encoder berfungsi untuk mengubah data desimal,\r\noktal, dan lain sebagainya menjadi data biner.\r\n4. Decoder digunakan untuk mengubah instruksi komputer menjadi sinyal kontrol\r\nCPU.', 'MUHAMMAD ALIEF PRATAMA', 'UNIT 1'),
(580, '33322100032', 'Pada percobaan kali ini bahwa nilai input pada sebuah\r\nrangkaian dipengaruhi oleh nilai dari A0 dan A1. A0 dan A1\r\nmerupakan sebuah selector pada tabel diatas. , jika pada A0 dan A1\r\nkedua-duanya bernilai 0 maka yang ditampilkan pada bagian output\r\nadalah input jalur I0. Jika pada A0 bernilai 0 dan A1 bernilai 1 maka\r\nyang ditampilkan pada bagian output adalah input jalur I2.Jika pada\r\nA0 bernilai 1 dan A1 bernilai 0 maka yang ditampilkan pada bagian\r\noutput adalah input jalur I1. Jika pada A0 dan A1 kedua-duanya\r\nbernilai 1 maka yang ditampilkan pada bagian output adalah input\r\n\r\njalur I3. Seperti yang pada tabel baris kedua ketika A0 dan A1 kedua-\r\nduanya bernilai 0 maka output yang ditampilkan adalah inputan\r\n\r\nyang berada di jalur I0, yaitu nol (0). Dan rangkaian ini bersifat\r\nactive low, yaitu rangkaian yang akan aktif ketika diberi nilai logika\r\nnol (0).\r\n2. Percobaan Demultiplexer\r\nBerikut ini adalah rangkaian daripada demultiplexer.\r\n\r\nGambar 3. 2 Rangkaian demultiplexer\r\n\r\nPada rangkaian diatas didapat data pada tabel kebenaran\r\nsebagai berikut :\r\n\r\n11\r\n\r\nTabel 3 2 Hasil Percobaan Demultiplexer\r\n\r\nE̅0 E̅1 E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nPada percobaan kedua sama seperti percobaan pertama\r\ndimana nilai output diperngaruhi oleh niali input dari A. Baik\r\nA0,A1.dan A2. Namun pada percobaan kedua ini nilai E0 dan E1 harus\r\nsama dengan supaya pada output ada nilai yang keluar. Karena pada\r\npercobaan kedua ini bersifat active low dan E2 harus bernilai 1\r\nkarena bersifat active high supaya rangkaian tersebut dapat aktif.\r\nPada percobaan kali ini bekerja dengan cara mengkonversikan\r\nbilangan biner terhadap bilangan oktal.\r\n3. Dekoder BCD ke 7 Segmen\r\nBerikut ini adalah rangkaian dari decoder BCD ke 7 segmen.\r\n\r\nGambar 3. 3 rangkaian decoder BCD ke 7 segmen\r\n\r\nPada rangkaian diatas didapat data pada tabel kebenaran berikut ini\r\n:\r\n\r\nTabel 3 3 Hasil Rangkaian Decoder BCD\r\n\r\nLT Blanking D1 D1 D1 D1 Bentuk Display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n\r\n12\r\n\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 0\r\n1 1 0 0 1 0 1\r\n1 1 0 0 1 1 2\r\n1 1 0 1 0 0 3\r\n1 1 0 1 0 1 4\r\n1 1 0 1 1 0 5\r\n1 1 0 1 1 1 6\r\n1 1 1 0 0 0 7\r\n1 1 1 0 0 1 8\r\n1 1 1 0 1 1 9\r\n1 1 1 1 0 0 c\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0 u\r\n1 1 1 1 1 1\r\n\r\nPada percobaan ini kita melakukan proses decoding. Dimana\r\npada percobaan ini kita dapat menguraikan isyarat pada bahasa\r\nmesin digital ataupun computer yang mengandung unsur digital di\r\nkonversikan menjadi bilangan decimal sehingga dapat dipahami\r\noleh manusia. Pada percobaan kali ini input LT berfungsi sebagai\r\npenguji lampu dari 7 segment dan Blanking berfungsi sebagai\r\npengosongan 7 segment sehingga angka yang ada pada 7 segment\r\ndapat diisi kembali atau diganti dengan angka yang lainnya. Dan\r\ndapat dilihat, pada saat nilai LT bernilai nol (0) dan Blanking\r\nbernilai X (bebas) dan juga pada saat LT bernilai satu (1) dan\r\nBlanking bernilai nol (0) maka display tidak menampilkan bentuk\r\napapun walaupun sudah diberi inputan sedangkan pada saat LT dan\r\nBlanking bernilai satu (1) maka inputan yang diberikan pada\r\nrangkain tersebut akan menampilkan bentuk-bentuk angka pada\r\ndisplaynya sesuai dengan angka biner yang merepresentasikan\r\nangka desimal tersebut. Misal, inputannya 0110 maka, display akan\r\nmenampilkan angka enam (6) dan karena 7 segment ini hanya satu\r\n(1) bit maka, display akan menampilkan bentuk-bentuk aneh\r\nlainnya.\r\n\r\n13\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\nAdapun kesimpulan yang didapat pada percobaan kali ini adalah\r\nsebgai berikut :\r\n1. Multiplexer merupakan sebuah rangkaian logika yang terdiri banyak\r\nnya inputan tetapi hanya memiliki satu nilai output saja. Sedangkan\r\ndemultiplexer kebalikan daripada multiplexer.\r\n2. Multiplexer berfungsi terhadap tranmisi data, sedangkan\r\nDemultiplexer berfungsi terhadap system komunikasi\r\n3. Encoder adalah sebuah piranti yang digunakan untuk mengubah suatu\r\nsistem bilangan digital (contohnya, sistem bilangan desimal) pada\r\ninputnya menjadi sistem bilangan biner pada outputnya. sedangakan\r\nDecoder adalah sebuah piranti yang digunakan untuk mengubah\r\nbilangan biner pada bagian inputnya menjadi bilangan lainnya\r\n(contohnya, desimal) sehingga dapat dimengerti oleh manusia atau\r\ndengan kata lain, decoder adalah penerjemah atau pengurai sandi.\r\n4. Encoder berfungsi sebagai rangakain untuk mengkodekan data input\r\nmejadi data bilangan dengan format tertentu. Encoder berfungsi\r\nsebagai rangakain untuk mengkodekan data input mejadi data\r\nbilangan dengan format tertentu.', 'HADID HAMBALI', 'UNIT 1'),
(581, '3332210057', 'Pada praktikum kali ini untuk dapat memahami cara kerja dari macam-\r\nmacam Rangkaian pengolahan data seperti Multiplexer, Demultiplexer,\r\n\r\nDecoder, dan encoder maka dibuatlah data table kebenaran dan gambar\r\nrangkaiannya. Berikut ini adalah analisis dari praktikum Medium-scale\r\nintegration adalah sebagai berikut.\r\n3.2.1. Multiplexer\r\nMultiplexer adalah rangkaian logika kombinasional yang dirancang\r\nkhusus untuk mengalihkan salah satu dari beberapa jalur INPUT (masukan)\r\nke satu jalur OUTPUT (keluaran). Jalur Input yang terpilih menentukan\r\ninput mana yang akan terhubung ke output.\r\nBerikut ini adalah tabel percobaan dari Multiplexer.\r\nTabel 3.1 percobaan Multiplexer\r\n\r\nA0 A1 \r\n\r\nI0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n\r\n10\r\n\r\n1 1 0 0 0 0 1 1\r\n\r\nAdapun contoh dari percoban rangkaian Multiplexer adalah\r\nsebagai berikut\r\n\r\nGambar 3.1 Rangkaian Multiplexer\r\n\r\nBerdasarkan data dari tabel dan rangkaian diatas dapat dianalisis\r\nbahwa pada Multiplexer terdapat beberapa Notasi yaitu A0, A1, E’, I0, I1, I2,\r\nI3 dan Y. A0 dan A1 yang disebut dengan pin kontrol atau selector yang\r\ndapat menentukan pada keluaran saluran yang aktif. Lalu I0, I1, I2 dan I3\r\nadalah masukan dan selanjut nya yaitu E (Enable). Ketika E bernilai 0 maka\r\nakan bersifat Active low atau aktif dan prosesnya akan dilakukan, namun\r\nketika E bernilai 1 atau dalam keadaan High maka Multiplexer tidak akan\r\nmemulai pengolahan datanya, maka nilai lainnya (selector maupun input)\r\nakan mengalami kondisi don’t care (tidak diperdulikan) atau akan terus mati\r\nselama Enable memiliki nilai 1 atau dalam keadaan High. Maka dari itu\r\nenable harus di NOT kan agar nilainya berubah menjadi 0 dan bisa memulai\r\npengolahan datanya yang menggunakan active low. Pada awal nilai A1 dan\r\nA2 adalah 0 dan 0 yang akan mengeluarkan nilai input I0 selanjutnya ke\r\nOutput Y. jika dilihat pada tabel nilai-nilai selector ini memiliki pola yang\r\nsama dengan perhitungan 0 sampai 3 tetapi pada percobaan ini dalam angka\r\nBiner. Dari kedua nilai selector ini akan mempresentasikan nilai inputnya\r\nsendiri, dimana pada nilai inputnya akan menjadi nilai output untuk Y. jadi\r\nketika nilai dari kedua selector itu adalah 00 maka dari nilai ini akan\r\nmempresentasikan nilai I0 kemudian akan dikeluarkan untuk Output Y.\r\nbegitupun selanjutnya, nilai output Y akan selalu bergantung pada nilai I0. -\r\n\r\n11\r\n\r\ndari nilai selector yang akan memproses data pada nilai input akan\r\ndikeluarkan ke output, hal ini dapat dihitung dengan penjumlahan dari nilai\r\nhasil yang dikeluarkan dari kedua selector tersebut, dari penjumlahan\r\ntersebut mendapat total nilai 4 dimulai dari 0 sampai 3, dari 2 selector yang\r\ndapat diartikan 2 bit. Ini sesuai dengan dengan jumlah untuk output yang\r\ndiberikan. Maka dapat diketahui cara mudahnya yaitu dengan melihat\r\nberapa jumlah nilai yang dapat dikeluarkan dari selector terebut.\r\n3.2.2. Demultiplexer\r\nPada Demultiplexer atau bisa disebut De-Mux terdapat satu jalur\r\ninput dan memiliki banyak jalur Output, pada jalur input inilah yang akan\r\ndihubungkan dengan Multiplexer.\r\nBerikut ini adalah tabel percobaan dari Demultiplexer.\r\n\r\nTabel 3.2 Percobaan Demultiplexer\r\n\r\n\r\n\r\nE2 A0 A1 A2 O0 O1 O2 O3 O4 O5 O6 O7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nAdapun contoh dari percobaan rangkaian Demultiplexer adalah\r\n\r\n12\r\n\r\nsebagai berikut.\r\n\r\nGambar 3.2 Rangkain Demultiplexer\r\n\r\nBerdasarkan data dari tabel dan rangkaian diatas dapat dianalisis\r\nbahwa pada Demultiplexer terdapat beberapa Notasi yaitu A0, A1, A2,\r\nE0’,E1’, E2, O0, O1, O2, O3, O4, O5, O6, dan O7. Dari nilai E0 sampai dengan E2\r\nadalah nilai enable yang memiliki fungsi sama dengan percobaan\r\nsebelumnya yakni sebagai proses penentu akan dijalankan atau tidak. Pada\r\nrangkaian ini memiliki perbedaan, yaitu pada E0’ dan E1’ bernilai 0 akan\r\nbersifat active low atau aktif dan proses akan dilakukan. Namun ketika\r\nbernilai 1 atau dalam keadaan High maka tidak akan diproses. Pada E2\r\nbersifat active low jika bernilai 1 maka proses akan dilakukan dan bernilai 0\r\ntidak akan diproses. Kemuadian agar dapat proses berjalan maka nilai dari\r\nE0’ dan E1’ harus bernilai 0 dan E2 bernilai 1. Penentuan nilai Output O\r\nditentukan oleh selector atau input A0, A1, dan A2 sama dengan 0, 0, dan 0\r\ntidak ada yang memiliki nilai 1 dan output yang lain bernilai 0. Pada nilai\r\noutput terdapat penentuan ini disebabkan oleh nilai 1 diantara A dan\r\nmemiliki bilangan 2n\r\n\r\n. jadi saat nilai A0, A1, dan A2 sama dengan 0, 0, dan 0\r\ntidak ada yang memiliki nilai 1, maka pada output yang akan bernilai 1\r\njatug kepada output O0 sisnya akan bernilai 0. Dapat dimisalkan pada saat\r\nA0, A1, dan A2 sama dengan 0, 0 dan 1 maka nilai out O4 adalah 1 dan pada\r\ninput yang lain bernilai 0. Jadi saat nilai A0, A1, dan A2 sama dengan 0, 0\r\n\r\n13\r\n\r\ndan 1 maka akan terjadi bilangan 0 + 0 +22\r\n\r\n= 4, jadi nilai output yang akan\r\nbernilai 1 ada pada O4 dan sisanya akan bernilai 0 Misalkan pada saat A0,\r\nA1, dan A2 bernilai 0, 1, dan 1 maka nilai output O6 adalah 1 dan output\r\npada yang lain bernilai 0. Penentuan nilai output ini disebabkan oleh adanya\r\nnilai 1 diantara nilai A dan memiliki bilangan 2\r\n\r\n. Jadi saat nilai A0, A1, A2\r\n\r\nsama dengan 0, 1, 1 maka akan terjadi bilangan 0 + 2\r\n+ 2\r\n\r\n= 6, jadi output\r\nyang akan bernilai 1 jatuh pada O6 sisanya akan bernilai 0. Jika dimisalkan\r\npada saat A0, A1, dan A2 bernilai 1, 1, dan 1 maka nilai output O7 adalah 1\r\ndan output yang lain bernilai 0. Penentuan nilai output ini disebabkan oleh\r\nadanya nilai 1 diantara nilai A dan memiliki bilangan 2n\r\n\r\n. Jadi saat nilai A0,\r\nA1, dan A2 bernilai 1, 1, dan 1 maka akan terjadi bilangan 20 + 21 + 22 = 7,\r\nmaka nilai output yang akan memiliki nilai 1 adalah O7 maka sisanya akan\r\nbernilai 0.\r\n3.2.3. Decoder BCD ke 7 Segment\r\nSeven segment dapat menampilkan angka-angka desimal dan\r\nbeberapa karakter tertentu melalui kombinasi aktif atau tidaknya LED\r\npenyusunan dalam seven segment. Decoder BCD ke 7 Segment digunakan\r\nuntuk menerima masukan BCD 4-Bit dan memberikan keluaran yang\r\nmelewatkan arus melalui segmen untuk menampilkan angka desimal.\r\nBerikut ini adalah tabel percobaan dari BCD Seven Segment.\r\nTabel 3.3 percobaan BCD Seven Segment\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n\r\n0 X X X X X\r\n\r\n1 0 X X X X\r\n\r\n14\r\n\r\n1 1 0 0 0 0\r\n\r\n1 1 0 0 0 1\r\n\r\n1 1 0 0 1 0\r\n\r\n1 1 0 0 1 1\r\n\r\n1 1 0 1 0 0\r\n\r\n1 1 0 1 0 1\r\n\r\n1 1 0 1 1 0\r\n\r\n15\r\n\r\n1 1 0 1 1 1\r\n\r\n1 1 1 0 0 0\r\n\r\n1 1 1 0 0 1\r\n\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n16\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1\r\n\r\nAdapun contoh dari percobaan rangkaian BCD Seven Segment\r\nadalah sebagai berikut\r\n\r\nGambar 3.3 Rangkaian BCD Seven segment\r\nBerdasarkan data dari tabel dan rangkaian diatas dapat\r\ndianalisis bahwa pada percobaan BCD seven segment terdapat\r\nbeberapa Notasi yaitu LT, Blanking, D3, D2, D1, D0 dan bentuk\r\nDisplay. Ketika LT (Lamp Test) bernilai 1 maka akan bersifat Active\r\nHigh atau prosesnya akan dilakukan, namun ketika memiliki nilai 0\r\nmaka pada proses tidak akan dilakukan. LT (Lamp Test) memiliki\r\nfungsi sebagai gerbang yang memberi masukan nilai-nilai pada D3,\r\nD2, D1 dan D0. Kemudian Blanking memiliki Fungsi untuk\r\nmenyalakan respon dari 7 segment tersebut. Dan bentuk Display\r\nyaitu angka desimal yang nilainya dapat ditentukan dari inputan D3,\r\nD2, D1 dan D0. Ketika LT (Lamp Test) bernilai 1 dan Blanking\r\n\r\n17\r\n\r\nbernilai 0 maka angka yang akan terbentuk pada 7 segment adalah\r\nangka 0 atau outputnya memiliki 0, maka D3-D0 akan mengalami\r\nkondisi don’t care, serta tidak peduli inputannya hasil di 7 segment\r\nakan tetap 0. Selanjut nya saat LT (Lamp Test) memiliki nilai 1 dan\r\nBlanking memiliki nilai 1 dan inputan pada D3-D0 bernilai 0 semua\r\nmaka angka yang akan terbentuk atau ditampilkan pada 7 segment\r\nadalah angka 1 atau outputnya memiliki nilai 1. Hal ini menunjukkan\r\nbahwa LT dan Blanking menggunakan active high untu dapat\r\nmengaktifkan programnya. Lalu ketika inputnya memiliki nilai 0 0 1\r\n0 maka outputnya yang akan terbentuk atau ditampilkan pada 7\r\nsegment adalah angka 2, begitu pun selanjutnya. Ketika D3, D2, D1\r\ndan D0 memiliki nilai 1 0 0 1, maka angka yang akan terbentuk pada\r\n7 segment ini adalah symbol-simbol yang memiliki fungsi untuk\r\nmenginterprestasikan angka 10, yang maksudnya adalah 7 segment\r\nini tidak menampilkan angka 10 melainkan angka c yang bentuk\r\nselanjutnya menjadi bolak-balik. Hal ini disebabkan oleh kapasitas 7\r\nsegment meiliki batasan angka hanya sampai 9 saja.\r\n\r\n18\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\nBerdasarkan percobaan praktikum yang telah dilaksanakan,\r\nmengenai praktikum Unit 8 “MSI (MEDIUM SCALE INTEGRATION)\r\nmaka dapat ditarik kesimpulan adalah sebagai berikut.\r\n1. Multiplexer adalah rangkaian logika kombinasional yang dirancang\r\nkhusus untuk mengalihkan salah satu dari beberapa jalur INPUT\r\n(masukan) ke satu jalur OUTPUT (keluaran). Jalur Input yang\r\nterpilih menentukan input mana yang akan terhubung ke output.\r\nSedangkan pada Demultiplexer hanya terdapat satu jalur input dan\r\nmemiliki banyak jalur Output, pada jalur input inilah yang akan\r\ndihubungkan dengan Multiplexer.\r\n2. Multiplexer dapat dimanfaatkan untuk meningkatkan efsiensi\r\nsystem komunikasi, membantu transmisi system computer satelit,\r\nmemori computer, dan transmisi sinyal radio. Sedangkan pada\r\nDemultiplexer dapat dimanfaatkan dalam sistem komunikasi untuk\r\nmengubah sinyal output multiplexer ke bentuk aslinya dari data\r\npenerima, ALU (Arithmetic Logic Unit) dan konverter serial ke\r\npararel.\r\n3. Dapat mengenali beberapa rangkaian Decoder dan Encoder.\r\nDecoder adalah suatu rangkaian logika yang memiliki fungsi untuk\r\nmengkonversikan kode yang kurang dikenal manusia kedalam kode\r\nyang lebih dikenal manusia dan Encoder adalah uatu rangkaian\r\nlogia yang memiliki fungi untuk mengkonversikan kode yang lebih\r\ndikenal oleh manusia ke kode yang belum dikenal manusia.\r\n4. Encoder digunakan sebagai rangkaian untuk mengkodekan data\r\ninput menjadi data bilangan dengan format tertentu dan Decoder\r\ndigunakan untuk dapat mengembalikan proses encoding sehingga\r\nkita dapat melihat atau menerima informasi aslinya. Pada decoder\r\nini dapat difungsikan untuk memudahkan kita dalam menyalakan\r\n\r\n19\r\n\r\nseven segment.', 'RANDY ELEANOR', 'UNIT 1'),
(582, '3332210084', 'Pada praktikum percobaan unit 8 ini yaitu mengenai MSI (Medium Scale\r\nIntegration) terdapat 3 percobaan dan memiliki hasil seperti pada data blangko\r\npercobaan. Maka dapat dianalisis sebagai berikut:\r\n3.2.1 Multiplekser\r\nPada percobaan multiplekser ini yaitu percobaan pertama didapatkan\r\n\r\ndata sebagai berikut ini:\r\n\r\nTabel 3.1. Data Percobaan Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n\r\n9\r\n\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nBerdasarkan pada data tabel diatas, rangkaian multiplekser tersebut\r\nmempunyai input bersimbol E̅ yang dimana input tersebut adalah Enabler dan pada\r\nsimbol tersebut terdapat tanda – yang berarti bahwa enabler\r\ntersebut active-low yang dimana akan aktif ketika diberi nilai input 0 dan tidak\r\nakan aktif ketika diberi nilai input 1. Kemudian selain input E̅, ada input bersimbol\r\nA0 dan A1 untuk menentukan nilai dari output-nya. A0 dapat disebut sebagai LSBdan\r\nA1 dapat disebut sebagai MSB. Selain ketiga input terdapat input lain yaitu I0, I1, I2,\r\ndan I3 dan data dari 4 input itu yang menjadi faktor hasil dari output pada\r\nmultiplekser. Pengaplikasian dari multiplekser ini terdapat pada printerkomputer yang\r\nketika printer pada komputer mempunyai beberapa input dan menghasilkan 1 output.\r\nRangkaian pada multiplekser dapat digambarkan sebagai berikut:\r\n\r\nGambar 3.1. Rangkaian Multiplekser\r\n\r\n10\r\n\r\n3.2.2 Demultiplekser\r\nPada percobaan demultiplekser ini yaitu percobaan kedua didapatkan\r\n\r\ndata sebagai berikut ini:\r\n\r\nTabel 3.2. Data Percobaan Demultiplekser\r\n\r\nE0\r\n̅̅̅ E1\r\n̅̅̅ E2 A0 A1 A2 O0 O1 O2 O3 O4 O5 O6 O7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nBerdasarkan data pada percobaan diatas, dapat dikatakan rangkaian\r\ndemultiplekser ini sama seperti multiplekser yang mempunyai enabler. Tetapi, pada\r\nrangkaian demultiplekser ini mempunyai 3 buah inputenabler yang merupakan enabler\r\n0 dan 1 tersebut yaitu active-low yang ketika nilaipada input bernilai 0 dan enabler 2\r\nadalah active-high yang akan aktif ketika nilai input bernilai 1.\r\n\r\nSelain 3 input enabler, terdapat 3 input lain yaitu A0, A1, dan A2, yang\r\nbisa disebut input tersebut sebagai pengaruh yang akan dihasilkan pada output.\r\nDengan A2 sebagai MSB dan A0 sebagai LSB. Seperti pada percobaan 7 ketika nilai\r\nA0 senilai 0, nilai pada A2 dan A2 bernilai 1. Dengan mengikuti MSB dan LSB akan\r\ndiurutkan menjadi 110. Angka 110 pada biner ketika dikonversikan menjadi desimal\r\nbernilai 6. Contoh rangkaian pada demultiplekser merupakan sebagai berikut:\r\n\r\n11\r\n\r\nGambar 3.2. Rangkaian Demultiplekser\r\n\r\n3.2.3 Decoder BCD 7 Segmen\r\nPada percobaan decoder BCD 7segmen ini pada percobaan ketiga\r\n\r\ndidapatkan data sebagai berikut ini:\r\n\r\nTabel 3.3. Data Percobaan Dekoder BCD 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk Display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n\r\n12\r\n\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 A\r\n1 1 1 0 1 1 B\r\n1 1 1 1 0 0 C\r\n1 1 1 1 0 1 D\r\n1 1 1 1 1 0 E\r\n1 1 1 1 1 1 -\r\n\r\nBerdasarkan pada data pada percobaan diatas, dapat dikatakan bahwa\r\ndecoder BCD 7 segmen merupakan pengubah suatu bilanganbiner menjadi bilangan\r\ndesimal. Pada 7 segmen ini dapat menampilkan suatu bilangan desimal hanya sampai\r\nangka 9, karena hanya memiliki 1 digit saja yang dimiliki 7 segmen tersebut. Pada\r\nsetelah angka 9 terdapat 10 yang bisa ditampilkan dengan hurufA hingga seterusnya\r\ntergantung pada vendor dari IC yang digunakan.\r\n\r\nPada rangkaian decoder BCD 7 Segmen mempunyai input LT yang\r\ndimana maksudnya Lamp Test, berfungsi untuk menampilkan output tersebut. Lalu\r\njuga terdapat Blanking atau Backlight, fungsinya itu untuk menahan hasil dari output,\r\nmisalkan blanking aktif, ketika nilai input diubah – ubah maka nilai dari output tidak\r\nakan berubah sebelum blanking tersebut dimatikan. Rangkaian dari decoder BCD 7\r\nsegmen dapat digambarkan sebagai berikut:\r\n\r\n13\r\n\r\nGambar 3.3. Rangkaian Decoder BCD 7 Segmen\r\n\r\n14\r\n\r\n15\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\nPada percobaan unit 8 modul MSI (Medium Scale Integrated) ini\r\ndidapatkankesimpulan sebagai berikut ini:\r\n1. Multiplekser merupakan rangkaian kombinasional yang dimana\r\nmempunyai banyak input (multi-input) dan hanya mempunyai\r\nsatu output (single- output). Sedangkan demultiplekser\r\nmerupakan rangkaian kombinasional yang dimana memiliki satu\r\ninput (single-input) dan memiliki banyak output (multi-output).\r\n2. Pemanfaatan pada multiplekser dan demultiplekser ini dapat\r\nditerapkan pada sebuah sistem komunikasi yang mana dapat\r\nmentransmisikan jenis data berupa audio ataupun video.\r\n3. Decoder merupakan pengubah sinyal digital menjadi sinyal\r\nanalog atau pengubah kode – kode yang tidak dipahami manusia\r\ndan hanya dipahami oleh sistem tersebut. Sedangkan encoder\r\nmerupakan pengubah sinyal analog menjadi sinyal digital atau\r\npengubah bahasa menjadi kode – kode yang tidak dipahami\r\nmanusia dan hanya dipahami oleh sistem tersebut.\r\n4. Pemanfaatan pada decoder dan encoder yaitu pada sistem\r\npenyimpanan pada komputer untuk mengakses lokasi memori\r\nberdasarkan alamat yang dihasilkan oleh perangkat tersebut.\r\nContoh lainnya sebagai pengiriman pesan pada email yang dapat\r\nmengamankan alamat pengiriman dan pengirimannya tersebut.', 'HANS UTOMO', 'UNIT 1'),
(583, '3332210021', 'Pada praktikum unit 8 ini kita melakukan tiga percobaan diantaranya\r\npercobaan pada rangkaian multiplekser, rangkaian demultiplekser, dan decoder\r\nBCD ke 7 segmen. Berikut akan dijelaskan analisis dari ketiga percobaan\r\ntersebut.\r\n1. Percobaan Multiplekser\r\nMultiplekser adalah sebuah piranti rangkaian logika yang memiliki lebih dari\r\nsatu masukan input yang kemudian diseleksi oleh selector rangkaian sehingga\r\ndalam rangkaian tersebut hanya memiliki satu keluaran output. Biasanya\r\nmultiplekser ini digunakan untuk menyeleksi dari beberapa data atau mencari\r\nsebuah data yang diinginkan.\r\n\r\n15\r\n\r\nPada praktikum ini dilakukan percobaan multiplekser untuk membuktikan\r\ndan mengetahui piranti multiplekser tersebut dengan menggunakan rangkaian\r\nseperti pada gambar dibawah ini.\r\n\r\nGambar 3.3 Rangkaian Multiplekser\r\n\r\nSetelah melakukan percobaan dengan rangkaian diatas, maka diperoleh\r\ntabel kebenaran dari rangkaian multiplekser.\r\nTabel 3.1 Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nBerdasarkan tabel 3.1 kita ambil sampel pada percobaan pertama\r\nyaitu dengan masukan I0 I1 I2 dan I3 secara berturut-turut yaitu 0 1 1 1 diperoleh\r\nkeluaran Y bernilai 0, hal ini disebabkan karena nilai dari pin kontrol A0 dan\r\nA1 berturut-turut yaitu 0 0 sebagai selektor yang menentukan nilai dari\r\n\r\n16\r\n\r\nkeluaran rangkaian tersebut, sehingga masukan yang bernilai sama dengan\r\nselector yang menjadi keluaran pada rangkaian tersebut. Pada percobaan\r\ntersebut nilai keluaran 0 sesuai dengan nilai masukan I0 yaitu bernilai 0.\r\nSehingga dalam hal ini dapat disimpulkan bahwa pada multiplekser ini\r\nmemiliki lebih dari satu masukan yang dan satu keluaran yang ditentukan oleh\r\nnilai dari selektornya.\r\n\r\n2. Percobaan Demultiplekser\r\nDemultiplekser adalah kebalikan dari multiplekser sehingga demultiplekser\r\nmerupakan sebuah piranti yang memiliki satu masukan data yang kemudian\r\ndidistribuskan kebeberapa keluaran pada rangkaian tersebut yang sesuai\r\ndengan selector pada rangkaian. Demultiplekser biasanya digunakan untuk\r\nmembagikan, mencari maupun memisahkan sebuah data keluaran dari data\r\nmasukan sehingga diperoleh sebuah keluaran yang diinginkan melalui sebuah\r\nselector.\r\nPada praktikum ini dilakukan percobaan demultiplekser untuk\r\nmembuktikan dan mengetahui piranti demultiplekser tersebut dengan\r\nmenggunakan rangkaian seperti pada gambar dibawah ini.\r\n\r\nGambar 3.4 Rangkaian Demultiplekser\r\n\r\nPada rangkaian tersebut A0 sampai dengan A2 sebagai sebuah pin kontrol\r\natau selektor pada rangkaian tersebut. Pada rangkaian tersebut dilakukan uji\r\ncoba sesuai dengan masukan yang terdapat pada tabel kebenaran sehingga\r\n\r\n17\r\n\r\ndiperoleh hasil uji coba tersebut pada tabel 3.2 dengan 0o-07 sebagai keluaran\r\npada rangkaian tersebut.\r\nBerikut adalah tabel kebenaran dari demultiplekser.\r\nTabel 3.2 Demultiplekser\r\n\r\n̅E̅̅0̅ ̅E̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nBerdasarkan tabel 3.2 kita ambil sampel pada percobaan pertama yaitu pada\r\nkeluaran O0-O7 memiliki keluaran yang sama yaitu 0, hal tersebut\r\ndikkarenakan sebuah pin kontrol atau selektor A0-A2 yang bernilai 0 sehingga\r\nsemua keluarannya bernilai 0, sehingga berdasarkan hal tersebut dapat\r\ndisimpulkan bahwa Demultiplekser hanya memiliki sebuah masukan yang\r\nmendistribusikan ke lebih dari satu keluaran yang ditentukan oleh selektor atau\r\npin control pada rangkaian tersebut.\r\n\r\n18\r\n\r\n3. Decoder BCD Ke 7 Segmen\r\nDecoder adalah sebuah piranti rangkaian digital yang berfungsi untuk\r\nmengubah atau mengkonversikan suatu kode yang tidak dimengert oleh\r\nmanusia kedalam bentuk yang lebih dikenal oleh manusia, seperti contoh\r\ndiberikan sebuah kode oleh mesin berbetuk bilangan biner. Pada bilangan biner\r\ntersebut tidak dimengerti oleh manusia, maka decoder berperan dalam\r\nmengkonversikan bilangan biner tersebut kedalam bilangan yang dimengerti\r\noleh manusia seperti bilangan decimal, maupun heksadesimal.\r\n\r\nGambar 3.5 Rangkaian Decoder BCD Ke 7 Segmen\r\n\r\nBerikut adalah tabel kebenaran dari Decoder BCD Ke 7 Segmen.\r\n\r\nTabel 3.3 Dekoder BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n\r\n19\r\n\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 A\r\n1 1 1 0 1 1 B\r\n1 1 1 1 0 0 C\r\n1 1 1 1 0 1 D\r\n1 1 1 1 1 0 E\r\n1 1 1 1 1 1 -\r\n\r\nBerdasarkan hasil percobaan pada tabel diatas, decoder berfungsi\r\nuntuk mengkonversikan bilangan atau kode yang tidak dimengerti oleh\r\nmanusia ke bilangan yang dimengerti oleh manusia. Seperti pada percobaan ke\r\n3 yang memiliki bilangan biner 0 0 0 0, bilangan tersebut tidak dimengerti oleh\r\nmanusia dan hanya dimengerti oleh mesin pada sebuah computer, maka\r\ndecoder berfungsi mengknversikan bilangan tersebut sehingga diperoleh\r\nkeluaran bernilai 0. Artinya biklangan biner 0 0 0 0 memiliki urutan bilangan\r\nyang ke 0 atau sama dengan bilangan 0\r\n\r\n20\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nSetelah melakukan analisis dari ketiga percobaan yang ada, dapat diambil\r\nbeberapa kesimpulan diantaranya :\r\n1. Multiplekser yaitu sebuah piranti rangkaian logika yang yang memiliki beberapa\r\ninput data yang kemudian diseleksi pada rangkaian sehingga hanya memiliki\r\nsatu output pada rangkaian tersebut, sedangkan Demultiplekser yaitu kebalikan\r\ndari Multiplekser yaitu sebuah piranti rangkaian logika dimana hanya memiliki\r\nsatu masukan data yang kemudian didistribusikan kebeberapa output sehingga\r\npada rangkaian memiliki lebih dari satu keluaran.\r\n2. Piranti multiplekser dapat digunakan untuk menyeleksi sebuah data, misal\r\nseperti memilih no NIK dari beberapa data dengan menggunakan selector\r\nsebagai penyeleksi, sedangkan Demultiplexer dapat digunakan untuk memilih\r\nlebih dari satu data dari satu data yang dimasukan, misalkan memasukan data\r\nkartu keluarga dan memilih data ayah dalam kartu keluarga tersebut sebagai\r\nkeluaran.\r\n3. Rangkaian decoder dan rangkaian encoder erupakan sebuah rangkaian yang\r\nmenggunakan selektor serta dapat menggunakan jenis gerbang logika seperti\r\ngerbang AND, NAND, dan NOT.\r\n4. Rangkaian decoder dan encoder dapat digunakan untuk mengkonversikan kode\r\nyang tidak dimengerti oleh manusia maupun mesin untuk menjalankan fungsi\r\ndari sebuah program secara maksimal.', 'YUMNA HUWAIDA', 'UNIT 1'),
(584, '3332210054', 'Berdasarkan tabel Percobaan Multiplekser, nilai output Y ditentukan\r\noleh nilai pada selector dan input yang dipilih oleh A0 dan A1 (A0 dan A1\r\nmerupakan pin control yang fungsinya memilih saluran input yang terhubung\r\ndengan output). Selain itu, I0 merupakan sebuah kunci untuk output yang\r\ndihasilkan ketika A0 dan A1 bernilai 0 dan 1 atau 1 dan 0, ketika I0 bernilai 0\r\nmaka output juga bernilai 0, namun ketika I0 bernilai 1 maka output akan ikut\r\nbernilai 1. Tetapi, ada suatu kondisi dimana Ketika I0 bernilai 0 outputnya\r\ntidak bernilai 0 dan Ketika I0 bernilai 1 outputnya tidak bernilai 1. Hal ini\r\nterjadi ketika A0 dan A1 sama-sama mempunyai nilai 1 yang dimana outputnya\r\nakan berpindah menjadi input dari I3.\r\n\r\n3.2.2 Percobaan Demultiplekser\r\n\r\nTabel 3.2 Percobaan Demultiplesker\r\n\r\n̅E̅̅0̅ ̅E̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\n7\r\n\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nBerdasarkan tabel Percobaan Demultiplekser, nilai output O0-O7\r\nditentukan oleh nilai pada selector dan input yang dipilih oleh A0, A1, dan A3\r\n(A0, A1, dan A3 merupakan pin control yang fungsinya memilih saluran input\r\nyang terhubung dengan output). Untuk memberikan output E0, E1, dan E2\r\nharuslah bernilai 0, 0, 1. Ketika A0, A1, dan A2 bernilai 0, 0, 0 tetapi E0, E1,\r\ndan E2 bernilai 0, 0, 1 maka terdapat output pada O0 bernilai 1 dan pada O1-\r\nO7 bernilai 0. Ketika A0, A1, dan A2 bernilai 0, 0, 1 dan E0, E1, dan E2\r\nbernilai 0, 0, 1 maka terdapat output pada O4 bernilai 1 dan yang tadinya O0\r\nbernilai 1 berubah menjadi 0.\r\n\r\n3.2.3 Percobaan Dekoder BCD ke 7 Segmen\r\n\r\nTabel 3.3 Percobaan Dekoder BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X\r\n\r\n1 0 X X X X\r\n\r\n1 1 0 0 0 0\r\n\r\n8\r\n\r\n1 1 0 0 0 1\r\n\r\n1 1 0 0 1 0\r\n\r\n1 1 0 0 1 1\r\n\r\n1 1 0 1 0 0\r\n\r\n1 1 0 1 0 1\r\n\r\n1 1 0 1 1 0\r\n\r\n1 1 0 1 1 1\r\n\r\n1 1 1 0 0 0\r\n\r\n1 1 1 0 0 1\r\n\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n9\r\n\r\nBerdasarkan tabel percobaan Dekoder BCD ke 7 Segmen, nilai output\r\npada 7 segment adalah hasil konversi dari input yang tadinya bilangan biner\r\nmenjadi bilangan desimal yang ditampilkan pada display 7 segment. 7 segment\r\nini hanya dapat menampilkan bilangan desimalnya sampai 9 saja, ketika\r\nbilangan desimal lebih dari 9, bentuk pada display menjadi tidak jelas atau\r\nkondisi ini disebut dengan invalid.\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1\r\n\r\n10\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nAdapun berdasarkan hasil percobaan, maka dapat ditarik kesimpulan sebagai\r\nberikut\r\n1. Multiplekser memiliki fungsi untuk mengonversikan banyak masukkan lalu\r\nmenjadi keluaran tunggal yang diatur oleh selektornya. Sedangkan,\r\nDemultiplekser merupakan kebalikan multiplekser, demultiplekser akan\r\nmengonversikan satu masukkan ke banyak keluaran yang diatur oleh\r\nselektornya.\r\n2. Pada kehidupan sehari-hari multiplekser dan demultiplekser dimanfaatkan\r\nuntuk Sistem Komunikasi, transmisi jenis data yang berbeda, Sistem\r\nTelepon, dan masih banyak lainnya.\r\n3. Encoder memiliki fungsi untuk mengkodekan/mengubah data masukan ke\r\ndata bilangan biner dengan menggunakan format tertentu pada keluaranya.\r\nSedangkan, Decoder adalah rangkaian yang memiliki fungsi untuk\r\nmengkodekan/mengubah ulang data bilangan biner pada masukanya\r\nmenjadi data asli pada outputnya\r\n4. Pemanfaatan encoder contohnya seperti memindahkan teks yang ada pada\r\nbuku cetak ke hp dengan proses scan. Pemanfaatan decoder contohnya\r\nseperti memindahkan tulisan dalam bentuk biner ke non biner dengan proses\r\nprint pada layar.', 'TRIA OKTAVIANA', 'UNIT 1');
INSERT INTO `plagiator_postmodel` (`id`, `nim`, `isi_laprak`, `nama`, `unit`) VALUES
(585, '3332210061', 'Dalam percobaa counter ini terdapat 3 percobaan yang dilakukan.\r\nPercobaan tersebut datanya didapati dari video praktikum yang telah diberikan dan\r\nditonton. Dari data video tersebut akan dianalisa mengenai konsep ataupun cara\r\nkerja dari blangko percobaan yang telah diisi.\r\n3.2.1 Multiplekser\r\n\r\nTabel 3.1 Data Hasil Percobaan Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 1\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nPada tabel di atas, dapat dilihat bahwasanya tabel tersebut merupakan\r\nmerupakan tabel hasil percobaan dari multiplekser. Dalam tabel tersebut terdapat\r\n7 input yang memiliki fungsinya masing-masing. Input A0 dan A1 merupakan\r\ninput yang digunakan sebagai selektor yang berkaitan dengan input I0, I1, I2, dan\r\nI3. Kemudian, terdapat sebuah input E̅yang memiliki fungsi sebagai enabler. Jika\r\ninput dari E̅bernilai 1, maka rangkaian multiplekser tersebut tidak dapat bekerja.\r\nSedangkan jika input dari E̅ bernilai 0, maka rangkaian rangkain multiplekser\r\ntersebut dapat bekerja. Hal tersebut dikarenakan E̅merupakan active low yang\r\nhanya dapat bekerja ketika bernilai 0 saja. Cara kerja dari multiplekser ialah input\r\n\r\n10\r\n\r\ndari E̅ harus bernilai 0 terlebih dahulu. Kemudian, input dari I0 sampai I4\r\ndimasukkan, sebagai contoh 1 0 1 1. Lalu, input dari A0 dan A1 tersebut\r\ndimasukkan sebagai selektor yang akan menentukan output dari input I0 sampai\r\nI4, sebagai contohnya A0 bernilai 0 dan A1 bernilai 1. Input dari A0 dan A1 jika di\r\ndalam bilangan biner merupakan 1 0 dan dalam desimal bernilai 2. Oleh\r\nkarenanya, output yang dihasilkan diambil dari input I2 yang bernilai 1.\r\n\r\nGambar 3.2 Rancangan Multiplekser\r\n\r\n3.2.2 Demultiplekser\r\n\r\nTabel 3.2 Data Hasil Percobaan Demultiplekser\r\n\r\nE0̅̅̅̅ E1̅̅̅̅ E2 A0 A1 A2 O0 O1 O2 O3 O4 O5 O6 O7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\n11\r\n\r\nPada tabel di atas, dapat dilihat bahwasanya tabel tersebut merupakan\r\ntabel hasil percobaan dari demultiplekser. Dalam percobaan ini terdapat 6 input\r\nyang memiliki fungsinya masing-masing. Terdapat input A0, A1, dan A2 yang\r\ndigunakan sebagai selektor untuk menentukan output-nya. Sedangkan E̅̅̅0̅, E̅̅̅1̅,\r\ndan E2 merupakan input yang digunakan sebagai enabler. E̅̅̅0̅ dan E̅̅̅1̅ merupakan\r\nactive low yang hanya dapat bekerja ketika bernilai 0 saja. Sedangkan E2\r\nmerupakan active high yang hanya dapat bekerja ketika bernilai 1 saja. Oleh\r\nkarenanya, diperlukan E̅̅̅0̅ dan E̅̅̅1̅ yang bernilai 0 dan E2 yang bernilai 1 agar\r\nrangkaian demultiplekser dapat bekerja. Cara kerja dari demultiplekser ini ialah\r\ndengan memberikan input dari A0 sampai A2 yang menentukan output pada O0\r\nsampai O7. Sebagai contohnya, input dari A0 bernilai 0, A1 bernilai 0, dan A2\r\nbernilai 1, maka input tersebut dalam bilangan biner ialah 1 0 0 yang jika\r\ndidesimalkan bernilai 4. Oleh karenanya, output yang bernilai 1 hanya terdapat\r\npada output O4 saja sedangkan yang lainnya bernilai 0.\r\n\r\nGambar 3.3 Rancangan Demultiplekser\r\n\r\n12\r\n\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\nTabel 3. 3 Data Hasil Percobaan Dekoder BCD ke 7 Segmen\r\n\r\nLT Blanking D3 D2 D1 D0\r\n\r\nBentuk\r\nDisplay\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1 -\r\n\r\n13\r\n\r\nPada tabel di atas, dapat dilihat bahwasanya tabel tersebut merupakan\r\ntabel hasil percobaan dari dekoder BCD ke 7 segmen. Dalam percobaan ini,\r\nterdapat 6 input yang memiliki fungsinya masing-masing. Untuk LT atau yang\r\ndisebut juga dengan Light Test berfungsi untuk mencoba 7 segmen apakah\r\nberfungsi dengan baik atau tidak. Untuk memulai percobaan, diperlukan LT yang\r\nbernilai 1 dan Blanking yang bernilai 1 juga. Blanking di sini digunakan sebagai\r\npower untuk displaynya. Jika Blanking bernilai 0, maka displaynya tidak akan\r\nmemunculkan angka berapa pun atau gelap. Oleh karenanya, diperlukan Blanking\r\nyang bernilai 1 untuk menyalakan displaynya agar dapat menampilkan angka.\r\nTerdapat input D3 sampai D0 yang digunakan untuk output-nya yang akan\r\nditampilkan pada display. Jika pada input D3 sampai D0 bernilai 1 0 0 1, maka\r\ndisplay akan menampilkan angka 9. Pada display tersebut yang dapat ditampilkan\r\nhanya angka 1 sampai 9 saja. Ketika input dari D3 sampai D0 bernilai lebih dari\r\n9, maka yang akan ditampilkan pada display berupa simbol-simbol yang tidak\r\ndipahami oleh manusia.\r\n\r\nGambar 3.4 Rancangan Dekoder BCD ke 7 Segmen\r\n\r\n14\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerdasarkan dari hasil praktikum yang telah dilakukan mengenai MSI\r\n(Medium Scale Integration), didapatkan beberapa kesimpulan sebagai berikut:\r\n1. Multipleker merupakan rangkaian logika yang diberikan beberapa input\r\nlalu diseleksi salah satu input tersebut sehingga hanya menghasilkan\r\nsatu output.\r\nDemultiplekser merupakan rangkaian logika yang hanya menerima satu\r\ninput yang kemudian didistribusikan ke beberapa output yang ada.\r\n2. Multiplekser dan demultiplekser digunakan dalam sistem komunikasi\r\nseperti walkie talkie yang memiliki banyak channel yang berbeda-beda\r\nuntuk komunikasi.\r\n3. Rangkaian encoder dan decoder yang digunakan ada di percobaan yakni\r\ndekoder BCD ke 7 segmen. Dalam percobaan tersebut terjadinya\r\nperubahan bahasa dari bahasa biner menjadi angka yang dapat dilihat\r\noleh manusia melalui display.\r\n4. Encoder dimanfaatkan untuk membantu manusia memahami bahasa\r\nmesin dengan diubahnya menjadi bahasa manusia. Sedangkan decoder\r\nberkebalikan dengan encoder, yakni dimanfaatkan untuk membantu\r\nmesin memahami bahasa manusia menjadi bahasa mesin.', 'REYHAN NUGRAHA', 'UNIT 1'),
(586, '3332170101', 'Berdasarkan praktikum yang telah dilakukan dapat disimpulkan bahwa :\r\n1. Scale Of Integrasi adalah metode yang terlibat dengan membuat\r\nsirkuit terkoordinasi dengan mengkonsolidasikan sejumlah besar\r\nsemikonduktor MOS ke chip soliter.\r\n2. demultiplekser hanya menerima satu masukan dan memberikan\r\nbanyak keluaran. Dan demultiplexer Demultiplekser artinya satu\r\nke banyak.\r\n3. Multiplekser adalah rangkaian yang menerima banyak masukan\r\ntetapi hanya memberikan satu keluaran.', 'BABAN WIBAWA KOMARA', 'UNIT 1'),
(587, '3332210051', 'Dari data tabel di atas, dapat diketahui bahwa output yang\r\ndihasilkan itu dipengaruhi oleh A0 dan A1 yang di mana dalam percobaan\r\nini berfungsi sebagai selector. Jika A0 dan A1 bernilai 0, maka output Y\r\nyang dihasilkan sama dengan inputan I0 karena inputan A tersebut\r\nmembentuk biner 0 (0 0) sehingga output nya bergantung pada jalur input\r\nI0. Jika A0 bernilai 0 dan A1 bernilai 1, maka output Y yang dihasilkan\r\nsama dengan inputan I1 karena inputan A tersebut membentuk biner 1 (0\r\n1) sehingga output nya bergantung pada jalur input I1. Jika A0 bernilai 1\r\ndan A1 bernilai 0, maka output Y yang dihasilkan sama dengan inputan I2\r\nkarena inputan A tersebut membentuk biner 2 (1 0) sehingga output nya\r\nbergantung pada input I2. Yang terakhir, jika A0 dan A1 bernilai 1, maka\r\n\r\n11\r\n\r\noutput Y yang dihasilkan sama dengan inputan I3 karena inputan A\r\ntersebut membentuk biner 3 (1 1) sehingga output nya bergantung pada\r\njalur input I3. Rangkaian multiplexer ini bersifat active low, yang di mana\r\nrangkaian akan aktif apabila diberikan nilai logika nol. Maka dari itu, dari\r\ndata di atas apabila E nya bernilai 0 maka rangkaian tidak dapat berjalan\r\ndan tidak dapat memproses data sehingga output nya pasti nol, dan ketika\r\nE bernilai 1 maka rangkaian dapat berjalan dan data akan di proses.\r\n3.2.2 Demultipkexer\r\n\r\nPada percobaan kedua, digunakan rangkaian demultiplexer\r\nsebagai berikut:\r\n\r\nGambar 3. 2 Rangkaian Demultiplexer\r\n\r\nDari percobaan di atas, didapatkan hasil data sebagai berikut:\r\nTabel 3. 2 Data Hasil Percobaan Demultiplexer\r\n\r\n̅ ̅̅ ̅ ̅ ̅̅ ̅ E2 A0 A1 A2 ̅\r\n0 ̅\r\n1 ̅\r\n2 ̅\r\n3 ̅\r\n4 ̅\r\n5 ̅\r\n6 ̅\r\n7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\n\r\n12\r\n\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0\r\n\r\n0 0 0 0 0 0 0 0\r\n\r\n0 0 1 0 0 0\r\n\r\n1 0 0 0 0 0 0 0\r\n\r\n0 0 1 0\r\n\r\n0 1 0 0 0 0 1 0 0 0\r\n\r\n0 0 1 0\r\n\r\n1 0 0 0 1 0 0 0 0 0\r\n\r\n0 0 1 0\r\n\r\n1 1 0 0 0 0 0 0 1 0\r\n\r\n0 0 1\r\n\r\n1 0 0 0 1 0 0 0 0 0 0\r\n\r\n0 0 1\r\n\r\n1 0 1 0 0 0 0 0 1 0 0\r\n\r\n0 0 1\r\n\r\n1 1 0 0 0 0 1 0 0 0 0\r\n\r\n0 0 1\r\n\r\n1 1 1 0 0 0 0 0 0 0 1\r\n\r\nAgar rangkaian dapat berjalan dan data dapat diproses, maka\r\n̅̅̅\r\n\r\ndan\r\n̅̅̅ harus bernilai 0 karena bersifat active low dan E2 harus bernilai\r\n1 karena bersifat active high. Inputan A pada percobaan ini berfungsi\r\nsebagai selector, dan O0-O7 merupakan output nya. Output yang\r\n\r\ndihasilkan adalah pengaruh dari A yang di input. Misal pada baris ke-\r\n5, di input A0 dan A1 bernilai 0 dan A2 bernilai 1, didapatkan biner\r\n\r\nnya adalah 100 ( bacanya dari MSB to LSB) yang berarti desimal nya\r\nadalah 4 sehingga nilai output 1 berada pada O4. Dapat dihitung pula\r\nsecara manual sebagai berikut:\r\nA0:0 = 20\r\n.0, A1:0 = 21\r\n\r\n.0, A2:1 = 22\r\n\r\n.0 sehingga didapatkan 0 + 0 + 4\r\n= 4. Hasil tersebut menunjukkan posisi output yang bernilai 1.\r\n3.2.3 Decoder BCD ke 7 Segmen\r\n\r\nPada percobaan ketiga, digunakan rangkaian decoder BCD to 7\r\nsegment sebagai berikut:\r\n\r\nGambar 3. 3 Rangkaian Decoder BCD to 7 Segment\r\n\r\n13\r\n\r\nDari percobaan di atas, didapatkan hasil data sebagai berikut:\r\nTabel 3. 3 Data Hasil Percobaan Decoder BCD to 7 Segment\r\nLT Blanking D3 D2 D1 D0 Bentuk Display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1\r\n\r\n0 0 0 0 0\r\n\r\n1 1\r\n\r\n0 0 0 1 1\r\n\r\n1 1\r\n\r\n0 0 1 0 2\r\n\r\n1 1\r\n\r\n0 0 1 1 3\r\n\r\n1 1\r\n\r\n0 1 0 0 4\r\n\r\n1 1\r\n\r\n0 1 0 1 5\r\n\r\n1 1\r\n\r\n0 1 1 0 6\r\n\r\n1 1\r\n\r\n0 1 1 1 7\r\n\r\n1 1\r\n\r\n1 0 0 0 8\r\n\r\n1 1\r\n\r\n1 0 0 1 9\r\n\r\n1 1\r\n\r\n1 0 1 0\r\n\r\n1 1\r\n\r\n1 0 1 1\r\n\r\n1 1\r\n\r\n1 1 0 0\r\n\r\n1 1\r\n\r\n1 1 0 1\r\n\r\n1 1\r\n\r\n1 1 1 0\r\n\r\n1 1\r\n\r\n1 1 1 1 -\r\n\r\nPada percobaan ini, terjadi proses decoding yang artinya terjadi\r\nproses penerjemahan dari bahasa komputer atau isyarat mesin digital\r\nyang berupa bilangan biner ke bahasa yang dimengerti oleh manusia\r\nyaitu bilangan desimal. Dalam percobaan decoder BCD to 7 segment\r\nini, terdapat inputan LT di mana LT ini berfungsi sebagai penguji\r\nlampu dan terdapat Blanking di mana Blanking ini berfungsi untuk\r\nmengulang 7 segment menjadi kondisi awal sehingga dapat\r\ndimasukkan data yang baru. Dari data tabel di atas, dapat diketahui jika\r\nLT bernilai 0 dan blanking nya X atau bebas (don’t care) atau saat LT\r\nnya bernilai 1 dan blanking nya bernilai 0, maka display nya tidak akan\r\n\r\n14\r\n\r\nmenampilkan apapun (mati). Ketika LT dan Blanking nya bernilai 1\r\nmaka inputan yang dimasukkan pada rangkaian ini akan menampilkan\r\nangka sesuai dengan biner yang merepresentasikan desimal tersebut.\r\nSebagai contohnya, dilihat pada baris ke-4, terdapat inputan D3 = D2 =\r\nD1= 0 dan D0 = 1. Biner yang terbentuk adalah 0001 sehingga angka\r\nyang muncul pada display adalah angka 1 karena biner 0001 adalah\r\nbiner dari desimal 1. Pada baris ke-10, terdapat inputan D3 = 0 dan D2\r\n= D1 = D0 = 1. Biner yang terbentuk adalah 0111 sehingga angka yang\r\nmuncul pada display adalah angka 7 karena biner 0111 adalah biner\r\ndari desimal 7.\r\n\r\n15\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nSetelah melakukan praktikum ini, praktikan dapat menyimpulkan bahwa:\r\n1. Multiplexer adalah suatu rangkaian yang memiliki banyak inputan\r\ntetapi hanya memiliki satu ouput, sedangkan demultiplexer adalah\r\nkebalikan dari multiplexer di mana suatu rangkaian memiliki satu input\r\ntetapi menghasilkan banyak output.\r\n2. Contoh manfaat dari multiplexer adalah ketika kita video call, terdapat\r\nmasukan data berupa gambar/video dari kamera dan juga voice. Data\r\ntersebut akan dikirm menjadi 1 data. Contoh manfaat dari\r\ndemultiplexer adalah orang yang menerima 1 data tersebut, dan data\r\ntersebut dapat di akses menjadi beberapa keluaran seperti video dan\r\nsuara.\r\n3. Salah satu contoh dari rangkaian decoder adalah decoder BCD to 7\r\nsegment, dan salah satu contoh dari rangkaian encoder adalah\r\nkeyboard.\r\n4. Encoder adalah suatu piranti yang digunakan untuk mengubah\r\nbilangan digital (misal: desimal) pada input nya menjadi bilangan biner\r\npada output nya. Pengaplikasiannya terdapat pada keyboard, remote tv,\r\ndll. Sedangkan decoder adalah suatu piranti yang digunakan untuk\r\nmengubah bilangan biner pada input menjadi suatu sistem bilangan\r\nlain (misal: desimal) pada output nya. Pengaplikasiannya terdapat pada\r\ndekompresor, converter audio analog to digital data, dll.', 'RUTH ANANDINA', 'UNIT 1'),
(588, '3332210003', 'Jika E atau Enable 1 maka mau berapapun selektor atau masukannya tidak akan\r\nberpengaruh karna rangkaian tersebut tidak aktif atau tidak bekerja sehingga tidak\r\ndapat memproses masukan yang ada maka E tersebut harus berlogika 0 maka\r\nmasukan baru akan diproses.\r\n\r\nGambar 3. 4 Rangkaian Jika A0 0 dan A1 0\r\n\r\nJika selektor A0 dan A1 dalam posisi 00 maka selektor memilih masukan pada I0\r\njika masukan I0nya 1 maka akan mengeluarkan 1 namun jika I0 nya 0 maka\r\nkeluarannyapun akan 0.\r\n\r\n15\r\n\r\nGambar 3. 5 Rangkaian Jika A1 1 dan A0 0\r\n\r\nJika selektor A0(kiri) 0 dan A1(kanan) 1 maka selektor akan memilih masukan pada\r\nI2 jika masukan pada I2 1 maka keluarannya 1 namun jika I0, I1 atau I3 nya 1 dan\r\nI2 nya 0 maka keluarannya tetep 0 karena jika mengubah dari biner ke desimal 10\r\nsama dengan dua maka hanya memfokuskan pada masukan I2\r\n\r\nGambar 3. 6 Rangkaian Jika A0 1 dan A1 0\r\n\r\nJika selektor A0(kiri) 1 dan A1(kanan) 0 maka selektor akan memilih masukan pada\r\nI1 jika masukan pada I1 1 maka keluarannya 1 namun jika I0, I2 atau I3 nya 1 dan\r\nI1 nya 0 maka keluarannya tetep 0 karena jika mengubah dari biner ke desimal 01\r\nsama dengan satu maka hanya memfokuskan pada masukan I1.\r\n\r\n16\r\n\r\nGambar 3. 7 Rangkaian Jika A1 dan A0 1\r\n\r\nJika selektor A0(kiri) 1 dan A1(kanan) 1 maka selektor akan memilih masukan pada\r\nI3 jika masukan pada I3 1 maka keluarannya 1 namun jika I0, I1 atau I2 nya 1 dan\r\nI3 nya 0 maka keluarannya tetep 0 karena jika mengubah dari biner ke desimal 11\r\nsama dengan tiga maka hanya memfokuskan pada masukan I3 saja.\r\nJadi, dalam multiplekser tersebut masukan yang keluar tergantung selektor yang\r\ndigunakan jika 00 maka memfokuskan pada masukan I0, jika 01 maka\r\nmemfokuskan pada masukan I1, jika 10 maka memfokuskan pada masukan I2, dan\r\njika 11 maka memfokuskan pada masukan I3.\r\n3.2.2 Demultiplekser\r\nDi bawah ini merupakan rangkaian dan data berupa tabel dari hasil\r\npercobaan, sebagai berikut:\r\n\r\nTabel 3. 2 Percobaan Demultiplekser\r\n\r\n̅E0̅ ̅E1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1\r\n0 0 1 0 0 1 1\r\n0 0 1 0 1 0 1\r\n0 0 1 0 1 1 1\r\n\r\n17\r\n0 0 1 1 0 0 1\r\n0 0 1 1 0 1 1\r\n0 0 1 1 1 0 1\r\n0 0 1 1 1 1 1\r\nDari tabel di atas dapat dianalisis sebagai berikut:\r\n\r\nGambar 3. 8 Rangkaian Jika E0 dan E1 1\r\n\r\nE0 dan E1 pada rangkaian demultiplekser harus 0 karena jika E0 dan E1 nya 1 maka\r\ntidak akan memproses masukan berapapun masukannya, berbanding terbalik\r\ndengan E2. E2 pada demultiplekser ini harus 1 karena jika 0 maka masukan tidak\r\nakan diproses.\r\n\r\nGambar 3. 9 Rangkaian Jika A1 1\r\n\r\n18\r\n\r\nJumlah keluaran ini ada 8 dari 0-7 masukannya dimulai dari A2 – A0, jika A1 1\r\nmaka keluaran berupa O2 mengapa? Karena biner dari 01 yaitu 2\r\n\r\nGambar 3. 10 Rangkaian Jika A2 1 dan A0 1\r\n\r\nJika A2 1 A1 0 A0 1 atau biner 101 berjumlah 5 maka keluaran 1 pada O5. A2 = 1,\r\nA1=2, A0 = 4\r\n\r\nGambar 3. 11 Rangkaian Jika A2, A1 dan A0 1\r\n\r\n19\r\n\r\nJika A0, A1, A2 masukannya 1 semua atau biner 111 maka keluaran yang\r\ndihasilkan adalah O7.\r\n3.2.3 Dekoder BCD Ke 7 Segment\r\nDi bawah ini merupakan rangkaian dan data berupa tabel dari hasil\r\npercobaan, sebagai berikut:\r\nTabel 3. 3 Percobaan Dekoder BCD Ke 7 Segment\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X X\r\n1 0 X X X X X\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 C\r\n1 1 1 0 1 1 ]\r\n1 1 1 1 0 0 U\r\n1 1 1 1 0 1 C_\r\n1 1 1 1 1 0 Ic\r\n1 1 1 1 1 1\r\nDari tabel di atas dapat dianalisis sebagai berikut:\r\n\r\n20\r\n\r\nGambar 3. 12 Rangkaian Jika LT 1 dan Blangking 0\r\n\r\nGambar 3. 13 Rangkaian Jika Blangking 1 dan LT 0\r\n\r\nRangkaian tidak akan hidup jika blanking pada posisi 0 dan tidak akan diproses\r\njika LT masi 0. Maka LT dan Blanking pada rangkaian tersebut harus 1 agar\r\nrangkaian nyala dan data dapat diproses\r\n\r\nGambar 3. 14 Rangkaian Jika D0 berupa 1\r\n\r\n21\r\n\r\nJika D0 pada posisi 1 maka akan menghasilkan keluaran berupa 1 karena jumlah\r\nbinernya 0001\r\n\r\nGambar 3. 15 Rangkaian Jika D0 dan D2 1\r\n\r\nJika D0 1 dan D2 1 mengapa mengeluarkan 5 karena memiliki biner 0101 yang\r\nberjumlah 5\r\n\r\nGambar 3. 16 Kondisi Invalid\r\n\r\nKondisi invalid bisa terjadi pada BCD to 7segment jika masukan melebihi 0-9\r\natau jika biner tersebut berupa 1010(10), 1011(11), 1100(12), 1101(13), 1110(14)\r\ndan 1111(15). Karena batas bcd 7 segment ini adalah 9 jika melebihi itu akan\r\nmengeluarkan keluaran berupa huruf atau gambar yang bukan berupa angka pada\r\ndisplay.\r\n\r\n22\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nSetelah melakukan percobaan tentang MSI (Medium Scale Integration),\r\ndidapat kesimpulan sebagai berikut:\r\n1. Piranti pada multiplekser bisa menggunakan IC 7400 seperti 74157,\r\n74158, 74153 sedangkan piranti demultiplekser bisa menggunakan IC\r\n74LS138 dan IC 74LS151\r\n2. Manfaat multiplekser sebagai penyeleksi data untuk dipindahkan\r\nkedalam satu jalur sedangkan manfaat demultiplekser sebagai\r\npemecah sinyal yang sudah digabungkan dalam multiplekser tadi\r\nyang kemudian diteruskan pada perangkan bersangkutan\r\n3. Rangkaian decoder terdiri dari 3 to 8 atau masukan 3 keluaran 8, 4 to\r\n6 atau masukan 4 keluaran 6, decoder BCD to desimal 4bit masukan\r\ndan 8bit keluaran dan decoder BCD to 7segment masukan 4bit dan\r\nkeluaran 8bit. Sedangkan pada encoder terdiri dari 4 to 2 atau\r\nmasukan 4 keluaran 2, 8 to 3 atau masukan 8 keluaran 3, desimal to\r\nBCD (10 to 4) atau masukan 10 keluaran 4\r\n4. Decoder: Mengubah atau penerjemah bilang biner (bahasa komputer\r\natau mesin) agar bisa dibaca dan dimengerti oleh manusia. Encoder:\r\nMembangun enkripsi standar dan algoritma deskripsi sehingga\r\nmembuat data aman pada setiap komunikasi nirkabel.', 'YASMIN MAULIDA ARRAUFU', 'UNIT 1'),
(589, '3332200042', 'Pada percobaan tentang medium scale integration ini dilakukan\r\ndengan beberapa metode yang berbeda, berikut adalah hasih percobaan\r\ntersebut\r\n\r\n10\r\n\r\n3.2.1 Multiplekser\r\n\r\nTabel 3.1 Blanko Hasil Percobaan 1 [1]\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nAnalisis :\r\nPada percobaan kali ini kita menggunakan multiplekser.\r\nMultiplekser atau selektor data merupakan suatu rangkaian logika yang\r\nmenerima beberapa input data, dan pada saat tertentu hanya mengizinkan\r\nsatu data input masuk ke output yang diatur oleh data selektor. Oleh sebab\r\nitu multiplekser mempunyai fungsi sebagai pengontrol digital.\r\nPada percobaan ini, IC yang digunakan merupakan active-low.\r\nGerbang logika yang digunakan pada multiplekser ini yaitu AND lalu\r\nkemudian OR. A0 dan A1 berfungsi sebagai data selektornya, sedangkan I0\r\n– I3 hanya berfungsi untuk inputan datanya.\r\nRumus mencari jumlah selektor :\r\n\r\nJumlah selektor = log2\r\nn\r\nm = log2\r\nn\r\n\r\nUntuk input 4 bit\r\n\r\nm = log2\r\n4\r\nm = log2\r\n2\r\n2\r\nm = 2 log2\r\n2\r\nm = 2.1\r\nm = 2\r\n\r\n11\r\n\r\nBerdasarkan tabel blanko percobaan multiplexer, maka dapat\r\ndiuraikan sebagai berikut :\r\na. Ketika A0 dan A1 bernilai x dan x , E̅ bernilai 1 , I0 sampai I3 bernilai\r\nxxxx , maka akan menghasilkan Y bernilai 0\r\nb. Ketika A0 dan A1 bernilai 0 dan 0 , E̅ bernilai 0 , I0 sampai I3 bernilai\r\n0111 , maka akan menghasilkan Y bernilai 0\r\nc. Ketika A0 dan A1 bernilai 0 dan 0 , E̅ bernilai 0 , I0 sampai I3 bernilai\r\n1000, maka akan menghasilkan Y bernilai 1\r\nd. Ketika A0 dan A1 bernilai 0 dan 1 , E̅ bernilai 0 , I0 sampai I3 bernilai\r\n1011 , maka akan menghasilkan Y bernilai 1\r\ne. Ketika A0 dan A1 bernilai 0 dan 1 , E̅ bernilai 0, I0 sampai I3 bernilai\r\n0100, maka akan menghasilkan Y benilai 0\r\nf. Ketika A0 dan A1 bernilai 1 dan 0, E̅ bernilai 0 , I0 sampai I3 bernilai\r\n1101 , maka akan menghasilkan Y bernilai 1\r\ng. Ketika A0 dan A1 bernilai 1 dan 0 , E̅ bernilai 0, I0 sampai I3 bernilai\r\n0010, maka akan menghasilkan Y bernilai 0\r\nh. Ketika A0 dan A1 bernilai 1 dan 1 , E̅ bernilai 0 , I0 sampai I3 bernilai\r\n1110, maka akan menghasilkan Y bernilai 0\r\ni. Ketika A0 dan A1 bernilai 1 dan 1 , E̅ bernilai 0, I0 sampai I3 bernilai\r\n0001, maka akan menghasilkan Y bernilai 1\r\n3.2.2 Demultiplekser\r\n\r\nTabel 3.2 Blanko Hasil Percobaan 2 [1]\r\n\r\nE̅0 E̅1 E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 0 1 0 0 0 0 0\r\n\r\n12\r\n\r\nE̅0 E̅1 E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nAnalisis :\r\nPada percobaan kali ini kita menggunakan demultiplekser.\r\nDemultiplekser merupakan suatu rangkaian yang mendistribusikan satu\r\nmasukan ke lebih dari satu keluaran. Demultiplekser juga biasa dikenal\r\nsebagai data distributor. Pemilihan keluaran dilakukan oleh sinyal kontrol.\r\nPada percobaan ini, IC yang digunakan merupakan active-low.\r\nRangkaian demultiplekser ini rangkaian nya hampir sama dengan\r\nmultiplekser, perbedaannya hanya di akhirnya di beri gerbang logika NOT\r\nuntuk membalik hasil.\r\nBerdasarkan tabel blanko percobaan demultiplexer, maka dapat\r\ndiuraikan sebagai berikut :\r\na. Ketika E̅0 dan E̅1 bernilai 1 dan x, E2 bernilai x, A0-A2 bernilai 000,\r\nmaka tidak akan memiliki nilai 1 pada O̅ manapun\r\nb. Ketika E̅0 dan E̅1 bernilai x dan 1 , E2 bernilai x , A0-A2 bernilai 000\r\nmaka tidak akan memiliki nilai 1 pada O̅ manapun\r\nc. Ketika E̅0 dan E̅1 bernilai x dan x , E2 bernilai 0, A0-A2 bernilai 000\r\nmaka tidak akan memiliki nilai 1 pada O̅ manapun\r\nd. Ketika E̅0 dan E̅1 bernilai 0 dan 0, E2 bernilai 1, A0-A2 bernilai 000 maka\r\nakan memiliki nilai 1 pada O̅0\r\ne. Ketika E̅0 dan E̅1 bernilai 0 dan 0 , E2 bernilai 1, A0-A2 bernilai 001\r\nmaka akan memiliki nilai 1 pada O̅4\r\nf. Ketika E̅0 dan E̅1 bernilai 0 dan 0, E2 bernilai 1, A0-A2 bernilai 010 maka\r\nakan memiliki nilai 1 pada O̅2\r\ng. Ketika E̅0 dan E̅1 bernilai 0 dan 0, E2 bernilai 1, A0-A2 bernilai 011 maka\r\nakan memiliki nilai 1 pada O̅6\r\nh. Ketika E̅0 dan E̅1 bernilai 0 dan 0, E2 bernilai 1, A0-A2 bernilai 100 maka\r\nakan memiliki nilai 1 pada O̅2\r\n\r\n13\r\n\r\ni. Ketika E̅0 dan E̅1 bernilai 0 dan 0, E2 bernilai 1, A0-A2 bernilai 101 maka\r\nakan memiliki nilai 1 pada O̅5\r\nj. Ketika E̅0 dan E̅1 bernilai 0 dan 0, E2 bernilai 1, A0-A2 bernilai 110 maka\r\nakan memiliki nilai 1 pada O̅3\r\nk. Ketika E̅0 dan E̅1 bernilai 0 dan 0, E2 bernilai 1, A0-A2 bernilai 111 maka\r\nakan memiliki nilai 1 pada O̅7\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\n\r\nTabel 3.3 Blanko Hasil Percobaan 3 [1]\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X No display\r\n1 0 X X X X No display\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 ⊏\r\n1 1 1 0 1 1 ⊐\r\n1 1 1 1 0 0 ⨆\r\n1 1 1 1 0 1 ⊑\r\n1 1 1 1 1 0 t\r\n1 1 1 1 1 1 No display\r\nAnalisis :\r\nDekoder merupakan suatu rangkaian logika yang memiliki fungsi\r\nuntuk menampilkan kode-kode biner menjadi karakter yang bisa dipahami\r\nsecara visual. “Dekoder BCD ke 7 Segmen” merupakan suatu rangkaian\r\n\r\n14\r\n\r\nelektronika yang berfungsi untuk mengubah kode BCD menjadi karakter\r\ntampilan angka desimal yang dapat dilihat secara visual.\r\nLamp Test (LT) berfungsi hanya untuk mengetes lampu yang akan\r\nmenyala ketika bernilai 1. Blanking berguna untuk gerbang enable.\r\nKeduanya yaitu LT dan blanking harus bernilai 1 agar outputnya keluar.\r\nAlasan dari tidak bisa ditunjukan hexadesimal pada percobaan ini yaitu\r\ntruth table yang digunakan tidak menunjukkan bilangan hexadesimal\r\nkarena IC yang digunakan merupakan jenis BCD (Binery Coded Decimal).\r\nBerdasarkan tabel blanko percobaan dekoder, maka dapat\r\ndiuraikan sebagai sebagai berikut :\r\na. Ketika LT bernilai 0 , Blanking bernilai x , D3 – D0 bernilai xxx , maka\r\nakan menghasilkan bentuk display yaitu no display\r\nb. Ketika LT bernilai 1 , Blanking bernilai 0 , D3 – D0 bernilai xxx, maka\r\nakan menghasilkan bentuk display yaitu no display\r\nc. Ketika LT bernilai 1 , Blanking bernilai 1 , D3 – D0 bernilai 0000 , maka\r\nakan menghasilkan bentuk display yaitu 0\r\nd. Ketika LT bernilai 1 , Blanking bernilai 1, D3 – D0 bernilai 0001 , maka\r\nakan menghasilkan bentuk display yaitu 1\r\ne. Ketika LT bernilai 1 , Blanking bernilai 1, D3 – D0 bernilai 0010, maka\r\nakan menghasilkan bentuk display yaitu 2\r\nf. Ketika LT bernilai 1, Blanking bernilai 1, D3 – D0 bernilai 0011, maka\r\nakan menghasilkan bentuk display yaitu 3\r\ng. Ketika LT bernilai 1, Blanking bernilai 1, D3 – D0 bernilai 0100, maka\r\nakan menghasilkan bentuk display yaitu 4\r\nh. Ketika LT bernilai 1, Blanking bernilai 1, D3 – D0 bernilai 0101, maka\r\nakan menghasilkan bentuk display yaitu 5\r\ni. Ketika LT bernilai 1, Blanking bernilai 1, D3 – D0 bernilai 0110, maka\r\nakan menghasilkan bentuk display yaitu 6\r\nj. Ketika LT bernilai 1, Blanking bernilai 1, D3 – D0 bernilai 0111, maka\r\nakan menghasilkan bentuk display yaitu 7\r\nk. Ketika LT bernilai 1, Blanking bernilai 1, D3 – D0 bernilai 1000, maka\r\nakan menghasilkan bentuk display yaitu 8\r\n\r\n15\r\n\r\nl. Ketika LT bernilai 1, Blanking bernilai 1, D3 – D0 bernilai 1001, maka\r\nakan menghasilkan bentuk display yaitu 9\r\nm. Ketika LT bernilai 1, Blanking bernilai 1, D3 – D0 bernilai 1010, maka\r\nakan menghasilkan bentuk display yaitu ⊏\r\nn. Ketika LT bernilai 1, Blanking bernilai 1, D3 – D0 bernilai 1011, maka\r\nakan menghasilkan bentuk display yaitu ⊐\r\no. Ketika LT bernilai 1, Blanking bernilai 1, D3 – D0 bernilai 1100, maka\r\nakan menghasilkan bentuk display yaitu ⨆\r\np. Ketika LT bernilai 1, Blanking bernilai 1, D3 – D0 bernilai 1101, maka\r\nakan menghasilkan bentuk display yaitu ⊑\r\nq. Ketika LT bernilai 1, Blanking bernilai 1, D3 – D0 bernilai 1110, maka\r\nakan menghasilkan bentuk display yaitu t\r\nr. Ketika LT bernilai 1, Blanking bernilai 1, D3 – D0 bernilai 1111, maka\r\nakan menghasilkan bentuk display yaitu no display\r\n\r\n16\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerdasarkan pada praktikum yang telah dilakukan, mengenai “MSI\r\n(Medium Scale Integration)” dapat diambil kesimpulan sebagai berikut :\r\n1. Terdapat berbagai macam jenis multiplekser dan demultiplekser seperti\r\nrangkaian 2-to-1 multiplekser dan rangkaian 4-to-1 multiplekser.\r\n2. Multiplekser merupakan rangkaian logika yang berfungsi untuk menerima\r\nbeberapa input dan mengeluarkan satu ouput. Sedangkan, demultiplekser\r\nmerupakan rangkaian logika yang berfungsi untuk menerima beberapa input\r\ndan mengeluarkan satu ouput.\r\n3. Encoder merupakan rangkaian digital yang berfungsi untuk merubah\r\nbilangan biner menjadi bentuk yang bisa dilihat secara visual seperti\r\nbilangan desimal. Sedangkan, decoder merupakan rangkaian digital yang\r\nberfungsi untuk merubah bentuk yang bisa dilihat secara visual seperti\r\nbilangan desimal ke menjadi bilangan biner.\r\n4. Terdapat beberapa macam jenis rangkaian decoder seperti rangkaian 2-to-4\r\ndecoder dengan input enable dan rangkaian 4x16 decoder dibangun dengan\r\ndua 3x8 decoder.', 'WIDLA MUHAMMAD ZIDNI MUFTI', 'UNIT 1'),
(590, '3332210098', 'Adapun hasil analisis percobaan dari praktikum Medium Scale\r\nIntegration adalah sebagai berikut.\r\n3.2.1 Multiplekser\r\n\r\nBerikut adalah gambar rangkaian dan tabel hasil dari percobaan\r\nmultiplekser yang dapat dilihat pada gambar 3.1 dan tabel 3.1 dibawah\r\nini.\r\n\r\n9\r\n\r\nGambar 3.1 Contoh rangkaian multiplekser\r\n\r\nTabel 3.1 Hasil percobaan Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nBerdasarkan rangkaian dan tabel di atas didapatkan kesimpulan\r\nyaitu, A0 dan A1 merupakan pin selector yang dapat menentukan\r\nsaluran keluaran yang aktif. Lalu, E’ (Enabler) merupakan gerbang\r\nyang bersifat active low yang dimana 0 = diproses dan 1= tidak\r\ndiproses, sedangkan untuk yang lain bersifat active high jadi hanya\r\nenabler saja yang bersifat active low. Selanjutnya, ada pin input yaitu\r\nI0, I1, I2, dan I3. Kemudian MSB (Most Significant Bit) nya adalah I3\r\ndan LSB (Least Significant Bit) nya adalah I0. Jika, dilihat dari hasil\r\n\r\n10\r\n\r\npercobaan awal dimana nilai E’ (Enabler) bernilai 1 yang artinya tidak\r\ndiproses, maka nilai lainnya (selector maupun input) akan mengalami\r\nkondisi don’t care atau tidak dipedulikan dan keluarannya 0. Ini terjadi\r\nkarena E’ berfungsi sebagai penentu apakah proses akan dijalankan atau\r\ntidak. Lalu, ketika E’ bernilai 0 yang berarti proses dilakukan barulah\r\nfungsi lainnya akan ikut berproses. Bisa dilihat nilai selector A1 dan A2\r\nserta nilai-nilai masukannya setelah nilai E’ diberi nilai 0 atau\r\ndiaktifkan maka prosespun terjadi.\r\nKemudian, pada baris ke 2 dan 3 E’ bernilai 0 (proses), tetatapi\r\npada baris ke 2 dan 3 memiliki keluaran (Y) yang berbeda. Hal ini\r\nterjadi karena disebabkan perbedaan yang dipengaruhi oleh masukan I0\r\nkarena A0 dan A1 bernilai 0 dan 0 dimana A0 danA1 itu pin selektor\r\nyang menentukan saluran masukan yang berhubungan dengan keluaran\r\n(Y). Lalu, pada baris 4 dan 5 nilai A0 dan A1 bernilai 0 dan 1 tetapi,\r\nmempunyai output (Y) yang berbeda yaitu 1 dan 0. Hal ini dipengaruhi\r\noleh input I2 yang bernilai 1 untuk baris 4 dan 0 untuk baris 5, mengapa\r\ntidak I0 yang nilai masukannya sama saja, karena I0 itu sudah\r\ndigunakan untuk kondisi pada baris ke 2 dan 3. Selanjutnya, pada baris\r\nke 6 dan 7 nilai A0 dan A1 bernilai 1 dan 0 tapi mempunyai output (Y)\r\nyang berbeda yaitu 1 dan 0. Hal ini dipengaruhi oleh input I1 yang\r\nbernilai 1 untuk baris 6 dan 0 untuk baris 7.\r\nPada baris ke 8 dan 9 nilai A0 dan A1 bernilai 1 dan 1 tetapi\r\nmempunyai output (Y) yang berbeda yaitu 0 dan 1. Hal ini dipengaruhi\r\noleh input I3 yang bernilai 0 untuk baris 8 dan 1 untuk baris 9.\r\nSelanjutnya yang terlihat pada gambar rangkaian dimana nilai\r\nselector adalah 0 dan 1 diurutan paling atas, lalu di bawah ada Enabler,\r\nlalu ada masukannya 0123. Disini, terlihat bahwa nilai selektor dari atas\r\nke bawah adalah 10 dimana menandakan bahwa selektor memilih nilai\r\ninputan ke 1, mengapa 10 dikatan sebagai 1, ini karena nilai LSBnya\r\nterdapat pada selektor kiri (A0). Lalu ketika nilai inputan I1 (atau\r\ndidalam rangkaian ini adalah 1) maka nilai keluaran akan bernilai 1.\r\n\r\n11\r\n\r\n3.2.2 Demultiplekser\r\n\r\nBerikut adalah gambar rangkaian dan tabel hasil dari percobaan\r\ndemultiplekser yang dapat dilihat pada gambar 3.2 dan tabel 3.2\r\ndibawah ini.\r\n\r\nGambar 3.2 Contoh rangkaian demultiplekser\r\n\r\nTabel 3.2 Hasil percobaan Demultiplekser\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nBerdasarkan tabel di atas dapat disimpulkan yaitu, terdapat\r\nbeberapa notasi fungsi yang ada di dalam tabel, yaitu E0’, E1’, E2, A0,\r\n\r\n12\r\n\r\nA1, A2, O’0, O’1, O’2, O’3, O’4, O’5, O’6, O’7. Nilai E dari E0’, E1’ dan\r\nE2 adalah nilai enabler yang fungsinya untuk penentu proses akan\r\ndijalankan atau tidak. Pada E0’ dan E1’ bersifat active low dimana 0 =\r\nproses dilakukan, 1 = tidak diproses, namun pada E2 berbeda, E2\r\nbersifat active high dimana 1 = proses dilakukan, 0 = tidak diproses,\r\ndan O’0 - O’7 juga bersifat active low .\r\nDapat dilihat pada tabel di atas pada baris ke 1 sampai 3 output nya\r\nbernilai 0 karena E0’, E1’, dan E2 tidak sesuai dengan data sheet IC nya.\r\nJadi, untuk bisa bekerja bisa dilihat pada baris ke 4 sampai 11 yaitu A0,\r\nA1, A2 dibacanya dibalik menjadi A2, A1, A0 karena, A2 sebagai MSB\r\ndan A0 sebagai LSB. Pada pin selektor baris ke-4 A2, A1, A0 bernilai 0,\r\n0, 0 dengan nilai desimalnya bernilai 0 pada tabel di atas 0\r\ndilambangkan dengan O0 maka nilai outputnya 1. Lalu, pada pin\r\nselektor baris ke-5 A2, A1, A0 bernilai 1, 0, 0 dengan nilai desimalnya\r\nbernilai 4 pada tabel di atas 4 dilambangkan dengan O4 maka nilai\r\noutputnya 1.\r\nSelanjutnya, pada pin selektor baris ke-6 A2, A1, A0 bernilai 0, 1, 0\r\ndengan nilai desimalnya bernilai 2 pada tabel di atas 2 dilambangkan\r\ndengan O2 maka nilai outputnya 1. Pada pin kontrol baris ke-7 A2, A1,\r\nA0 bernilai 1, 1, 0 dengan nilai desimalnya bernilai 6 pada tabel di atas\r\n6 dilambangkan dengan O6 maka nilai outputnya 1. Lalu pada pin\r\nselektor baris ke-8 A2, A1, A0 bernilai 0, 0, 1 dengan nilai desimalnya\r\nbernilai 1 pada tabel di atas 1 dilambangkan dengan O1 maka nilai\r\noutputnya 1. Kemudian, pada pin selektor baris ke-9 A2, A1, A0 bernilai\r\n1, 0, 1 dengan nilai desimalnya bernilai 5 pada tabel di atas 5\r\ndilambangkan dengan O5 maka nilai outputnya 1. Selanjutnya, pada pin\r\nkontrol baris ke-10 A2, A1, A0 bernilai 0, 1, 1 dengan nilai desimalnya\r\nbernilai 3 pada tabel di atas 3 dilambangkan dengan O3 maka nilai\r\noutputnya 1. Pada pin kontrol baris ke-11 A2, A1, A0 bernilai 1, 1, 1\r\ndengan nilai desimalnya bernilai 7 pada tabel di atas 7 dilambangkan\r\ndengan O7 maka nilai outputnya 1.\r\n\r\n13\r\n\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\n\r\nBerikut adalah gambar rangkaian dan tabel hasil dari percobaan\r\ndekoder BCD ke 7 segmen yang dapat dilihat pada gambar 3.3 dan\r\ntabel 3.3 dibawah ini.\r\n\r\nGambar 3.3 Contoh rangkaian dekoder BCD ke 7 segmen\r\n\r\nTabel 3.3 Hasil percobaan BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n\r\n0 X X X X X\r\n\r\n1 0 X X X X\r\n\r\n1 1 0 0 0 0\r\n\r\n1 1 0 0 0 1\r\n\r\n14\r\n\r\n1 1 0 0 1 0\r\n\r\n1 1 0 0 1 1\r\n\r\n1 1 0 1 0 0\r\n\r\n1 1 0 1 0 1\r\n\r\n1 1 0 1 1 0\r\n\r\n1 1 0 1 1 1\r\n\r\n1 1 1 0 0 0\r\n\r\n1 1 1 0 0 1\r\n\r\n15\r\n\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1\r\n\r\nBerdasarkan tabel di atas dapat disimpulkan yaitu, terdapat\r\nbeberapa notasi yaitu LT, Blanking, D3, D2, D1, D0 dan bentuk\r\ndisplay. LT merupakan fungsi yang bersifat active high dimana ketika\r\nnilai 1 = proses dilakukan dan ketika nilai 0 = proses tidak dilakukan.\r\nBlanking berfungsi untuk menyalakan respon dari 7 segmen. Lalu, LT\r\nBerfungsi untuk gerbang yang memasukkan nilai-nilai dari inputan D3,\r\nD2, D1, D0. Lalu untuk bentuk display itu sendiri merupakan angka\r\ndesimal yang nilainya ditentukan oleh nilai-nilai inputan dari D3, D2,\r\nD1,D0. Rangkaian decoder yaitu rangkaian yang nilai hasil inputan\r\n\r\n16\r\n\r\nakan diolah sama seperti ketika merubah dari nilai biner ke desimal.\r\nContoh cara kerjanya adalah bisa dilihat pada baris 4 dengan LT\r\nbernilai 1, Blanking bernilai 1 dan inputan D3, D2, D1, D0 bernilai\r\n0001 maka bentuk displaynya 1 karena dipengaruhi nilai inputan yang\r\nberupa angka biner. Lalu, pada baris 5 dengan LT bernilai 1, Blanking\r\nbernilai 1 dan inputan D3, D2, D1, D0 bernilai 0010 maka bentuk\r\ndisplaynya 2 karena dipengaruhi nilai inputan yang berupa angka biner.\r\nKemudian, pada baris 6 dengan LT bernilai 1, Blanking bernilai 1 dan\r\ninputan D3, D2, D1, D0 bernilai 0011 maka bentuk displaynya 3 karena\r\ndipengaruhi nilai inputan yang berupa angka biner lalu begitupun\r\nseterusnya hingga baris ke-12. Pada baris ke-12 dengan LT bernilai 1,\r\nBlanking bernilai 1 dan inputan D3, D2, D1, D0 bernilai 1001 maka\r\nbentuk displaynya 9 karena dipengaruhi nilai masukan yang berupa\r\nangka biner. Selanjutnya, pada baris ke-13 sampai 17 tidak\r\nmenampilkan angka 10, melainkan kode seperti C yang kemudian\r\nbentuknya menjadi bolak-balik. Ini dapat terjadi karena kapasitas 7\r\nsegmen terbatas hanya sampai angka 9 otomatis input pada baris 13\r\nsampai 17 itu invalid. Lalu, mengapa ketika 0001 nilai yang\r\ndikeluarkan adalah 1, ini terjadi karena MSB terdapat pada D0 dan LSB\r\nterdapat pada D3.\r\n\r\n17\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\nBerdasarkan pada praktikum yang sudah dilakukan mengenai Medium\r\nScale Integration didapatkan kesimpulan sebagai berikut.\r\n1. Multiplekser merupakan rangkaian logika yang menyalurkan beberapa\r\nmasukan ke satu keluaran saja. Sedangkan, Demultiplekser menyalurkan\r\nsatu masukan ke beberapa keluaran.\r\n2. Multiplekser digunakan pada sistem komunikasi yaitu, untuk\r\nmenggabungkan data audio dan video menjadi satu jalur yang efisien.\r\nSedangkan, Demultiplekser digunakan juga pada sistem komunikasi yaitu,\r\nmemisahkan visual video dan audio.\r\n3. 7 Segmen merupakan contoh dari rangkaian decoder dan encoder.\r\nDecoder merupakan rangkaian digital yang menerima masukan biner lalu\r\nmengaktifkan salah satu keluarannya sesuai dengan nilai biner\r\nmasukannya.\r\n4. Decoder merupakan rangkaian digital yang merubah bilangan biner\r\nmenjadi bilangan desimal. Sedangkan, Encoder merupakan rangkaian\r\ndigital yang dapat merubah bilangan desimal ke bilangan biner. Kegunaan\r\nDecoder adalah untuk memudahkan dalam menyalakan 7 segmen.', 'ARINDA KHAIRUNNISA', 'UNIT 1'),
(591, '3332210080', 'Output pada percobaan ini dipengaruhi oleh nilai A0 dan A1,\r\njika pada A0 dan A1 kedua-duanya bernilai 0 maka yang\r\nditampilkan pada bagian output adalah input jalur I0. Jika pada A0\r\nbernilai 0 dan A1 bernilai 1 maka yang ditampilkan pada bagian\r\noutput adalah input jalur I2. Jika pada A0 bernilai 1 dan A1 bernilai\r\n0 maka yang ditampilkan pada bagian output adalah input jalur I1.\r\nJika pada A0 dan A1 kedua-duanya bernilai 1 maka yang\r\nditampilkan pada bagian output adalah input jalur I3. Seperti yang\r\npada tabel baris kedua ketika A0 dan A1 kedua-duanya bernilai 0\r\nmaka output yang ditampilkan adalah inputan yang berada di jalur\r\nI0, yaitu nol (0). Dan rangkaian ini bersifat active low, yaitu\r\nrangkaian yang akan aktif ketika diberi nilai logika nol (0).\r\n\r\n16\r\n\r\n3.2.2 Percobaan Demultiplexer\r\n\r\nPercobaan kedua menggunakan Demultiplekser, didapatkan\r\ndata – data hasil sebagai berikut:\r\n\r\nTabel 3.2 Percobaan Demultiplekser\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0\r\n\r\nO̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n\r\n1 X X 0 0 0 0\r\n\r\n0 0 0 0 0 0 0\r\n\r\nX 1 X 0 0 0 0\r\n\r\n0 0 0 0 0 0 0\r\n\r\nX X 0 0 0 0 0\r\n\r\n0 0 0 0 0 0 0\r\n\r\n0 0 1 0 0 0 1\r\n\r\n0 0 0 0 0 0 0\r\n\r\n0 0 1 0 0 1 0\r\n\r\n0 0 0 1 0 0 0\r\n\r\n0 0 1 0 1 0 0\r\n\r\n0 1 0 0 0 0 0\r\n\r\n0 0 1 0 1 1 0\r\n\r\n0 0 0 0 0 1 0\r\n\r\n0 0 1 1 0 0 0\r\n\r\n1 0 0 0 0 0 0\r\n\r\n0 0 1 1 0 1 0\r\n\r\n0 0 0 0 1 0 0\r\n\r\n0 0 1 1 1 0 0\r\n\r\n0 0 1 0 0 0 0\r\n\r\n0 0 1 1 1 1 0\r\n\r\n0 0 0 0 0 0 1\r\n\r\nUntuk melakukan percobaan kedua, nilai E0\r\n̅̅̅ dan E1\r\n̅̅̅ harus\r\nbernilai nol (0) karena keduanya bersifat Active LOW dan E2\r\nharus bernilai satu (1) karena bersifat Active HIGH agar\r\nrangkaiannya aktif dan dapat digunakan pada percobaan tersebut.\r\nNilai dari A0, A1 dan A2 sangat berpengaruh dalam menentukan\r\nposisi dari output yang bernilai satu (1) dan juga dapat diketahui\r\ndengan cara manual sebagai berikut:\r\n\r\n17\r\n\r\nKarena percobaan ini mengkonversi bilangan biner ke\r\nbilangan oktal maka A0: 20\r\n, A1: 21\r\n, dan A2: 22\r\n\r\n. Misal, pada A0\r\n\r\nbernilai 0 dan A1 = A2 = 1 maka,\r\n0 + (2\r\n1) + (2\r\n2) = 0 + 2 + 4 = 6\r\n\r\nDan hasilnya adalah enam (6), enam (6) menunjukkan posisi\r\ndari output yang bernilai satu (1), yaitu O6.\r\n\r\n3.2.3 Percobaan BCD Seven Segment\r\n\r\nPercobaan kedua menggunakan BCD Seven Segment,\r\ndidapatkan data – data hasil sebagai berikut:\r\n\r\nTabel 3.3 Percobaan BCD Seven Segment\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X\r\n\r\nX -\r\n\r\n1 0 X X X\r\n\r\nX -\r\n\r\n1 1 0 0 0\r\n\r\n0 0\r\n\r\n1 1 0 0 0\r\n\r\n1 1\r\n\r\n1 1 0 0 1\r\n\r\n0 2\r\n\r\n1 1 0 0 1\r\n\r\n1 3\r\n\r\n1 1 0 1 0\r\n\r\n0 4\r\n\r\n1 1 0 1 0\r\n\r\n1 5\r\n\r\n1 1 0 1 1\r\n\r\n0 6\r\n\r\n1 1 0 1 1\r\n\r\n1 7\r\n\r\n1 1 1 0 0\r\n\r\n0 8\r\n\r\n1 1 1 0 0\r\n\r\n1 9\r\n\r\n1 1 1 0 1\r\n0\r\n\r\n18\r\n\r\n1 1 1 0 1\r\n1\r\n1 1 1 1 0\r\n0\r\n\r\n1 1 1 1 0\r\n1\r\n\r\n1 1 1 1 1\r\n0\r\n\r\n1 1 1 1 1\r\n\r\n1 -\r\nDalam percobaan ini dilakukan proses yang disebut\r\ndecoding, proses ini menguraikan isyarat mesin digital atau\r\nkomputer yang berupa bilangan biner ke bilangan desimal\r\nsehingga dapat dimengerti oleh manusia. Pada percobaan ini, LT\r\nberfungsi sebagai penguji lampu dari 7 segment dan Blanking\r\nberfungsi sebagai pengosongan 7 segment sehingga angka yang\r\nada pada 7 segment dapat diisi kembali atau diganti dengan angka\r\nyang lainnya. Dan dapat dilihat, pada saat nilai LT bernilai nol (0)\r\ndan Blanking bernilai X (bebas) dan juga pada saat LT bernilai\r\nsatu (1) dan Blanking bernilai nol (0) maka display tidak\r\nmenampilkan bentuk apapun walaupun sudah diberi inputan\r\nsedangkan pada saat LT dan Blanking bernilai satu (1) maka\r\ninputan yang diberikan pada rangkain tersebut akan menampilkan\r\nbentuk-bentuk angka pada displaynya sesuai dengan angka biner\r\nyang merepresentasikan angka desimal tersebut. Misal,\r\ninputannya 0110 maka, display akan menampilkan angka enam\r\n(6) dan karena 7 segment ini hanya satu (1) bit maka, display akan\r\nmenampilkan bentuk – bentuk aneh lainnya.\r\n\r\n19\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nAdapun hal – hal yang dapat penulis simpulkan adalah sebagai berikut.\r\n1.Multiplekser adalah suatu rangkaian yang memiliki banyak\r\nmasukan tetapi hanya memiliki satu keluaran\r\n2.Demultiplekser adalah suatu rangkaian yang hanya\r\nmemiliki satu masukan tetapi memiliki beberapa keluaran\r\n3. Encoder adalah sebuah piranti yang digunakan untuk\r\nmengubah suatu sistem bilangan digital (contohnya, sistem\r\nbilangan desimal) pada inputnya menjadi sistem bilangan\r\nbiner pada outputnya\r\n4.Decoder adalah sebuah piranti yang digunakan untuk\r\nmengubah bilangan biner pada bagian inputnya menjadi\r\nbilangan lainnya (contohnya, desimal) sehingga dapat\r\ndimengerti oleh manusia atau dengan kata lain, decoder\r\nadalah penerjemah atau pengurai sandi', 'BENI RAMDANI', 'UNIT 1');
INSERT INTO `plagiator_postmodel` (`id`, `nim`, `isi_laprak`, `nama`, `unit`) VALUES
(592, '3332210042', 'Pada praktikum MSI untuk memahami cara kerja macam-\r\nmacam rangkaian pengolahan data seperti multiplekser,\r\n\r\ndemultiplekser, dekoder, dan enkoder maka dibuatlah beberapa\r\ntabel seperti dibawah ini.\r\n\r\n9\r\n\r\n3.2.1 Multiplekser\r\n\r\nGambar 3.1 Multiplekser\r\nTabel 3.1 Percobaan Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nDari tabel diatas dapat diketahui bahwa multiplekser pada percobaan\r\ndiatas menggunakan active low atau akan aktif saat enablenya bernilai 0.\r\nSaat enablenya bernilai 1 maka multiplekser tidak akan memulai\r\npengolahan datanya atau akan mati. Maka dari itu enable harus di NOT kan\r\nagar nilainya berubah menjadi 0 agar aktif dan bisa memulai pengolahan\r\ndatanya. Pada saat A0, A1, dan enable bernilai 0, 0, dan 0, maka nilai output\r\nY akan mengikuti nilai inputan I0, inputan lainnya tidak mempengaruhi\r\nseperti I1, I2, dan I3. Dikarenakan nilai 0, 0, dan 0 pada A0, A1, dan enable\r\nadalah selector yang berpatok pada nilai kolom I0. Pada saat A0, A1, dan\r\nenable bernilai 0, 1, dan 0, maka nilai output Y akan mengikuti nilai inputan\r\n\r\n10\r\n\r\nI2. Dikarenakan nilai 0, 1, dan 0 pada A0, A1, dan enable adalah selector\r\nyang berpatok pada nilai kolom I2. Pada saat A0, A1, dan enable bernilai 1,\r\n0, dan 0. Maka nilai output Y akan mengikuti nilai inputan I1. Dikarenakan\r\nnilai 1, 0, dan 0 pada A0, A1, dan enable adalah selector yang berpatok pada\r\nnilai kolom I1. Pada saat A0, A1, dan enable bernilai 1, 1, dan 0. Maka nilai\r\noutput Y akan mengikuti nilai inputan I3. Dikarenakan nilai 1, 1, dan 0 pada\r\nA0, A1, dan enable adalah selector yang berpatok pada nilai kolom I3.\r\n3.2.2 Demultiplekser\r\n\r\nGambar 3.2 Demultiplekser\r\nTabel 3.2 Percobaan Demultiplekser\r\n\r\n̅E0 ̅E1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n\r\n11\r\n\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 0 1 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nDari tabel diatas dapat diketahui bahwa saat E0 bernilai 1 maka E1 dan\r\nE2 tidak aktif, dan nilai selector sama dengan 0, serta nilai output sama\r\ndengan 0. Dan pada saat E1 bernilai 1 maka E0 dan E2 tidak aktif, dan nilai\r\nselector sama sama dengan 0, serta nilai output sama dengan 0. Serta pada\r\nsaat E2 bernilai 0 maka E0 dan E1 tidak aktif, dan nilai selector sama dengan\r\n0, serta nilai output sama dengan 0. Dapat disimpulkan jika saat E0, E1,\r\nbernilai 1 dan E2 bernilai 0 tidak akan aktif, ketiga eneble tersebut\r\nmempengaruhi nilai dari output.\r\nBerdasarkan tabel tersebut juga dapat diketahui bahwa demultiplekser\r\nmulai mengolah data saat E0, E1, dan E2 bernilai 0, 0, dan 1. Itu menunjukan\r\nbahwa E0 dan E1 menggunakan active low, sedangkan E2 menggunakan\r\nactive high. Penentuan nilai output ditentukan oleh selector/input A0, A1,\r\nA2. Misalkan pada saat A0, A1, dan A2 bernilai 0, 0, dan 0 maka nilai output\r\nO0 adalah 1 dan output yang lain bernilai 0. Penentuan nilai output ini\r\ndisebabkan oleh adanya nilai 1 diantara nilai A dan memiliki bilangan 2\r\nn\r\n.\r\nJadi saat nilai A0, A1, A2 sama dengan 0, 0, 0 tidak ada yang bernilai 1, maka\r\noutput yang akan bernilai 1 jatuh pada output O0 sisanya akan bernilai 0.\r\nPada saat A0, A1, dan A2 bernilai 0, 0, dan 1 maka nilai output O4 adalah 1\r\ndan output yang lain bernilai 0, karena A2= 2\r\n\r\n2 = 4. Jadi output yang akan\r\nbernilai 1 jatuh pada O4 sisanya akan bernilai 0. Dapat disimpulkan untuk\r\nmendapat output bisa dilihat dari A0, A1, A2 yang bernilai 1, dengan cara 2n\r\nyang kemudian baru bisa menentukan output mana yang bernilai 1.\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\n\r\n12\r\n\r\nGambar 3.3 Decoder BCD ke 7 segemen\r\nTabel 3.3 Percobaan Decorder BCD ke 7 Segmen\r\nLT Blankin\r\ng\r\nD3 D2 D1 D0 Bentuk display\r\n\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0\r\n\r\n13\r\n\r\n1 1 1 1 1 1 -\r\nDari tabel diatas dapat diketahui bahwa saat LT nya 0 maka\r\ndecoder belum memulai pengolahan datanya belum aktif. Pada saat\r\nLT nya 1 dan Blanking nya 0 maka decoder belum memulai\r\npengolahan datanya belum aktif. Pada saat LT bernilai 1 dan\r\nBlanking bernilai 1, dan inputan D bernilai 0. Apabila terus diclock\r\nbentukan display akan menampilkan nilai dari jumlah nilai D3, D2, D1,\r\nD0. 3.2. Dekoder BCD ke 7 Segmen hanya bisa menmpilkan sampai\r\nangka 9 apabila melewati maka akan muncul simbol-simbol bentuk\r\nyang berfungsi menginterprestasikan angka lebih dari 9 pada 7\r\nsegmen tersebut.\r\n\r\n14\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 KESIMPULAN\r\nDari praktikum yang telah dilakukan, mengenai “MSI (Medium Scale\r\nIntegration)” dapat diambil kesimpulan sebagai berikut.\r\n1. Multiplekser piranti yang menyalurkan beberapa masukan ke satu keluaran\r\nsaja. Sedangkan Demultiplekser menyalurkan satu masukan ke lebih dari satu\r\nkeluaran.\r\n2. Multiplekser digunakan untuk meningkatkan efisiensi sistem komunikasi,\r\nmembantu transmisi sinyal radio, memori komputer, jaringan telepon dan\r\ntransmisi sistem komputer satelit. Sedangkan Demultiplekser digunakan dalam\r\nsistem komunikasi untuk mengubah sinyal output multiplekser ke bentuk\r\naslinya, video, mengkonversi data seri ke data paralel dan suara yang\r\nditeruskan ke pengeras suara.\r\n3. Rangkaian Decoder dan Encoder pada rangkaian multiplekser serta\r\ndemultiplekser saling berhubungan.\r\n4. Decoder berfungsi untuk merubah bilangan biner menjadi desimal atau\r\nmengkonversikan kode yang kurang dikenal manusia ke dalam kode yang\r\nlebih dikenal manusia. Sedangkan Encoder adalah suatu rangkaian logika\r\nyang berfungsi untuk merubah bilangan desimal menjadi biner atau\r\nmengkonversikan kode yang lebih dikenal manusia kedalam kode yang\r\nkurang dikenal manusia.', 'FAHMI KURNIAWAN', 'UNIT 1'),
(593, '3332210064', 'Pada percobaan ini dilakukan pengetesan rangkaian multiplekser\r\ndengan beberapa kombinasi masukan. Setelah dilakukan percobaan,\r\ndidapatkan data hasil percobaan, dan contoh rangkaian multiplekser seperti\r\npada tabel berikut.\r\n\r\nTabel 3. 1 Hasil Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nGambar 3. 1 Rangkaian Multiplekser\r\nBisa dilihat pada tabel diatas bahwa dari banyaknya masukan, hanya\r\nsatu yang akan dikeluarkan. Rangkaian ini menggunakan selektor yang dapat\r\nmemilih nilai masukan mana yang akan dikeluarkan, sehingga tidak semua\r\nnilai masukan akan dikeluarkan melainkan hanya 1. Selektor pada rangkaian\r\nini bisa dilihat pada tabel yaitu merupakan masukan A0 dan juga A1. Nilai\r\npada A atau susunan biner pada A akan menentukan nilai masukan I mana\r\n\r\n0\r\n1\r\n0\r\n0\r\n0\r\n1\r\n1\r\n\r\n?\r\n\r\n0\r\n1 G\r\n0\r\n3\r\nEN MUX\r\n0\r\n1\r\n2\r\n3\r\n6\r\n5 7\r\n4\r\n3\r\n10\r\n11 9\r\n12\r\n13\r\n14\r\n2\r\n1\r\n\r\n15\r\nU7\r\n\r\n74153\r\n\r\n10\r\n\r\nyang akan dikeluarkan. Nilai biner pada A ini dibaca dari MSB ke LSB, yaitu\r\ndari A1 ke A0.\r\nContohnya jika nilai A0 dan A1 adalah 11 yang artinya biner dari 3,\r\nmaka nilai I yang akan dikeluarkan adalah masukan pada I3, apapun nilai I3\r\nakan dikeluarkan sebagai keluaran. Dalam rangkaian ini juga terdapat E, yang\r\ndimana bila bernilai 1, rangkaian akan tidak bisa digunakan atau keadaan\r\ndon’t care. E ini artinya adalah enable yang dimana merupakan active low,\r\njadi kalau nilai E 0 / rendah, maka rangkaian baru dapat berjalan. Keluaran\r\ndari rangkaian ini juga bergantung pada selektor dan nilai I yang dipilih oleh\r\nselektor A.\r\n3.2.2 Demultiplekser\r\nPada percobaan ini dilakukan pengetesan rangkaian demultiplekser\r\ndengan beberapa kombinasi masukan. Setelah dilakukan percobaan,\r\ndidapatkan data hasil percobaan, dan contoh rangkaian demultiplekser seperti\r\npada tabel berikut.\r\n\r\nTabel 3. 2 Hasil Demultiplekser\r\n\r\nE0̅̅̅̅ E1̅̅̅̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\n11\r\n\r\nGambar 3. 2 Rangkaian Demultiplekses\r\nBisa dilihat dari tabel dan rangkaian diatas, bahwa dari satu jalur\r\nmasukan kombinasi biner A, rangkaian akan mengeluarkan banyak keluaran\r\nyaitu sebanyak 8 keluaran dari mula1 Q0 sampai dengan Q7. Pada rangkaian\r\nini juga dapat dilihat di tabel bahwa terdapat masukan E yang artinya enable.\r\nMasukan E0 dan E1 mempunyai kondisi active low sehingga untuk rangkaian\r\nsupaya bisa berjalan, harus bernilai 0. Hal ini dapat dilihat pada pengetesan\r\npertama dan kedua dimana nilai dari E0 dan E1 dibuat 1, maka rangkaian\r\nakan menghasilkan 0, dan masukan E lainnya akan menjadi sifar dont care.\r\nSedangkan pada E2 bersifat active high yang artinya untuk rangkaian bisa\r\nberjalan, masukan yang diberiikan harus bernilai 1 atau tinggi.\r\nTerdapat juga masukan A yang merupakan masukan pengatur / yang\r\nmengatur nilai 1 pada keluaran Q0 sampai Q7. Masukan ini akan dibaca\r\nsecara biner dari MSB ke LSB, yang kemudian hasil desimalnya akan\r\nmenunjukan dimana angka 1 akan keluar / muncul. Contohnya jika\r\ndimasukan A0 sampai A2 dengan susunan biner 101, maka itu sama dengan\r\ndesimal 5. Sehingga nanti pada keluarannya, bagian Q5 akan bernilai 1, dan\r\nQ lainnya bernilai 0.\r\nPada rangkaian ini masukan pada A yang bisa diberikan adalah 3 bit\r\nbiner. Yang artinya pada 3 bit biner, angka desimal yang paling tinggi adalah\r\n111 / merupakan angka 7 jika didesimalkan. Itulah kenapa pada keluaran Q,\r\nbanyaknya hanya mencapai 7 buah. Karena masukannya merupakan 3 bit.\r\n\r\n0\r\nE00\r\n0\r\n0\r\n&\r\nEN\r\n0\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\nBIN/OCT\r\n1\r\n2\r\n4\r\n1\r\n2\r\n3\r\n6\r\n4\r\n5\r\n\r\n15\r\n14\r\n13\r\n12\r\n11\r\n10\r\n9\r\n7\r\nU8\r\n\r\n74LS138\r\n0\r\n0\r\n\r\n?\r\nQ0 U14\r\nNOT\r\n?\r\nQ1 U13\r\nNOT\r\n?\r\nQ2 U12\r\nNOT\r\n?\r\nQ3 U10\r\nNOT\r\n?\r\nQ4 U9\r\nNOT\r\n?\r\nQ5 U11\r\nNOT\r\n?\r\nQ6 U15\r\nNOT\r\n?\r\nQ7 U16\r\nNOT\r\n\r\n12\r\n\r\n3.2.3 Dekoder BCD ke 7 Segment\r\nPada percobaan ini dilakukan pengetesan rangkaian dekoder yang\r\nnantinya akan ditampilkan pada 7 segment. Percobaan dilakukan dengan\r\nmemasukan susunan biner dari sebuah angka, dan melihat apa keluaran dari\r\nbiner tersebut pada 7 segment. Setelah dilakukan beberapa pengetesan dengan\r\nberbagai masukan, didapatkan data hasil percobaan dan gambar rangkaian\r\nsebagai berikut.\r\n\r\nTabel 3. 3 Hasil Dekoder\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1 -\r\n\r\n13\r\n\r\nGambar 3. 3 Rangkaian Dekoder\r\n\r\nBisa dilihat pada tabel hasil diatas, bahwa rangkaian ini merupakan\r\nrangkaian yang mentranslansikan dari bahasa komputer / dari data biner,\r\nmenjadi keluaran yang mudah dimengerti oleh manusia, yaitu pada 7\r\nsegment. Jika dililhat pada tabel percobaan, terdapat beberapa masukan yang\r\nada, yaitu LT, blanking, dan juga D3 sampai D0. Pada pengetesan yang\r\npertama, diberikan nilai LT 0, dan rangkaian mati / tidak dapat berjalan,\r\nmasukan D juga tidak dapat diberikan / bersifat don’t care. Kemudan pada\r\npengetesan dua pun diberikan blanking 0, didapatkan kondisi yang sama,\r\nyaitu rangkaian tidak dapat berjalan dan tidak dapat memasukan D.\r\nDari beberapa kejadia tersebut dapat disimpulkan bahwa rangkaian ini\r\nbersifat active high yang dimana nilai LT dan juga blanking harus tinggi / 1\r\nagar masukan D dapat jalan, dan rangkaian dapat berjalan dengan baik. Jika\r\ndimasukan LT dan blanking keduanya 1, maka masukan D akan aktif, dan\r\nbisa dimasukan nilai biner dari angka apapun, selama besarnya 4 bit. Pada\r\npercobaan dilakukan pemberian masukan dimulai dari biner dari 0 yaitu 0000,\r\nsampai pada biner dari 15 yaitu 1111. Percobaan hanya berhenti pada biner\r\n15, karena pada biner sebesar 4 bit, angka yang paling besar adalah 15.\r\nBisa dilihat pada keluaran di 7 segment bahwa nilainya sesuai dengan\r\nbiner yang dimasukan pada D, sampai pada biner ke 9. Ketika biner yang\r\ndimasukan lebih dari biner 9, 7 segment akan mengeluarkan bentuk aneh dan\r\nbahkan bisa mati tergantung dari produsen dan model dari 7 segment yang\r\ndigunakan. Hal ini dapat terjadi, karena pada 7 segment angka terbesar yang\r\ndapat ditampilkan adalah 9, jadi ketika masukan biner melebihi 9, maka\r\nkeluarannya tidak akan normal layaknya pada biner 0 sampai dengan 9.\r\n\r\n0\r\n0\r\n0\r\n\r\n0\r\n0\r\n0\r\n0\r\n\r\nA\r\n7\r\nB\r\n1\r\nC\r\n2\r\nD\r\n6\r\nLT 3\r\nBI 4\r\nLE/STB 5\r\n\r\nQA 13\r\nQB 12\r\nQC 11\r\nQD 10\r\nQE 9\r\nQF 15\r\nQG 14\r\n\r\nU17\r\n\r\n4511\r\n\r\n(COM)\r\n\r\n14\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nDari praktikum yang telah dilakukan mengenai MSI / Medium Scale\r\nIntegration, didapatkan beberapa kesimpulan sebagai berikut.\r\n1. Multiplekser merupakan piranti yang menerima beberapa masukan input,\r\nkemudian diproses dan diubah menjadi satu jalur keluaran output saja.\r\nDemultiplekser merupakan piranti yang menerima satu jalur input,\r\nkemudian diteruskan menjadi banyak / beberapa jalur output.\r\n2. Pemanfaatan demultiplekser adalah contohnya saat kita melakukan video\r\ncall denga teman, maka masukan yang diberikan adalah gambar dan\r\nsuara, lalu diteruskan kepada si penerima hanya dengan 1 kesatuan data.\r\nPemanfaatan multiplekser adalah kelanjutan dari video call yaitu si\r\npenerima yang hanya menerima 1 data masukan, yang kemudian\r\nditampilkan keluaran gambar melalui layar, dan suara melalui speaker.\r\n3. Enkoder merupakan perbahan format data menjadi bentuk kode-kode\r\nagar data dapat ditransmisikan dengan efektif dan juga lebih terjaga\r\ndnegan mana. Sedangkan dekoder adalah kebalikannya yaitu perubahan /\r\nmerubah kode-kode menjadi bentuk asli dari datanya sebelum diubah\r\nmenjadi kode.\r\n4. Pemanfaatan dekoder contohnya adalah pada lampu lalu lintas yang\r\nmenggunaan bahasa komputer atau biner pada sistemnya, kemudia\r\nditampilkan dalam bentuk angka pada 7 segment.\r\nKemudian pemanfaatan enkoder adalah contohnya keyboard yang dimana\r\nmemasukan huruf melalui ketikan manusia, dan ditampilkan secara\r\ndigital / biner pada sistem komputer melalui layar yang dapat dilihat.', 'TRISTAN NOVELIUS WIBOWO', 'UNIT 1'),
(594, '3332210014', 'Multiplexer adalah suatu rangkaian yang mempunyai banyak input\r\ndan hanya mempunyai satu output. Dengan menggunakan selektor,\r\ndapat dipilih salah satu inputnya untuk dijadikan output.Berikut\r\nadalah rangkaian multiplexer\r\n\r\nGambar 3. 1 Rangkaian Mutiplexer\r\nBisa dilihat dari rangkaian diatas,pada rangkaian multiplexer\r\nmemiiki 1 output tetapi memiliki input lebih dari 1,dan berikut\r\nadalah data dari rangkaian diatas.\r\nTabel 3. 1 Mutiplexer\r\n\r\nA0 ̅ I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nBila diamati hasil dari data tersebut bahwa rangkaian multiplexer\r\ntersebut adalah low logic,yaitu bila Enya adalah 0 maka rangkaian\r\ntersebut akan bekerja tetapi bila Enya adalah 1 maka dia akan\r\nmenhiraukan semua inputan dan outputnya akan bernilai 0.Dan\r\npada multiplexer terdapat selector,fungsi selector pada multiplexer\r\nyaitu untuk memilih input untuk hasil output rangkain\r\n\r\n9\r\n\r\ntersebut.seperti table diata bila A0=1 dan A1=0 maka hasil\r\nouputnya adalah 1 karena dia memilih input pada inputan di\r\nI1,karena biner dari 1 adalah 01.dan bila input A0=0 dan A1=1\r\nmaka hasil outputnya akan berasal dari I2,karena biner dari 2\r\nadalah 10.\r\n3.2.2 Demultiplexer\r\nDemultiplexer adalah rangkaian logika yang menerima satu input\r\ndata dan mendistribusikan input tersebut ke beberapa output yang\r\ntersedia. Kendali pada demultiplekser akan memilih saklar mana\r\nyang akan dihubungkan.Jadi pada demulti plexer ini kebalikan dari\r\nmultiplexer.Berikut adalah rangkaian dari demultiplexer.\r\n\r\nGambar 3. 2 Rangkaian Demultipelxeer\r\nBisa dilihat diatas merupakan rangkaian dari demulti plexer,pada\r\nbagian bawah merupkan input dari demultipelxer,berbeda dengan\r\nmultiplexer yang memiliki banya input di demultiplexer hanya\r\nmemiliki 3 input.Tetapi pada demultiplexer memiliki banyak\r\noutput yang dapat memilih hasilnya dari inputan.berikut adalah\r\nhasil data yang dapat percbaan pada demultiplexer.\r\n\r\nTabel 3. 2 Demultiplexer\r\n\r\n̅̅̅ ̅ ̅̅̅ ̅ A0 A1 A2 ̅\r\n0 ̅\r\n1 ̅\r\n2 ̅\r\n3 ̅\r\n4 ̅\r\n5 ̅\r\n6 ̅\r\n7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\n0 1 X 0 0 0 0 0 0 0 0 0 0 0\r\n\r\n10\r\n\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0\r\nBila diamati hasil data yang ada diatas, E0 dan E1 adalah\r\nrangkaian Low logic yang berarti dia akan bekerja bila diberi input\r\n0,dan bila E0nya memiliki input 1 maka dia akan menghiraukan\r\ninputan yang lain dan memiliki hasil ouput 0 pada setiap\r\noutputnya.begitu juga dengan E1, dan bila input E2 adalah 0 maka\r\ndia akan menghiraukan input yang lain dan memiliki hasil output 0\r\npada setiap hasil outputnya.Jadi supaya rangkaian bekerja E0 dan\r\nE1 harus diberi input 0 dan E2 diberi input 1.Prinsip kerja selector\r\npada demultiplexer sama dengan multiplexer yang berbeda pada\r\ndemulti memiliki 3 input selector,contoh bila A2=0 A=0 dan A0=1\r\nmaka hasil ouputnya ada pada output 1 dan bila A2=0 A1=1 dan\r\nA0=0 maka hasil outputnya ada di O2.Perbedaan selector antara\r\nmultiplexer dan demultiplexer yaitu cara selector bekerja,pada\r\nmultiplexer selector menyeleksi inputnya,tetapi pada demultipelxer\r\nselector bekerja menyeleksi outputnya.\r\n3.2.3 BCD 7 Segment\r\nBCD 7 Segment merupakan sebuah rangkaian yang berfungsi\r\nuntuk mengubah bilangan biner menjadi desimal,pada BCD 7\r\nsegment kita memakai piranti khusus yaitu IC 7447,IC7447 ini\r\nberfungsi untuk mengubah input-input menjadi output\r\ndesimal.kenapa harus IC7447?.karena sesuai dengan singkatan dari\r\nBCD yaitu Biner Convert Desimal yaitu mengubah biner menjadi\r\nDesimal.Berikut adalah Rangkaian dari BCD 7 segment\r\n\r\n11\r\n\r\nGambar 3. 3 Rangkaian BCD 7 Segment\r\nDiatas merupakan rangkaian dari BCD 7 segement,pada rangkaian\r\ntersebut memiliki4 input dan 7 output yang dapat diubah menjadi\r\ndesimal dan beberapa input yang lain.Berikut adalah hasil dari\r\npercobaan BCD 7 Segment.\r\n\r\nTabel 3. 3 BCD 7 Segment\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X Tidak ada\r\n1 0 X X X X Tidak ada\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 [\r\n1 1 1 0 1 1 ]\r\n1 1 1 1 0 0\r\n\r\n[\r\n]\r\n\r\n1 1 1 1 0 1\r\n\r\n]\r\n[\r\n1 1 1 1 1 0 [\r\n\r\n12\r\n\r\n[\r\n1 1 1 1 1 1 []\r\nBisa diamati hasil percobaan diatas,pada BCD 7 segment ini hanya\r\ndapat mengubah biner sampai bilangan 9,karena dalam bilanan\r\ndesimal hanya sampai pada 9 dan selebihnya maka hasilya akan\r\ntidak jelas.Bila LT pada inputan 0 maka dia akan menghiraukan\r\ninput yang lain sehingga tidak tampil pada display,dan bila diberi\r\ninput 1 maka dia akan bekerja,untuk blanking juga sama dengan\r\nLT bila diberi input 0 maka dia akan menghiraukan input yang lain\r\nsehingga output pada display tidak ada.jadi supaya rangkaian\r\ntersebut bekerja maka blanking dan LT harus diberi input 1.prinsip\r\nkerja input seperti biasa hanya mengubah nilai biner menjadi\r\ndesimal seperti biner dari 1001 maka dalam desimalya adalah 9\r\ndan bila biner 0111 maka dalam binernya adalah 7,jadi cara kerja\r\nBCD 7 Segment hanya mengubah nilainya saja.\r\n\r\n13\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\nBerikut ini merpukan hasil kesimpulan yang didapat dari percobaan-\r\npercobaan yang dilakukan:\r\n\r\n1. Dapat mengenali dan membedakan antara multiplexer dan\r\ndemultiplexer dari pengertian dan penerapannya pada kehidupan\r\n2. Mengetaui manfaat-manfaat dari rangkaian multiplexer dan\r\ndemultiplexer seperti multiplexer biasa digunakan dalam telepon\r\nrumah atau demultiplexer biasa digunakan dalam lampu lalu lintas.\r\n3. Mengenali rangkaian-rangkaian yang ada pada decorder dan\r\nencoder seperti multiplexer,demultiplexer,dan BCD 7 segment\r\n4. Mengetahui manfaat-manfaat dari decoder dan encoder seperti\r\nPemanfaat Encoder ada pada Encoder Audio dan Encoder video\r\ndan Pemanfaatan Decoder ada pada Kalkulator', 'SIMEON WILFRED NOVALDI', 'UNIT 1'),
(595, '3332210052', 'Pada percobaan Unit 8 ini yang berjudul MSI (Medium Scale Integration)\r\npara praktikan diminta untuk menganalisis dan melakukan 3 percobaan pada\r\npraktikum unit 8 ini., Percobaan Percobaan yang dilakukan adalah mengetahui cara\r\nkerja Multiplexer, mengetahui cara kerja demultiplexer serta dekoder bcd ke 7\r\nsegmen serta alat alat yang digunakan pada praktikum kali ini adalah modul modul\r\nmultiplexer pte-006-13, modul demultiplexer pte-006-14, modul switch pte-006-\r\n28, modul power supply pte-006-27, modul bcd to 7 segment pte-006-15 modul or\r\npte-006-28, kontak penghubung serta kabel penghubung.\r\n3.2.1 Multiplekser\r\nPada hasil analisis untuk percobaan multiplexer maka didapatkan data\r\nhasil analisis sebagai berikut :\r\nTabel 3. 1 Tabel kebenaran percobaan Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1\r\n0\r\n0 0 0 1 0 0 0\r\n1\r\n0 1 0 1 0 1 1\r\n1\r\n0 1 0 0 1 0 0\r\n0\r\n1 0 0 1 1 0 1\r\n1\r\n\r\n11\r\n\r\nTabel diatas merupaan tabel kebenaran dari multiplexer. Yang dimana\r\npada rangkaian multiplexer ini memiliki 7 input yang memiliki fungsi masing\r\nmasing dan 1 output keluaran. Hal ini sesuai dengan pengertian dari\r\nmultiplexer itu sendiri yaitu menerima beberapa input dan hanya dapat\r\nmengeluarkan 1 output, pada Input A0-A1 ini memiliki fungsi sebagai pin\r\ncontrol yang menentukann saluran masukan yang berhubungan dengan\r\nkeluaran sehingga dapat dilihat pada table kebenaran setiap A0-A1 berganti\r\nmaka hasil dari saluran masukan dan keluaran yang dihasilkan akan berbeda\r\ndari sebelumnya. Untuk inputan I0-I3 berfungsi sebagai input masukan untuk\r\nhasil output yang akan dikeluarkan. Sedangkan input E̅ berfungsi sebagai\r\ngerbang sebuah proses itu akan dilakukan atau tidak. Dikarenakan pada\r\nrangkaian ini menggunakan rangkaian low logic maka apabila gerbang itu\r\nbernilai 0 maka proses akan dilakukan dan untuk inputan E̅ bernilai 1 maka\r\nsebuah proses tidak akan dilakukan\r\nPada hasil percobaan kali ini dapat dilihat bahwa pada percobaan\r\npertama kali diberikan inputan E̅ yang bernilai 1 maka proses inputan lain\r\ntidak akan berfungsi karena pada rangkaian ini bersifat low logic sehingga\r\nprogram akan berada pada kondisi don’t care. Ketika E̅ bernilai 0 dan untuk\r\ninputan A0-A1 bernilai 0 maka input masukan yang akan mempengaruhi nilai\r\noutput atau mempresentasikan hasil output berada pada inputan I0. Dapat\r\ndilihat pada table bahwasannya apabila I0 bernilai 0 maka hasil output akan\r\nmengikuti dari input masukan\r\nAdapaun untuk inputan A0-A1 secara beruntun bernilai 0 dan 1 maka\r\ninput masukan yang akan mempengaruhi nilai output atau mempresentasikan\r\nnilai output itu berada pada inputan I2 dikarenakan pada tabel bisa dilihat\r\nbahwa apabila inputan I2 itu bernilai 1 atau 0 maka hasil output tersebut akan\r\nmengikuti.\r\n1 0 0 0 0 1 0\r\n0\r\n1 1 0 1 1 1 0\r\n0\r\n1 1 0 0 0 0 1\r\n1\r\n\r\n12\r\n\r\nBegitupun untuk inputan A0-A1 secara beruntuk bernilai 1 dan 0 maka\r\ninput masukan yang akan mempengaruhi nilai output atau mempresentasikan\r\nnilai output itu sendiri berada pada inputan I1. Hal ini dapat dilihat pada tabel\r\nkebenaran. Jika inputan I1 itu bernilai 1 atau 0 maka hasil output itu akan\r\nmengikuti nya. Hal ini pun berlangsung untuk inputan A0-A1 yang bernilai 1\r\nmaka inputan yang tersisa hanyalah Inputan I3 sehingga hasil tersebut akan\r\nmengikutinya\r\nMaka dari hasil analisis ini didapatkan bahwa rangkaian multiplexer\r\ndigunakan untuk menghemat rangkaian itu sendiri karena dari hasil inputan\r\nsudah terangkai dengan mudah. Dengan hanya menentukan nilai selector saja\r\nitu sendiri . dan pada rangkaian multiplexer termasuk ke dalam rangkaian low\r\nlogic\r\n3.2.2 Demultiplexer\r\nPada hasil analisis untuk percobaan Demultiplexer maka didapatkan\r\ndata hasil analisis sebagai berikut :\r\n\r\nTabel 3. 2 Tabel Kebenaran Demultiplexer\r\n̅E̅̅0̅ ̅E̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6\r\nO̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0\r\n0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0\r\n0\r\nX X 0 0 0 0 0 0 0 0 0 0 0\r\n0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0\r\n0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0\r\n0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0\r\n0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1\r\n0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0\r\n0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0\r\n0\r\n\r\n13\r\n\r\n0 0 1 1 1 0 0 0 0 1 0 0 0\r\n0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0\r\n1\r\nTabel diatas merupaan tabel kebenaran dari Demultiplexer. Yang\r\ndimana pada rangkaian multiplexer ini memiliki 6 input yang memiliki fungsi\r\nmasing masing dan 8 output keluaran yang memiliki nilai Low logic atau aktif\r\nrendah. Pada rangkaian demulitiplexer terdapat inputan E̅0 E̅1 dan E̅2 yang\r\ndimana proses itu akan berjalan apabila E̅0 = 0, E̅1 = 1 dan E2 = 1 selain\r\ndari itu proses akan dalam kondisi don’t care. Atau kondisi mati. Selain itu\r\nterdapat juga inputan A0-A2 yang berfungsi sebagai pin control yang\r\nmenentukan saluran masukan yang berhubungan dengan keluaran. Sehingga\r\nhasil dari pin tersebut dapat mempengaruhi nilai outputnya.\r\nPada rangkaian demultiplexer hasil dari keluaran tersebut dipengaruhi\r\ndari hasil pin control yang dimana hal ini sangat mudah untuk dimengerti\r\napabila dilihat dari tabel kebanaran. Dapat dilihat pada tabel kebenaran bahwa\r\njika nilai dari A2 = 1 maka hal itu dapat dianggap sebagai 2n yang dimana\r\npada A2 bernilai 22 = 4. Sehingga hasil keluarannya akan berada pada output\r\nO4 hal ini juga akan sama dengan inputan lainnya maka dapat ditarik\r\nkesimpulan bahwa rangkaian demultiplexer merupakan rangkaian yang\r\ndihasilkan dari fungsi logika 2n.\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\nPada hasil analisis untuk percobaan 3.2.1Dekoder BCD ke 7 Segmen\r\nmaka didapatkan data hasil analisis sebagai berikut :\r\nTabel 3. 3 Tabel Kebenaran Dekoder BCD 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X Mati\r\n1 0 X X X X Mati\r\n1 1 0 0 0 0\r\n\r\n0\r\n\r\n1 1 0 0 0 1\r\n\r\n1\r\n\r\n14\r\n\r\n1 1 0 0 1 0\r\n\r\n2\r\n\r\n1 1 0 0 1 1\r\n\r\n3\r\n\r\n1 1 0 1 0 0\r\n\r\n4\r\n\r\n1 1 0 1 0 1\r\n\r\n5\r\n\r\n1 1 0 1 1 0\r\n\r\n6\r\n\r\n1 1 0 1 1 1\r\n\r\n7\r\n\r\n1 1 1 0 0 0\r\n\r\n8\r\n\r\n1 1 1 0 0 1\r\n\r\n9\r\n\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1\r\nTabel diatas merupaan tabel kebenaran dari Dekoder BCD 7 Segmen\r\nyang dimana pada rangkaian decoder ini merupakan sebuah rangkaian yang\r\nmerubah dari bilangan biner ke bilangan decimal atau ke dalam bentuk\r\ndisplay yang dapat ditampilkan ada 7 segmen. Pada rangkaian decoder BCD\r\n7 Segmen memiliki 6 input yang memiliki kegunaan masing masing. Untuk\r\nInput LT berfungsi sebagai mengaktifkan atau menonaktifkan 7 segmen\r\n\r\n15\r\n\r\ntersebut agar memunculkan display. Sedangkan fungsi input Blanking sebagai\r\nmengaktifkan pemprosesan atau pergantian nilai display, sedangkan pada D3-\r\nD0 merupakan bilangan biner itu sendiri\r\nPada hasil percobaan analisis ini. Rangkaian akan bekerja apabila\r\nInputan LT dan Blanking tersebut bernilai satu atau active high sehingga\r\nuntuk pemrosesan rangkaian ini sama seperti mengubah bilangan Biner ke\r\ndecimal yang apabila bilangan biner itu 0000 maka display desimal yang akan\r\nterbentuk adalah 0 sedangkan apabila bilangan biner tersebut 1000 maka\r\ndisplay yang akan terbentuk adalah 8 dikarenakan 1000 merupakan hasil dari\r\n23 yang bernilai 8. Pada rangkaian 7 segmen ini apabila nilai decimal tersebut\r\nmelebihi angka 9 maka akan terbentuk atau tertampil di display adalah symbol\r\nsymbol tak tentu sehingga untuk mengatasi hal tersebut dibutuhkan 2 7\r\nsegmen agar bilangan tersebut menampilkan display 10.\r\n\r\n16\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerdasarkan pada praktikum yang telah dilakukan mengenai MSI didapatkan\r\nkesimpulan sebagai berikut:\r\n1. Rangkaian multiplexer merupakan sebuah rangkaian logika yang berfungsi\r\nuntuk menerima beberapa input dan mengeluarkan satu output sedangkan\r\nrangkaian demultiplexer merupakan rangkaian logika yang menerima satu\r\ninput dan mengeluarkan beberapa output.\r\n2. Pemanfaatan pada multiplexer dan demultiplexer ini dapat digunakan pada\r\nalat jaringan telepon,hard drive computer serta transimisi satelit\r\n3. Rangkaian encoder merupakan rangkaian yang dapat mengubah dari\r\nbilangan decimal menjadi bilangan biner begitupun sebaliknya dengan\r\ndecoder yang merupakan rangkaian yang dapat mengubah bilangan biner\r\nmenjadi bilangan decimal.\r\n4. Pemanfaatan decoder dan encoder adalah dalam penggunaannya yang\r\ndimana pada encoder adalah rangkaian yang inputannya dimengerti oleh\r\nmanusia dan outputnya hanya dapat dimengeri oleh mesin. Contohnya\r\nadalah enkripsi atau mengubah pesan menjadi kode rahasia begitupun\r\nsebaliknya pada rangkaian decoder inputannya dimengerti oleh mesin dan\r\nhasil outputannya hanya dimengerti oleh manusia yang dimana pada hasil\r\nenkripsi tersebut pesan yang sebelumnya diacak akan dipulihkan Kembali\r\noleh mesin sehingga dapat mudah dimengerti.', 'NAUVAL IRFANSYAH', 'UNIT 1'),
(596, '3332210004', 'Multiplekser merupakan rangkaian yang dapat memilih input mana yang\r\nakan dikeluarkan (output), berikut adalah rangkaian multiplekser\r\nmenggunakan simulasi proteus.\r\n\r\nPada rangkaian multiplekser terdapat A0 dan A1 yang merupakan selektor,\r\ndan I0, I1, I2, I3 sebagai input. A0 dan A1 berperan untuk memilih input mana\r\nyang akan ditampilkan pada keluaran (Y), sebagai contoh ialah ketika A0 dan\r\nA1 0 dalam bentuk desimal ialah 00 maka output yang dihasilkan ialah\r\nberasal dari I0. Pada percobaan multiplekser ini diperoleh data sebagai\r\nberikut.\r\n\r\nTabel 3. 1 Data hasil percobaan multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nGambar 3. 3 Rangkaian simulasi multiplekser\r\n\r\n9\r\n\r\nBerdasarkan pada data yang diperoleh dapat kita lihat fungsi\r\nselektor pada rangkaian, contoh ialah ketika ingin input yang\r\ndihasilkan berupa nilai pada I1 dengan nilai 0 maka output yang\r\ndihasilkan adalah 0. Bentu desimal dari I1 adalah 0 1 maka kita dapat\r\nmengatur A0 dengan 0 dan A1 dengan nilai 1 maka output yang\r\ndihasilkan berasal dari input I1. Dengan demikian dapat disimpulkan\r\nbahwa cara kerja dari Multiplekser ialah dengan memilih banyaknya\r\ninput menjadi satu output.\r\n3.2.2 Analisis Percobaan Demultiplekser\r\n\r\nDemultiplekser memiliki mekanisme yang sama dengan multiplesker,\r\nperbedaan nya ialah terdapat pada input dan outputnya. Pada demultiplekser\r\ninput yang diberikan hanya satu dan akan dipilih salah satu dari banyaknya\r\noutput. Berikut merupakan rangkaian simulasi Demultiplekser menggunakan\r\nproteus.\r\n\r\nGambar 3. 4 Rangkaian simulasi Demultiplekser\r\nPada percobaan demultiplekser diperoleh data sebagai berikut.\r\nTabel 3. 2 Data hasil percobaan demultiplekser\r\n̅E̅̅0̅ ̅E̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n\r\n10\r\n\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nBerdasarkan pada data yang diperoleh output menyala adalah ketika\r\ninputnya 0 0 1, hal ini karena pada rangkaian demultiplekser terdapat gerbang\r\nAND dan gerbang AND harus menerima input berupa angka 1 semua sehingga\r\ndatanya haruslah bernilai 1. Kemudian nilai E0 haruslah bernilai 0 karena\r\nterdapat gerbang NOT didalamnya, ketika input 0 di NOT kan maka gerbang\r\nAND menerima 1. Sehingga dapat disumpulkan E0 dan E1 ialah aktif low yang\r\naktif ketika nilainya rendah yaitu 0 dan datanya ialah aktif high yang akan aktif\r\nketika bernilai 1. Saat demultiplekser sudah aktif dapat diatur selektor agar\r\ninput nya dapat disesuaikan akan keluar pada output yang mana dengan\r\nmenggunakan bentuk desimalnya. Salah satu contoh penerapan Multiplekser\r\ndan demultiplekser ini ialah pada jaringan telpon, yang dimana ketika terjadi\r\nkomunikasi terjadi di waktu bersamaan maka muks demuks berfungsi sebagai\r\nefesiensi post dengan melakukan mekanisme secara bergantian.\r\n3.2.3 Analisis Percobaan Dekoder BCD ke 7 Segmen\r\nDekoder berfungsi untuk merubah bahasa yang tidak dipahami menjadi\r\nbahasa yang dipahami oleh manusia. Berikut merupakan rangkaian Dekoder\r\nBCD ke 7 segmen.\r\n\r\nGambar 3. 5 Dekoder BCD ke 7 Segmen\r\n\r\n11\r\n\r\nPada rangkaian Dekoder BCD terdapat LT (Lamp Test) dan Blanking,\r\nketika LT 0 maka kondisi yang lainnya adalah don’t care. Ketika LT bernilai\r\n0 maka kondisinya ialah Lamp test, yaitu LT melakukan pengecekan terhadap\r\n7 segmen untuk melihat apakah ketujuh dari 7 segmen aktif atau tidak. Ketika\r\nseluruh 7 segmen menyala maka pada display akan tertampil 8 hal ini berarti\r\nbahwa seluruh 7 segmen yang ada berfungsi dengan baik. Fungsi blanking\r\npada rangkaian ialah untuk menyalakan dan mematikan display pada\r\nrangkaian. Berdasarkan pada data yang diperoleh dalam tabel 3.3 ketika\r\nposisi 1 1 maka D3-D0 memiliki nilai sehingga dapat diberikan input dan\r\nakan tertampil pada display berupa 0, 1, 2, 3, 4, 5, 6, 7, 8, 9. Ketika pada\r\nposisi 10 display mati hal ini karena pada 7 segmen hanya dapat ditampilkan\r\nsatu digit saja sementara 10 ialah bernilai dua digit. Setelah melewati 9 maka\r\nbentuk yang ditampilkan tidak lah beraturan hal ini tergantung pada pabrikan\r\npembuatan 7 segmennya itu sendiri.\r\n\r\n12\r\n\r\nTabel 3. 3 Data hasil percobaan Dekoder BCD ke 7 segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X X\r\n1 0 X X X X X\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1 X\r\n\r\n13\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerdasarkan pada praktikum yang telah dilakukan mengenai MSI (Medium\r\nScale Intregation) maka diperoleh kesimpulan sebagai berikut.\r\n1. Multiplekser dan Demultiplekser merupakan rangkaian kombinasi\r\nlogika yang berfungsi untuk salah satu dari beberapa input menjadi satu\r\noutput (multiplekser) dan satu input menjadi salah satu output dari\r\nbanyaknya beberapa output (demultiplekser)\r\n2. Muks demuks bermanfaat sebagai penyeleksian data, sebagai contoh\r\nialah pemanfaatan dalam komunikasi nirkabel guna menghemat biaya\r\nproduksi dengan metode pemilihan input dan output secara bergantian.\r\n3. Decoder dan encoder merupakan perangkat yang dapat mengubah suatu\r\ninformasi kedalam bentuk informasi lain (penerjemah) sehingga dapat\r\ndipahami, salah satu contohnya ialah dengan menggunakan 7 segmen\r\nsebagai media dalam menyampaikan informasi itu sendiri.\r\n4. Decoder dan Encoder dapat dimanfaatkan sebagai Kode konverter yaitu\r\nmerubah kode kedalam bentuk informasi yang dapat dipahami,\r\nkemudian sebagai pemecah kode intruksi program sehingga dapat kita\r\npahami maksud dari kode tersebut.', 'NAGA TUNGGAL', 'UNIT 1'),
(597, '3332210027', 'Pada multiplekser setakh dilakukannya percobaan A0 dan A1 merupkan\r\npengendali sedangkan pada I1, I2, I3 itu merupkan sebagai masukan dengan\r\n\r\n8\r\n\r\ndi kendalikan A0 danA1 dengan haya satu keluaran saja, dengan enable o\r\nagar pada akan aktif Ketika di beri logika 0 atau bisa di sebut dengan active\r\nlow. Pada saat kita ambil pada percobaan baris kedua pada tabel 3.1 ketika\r\nA0 dan A1 dengan enable 0 dengan diberikan logika Ketika I0 diberikan\r\nlogika 0 sedangkan pada I1 sampai sampai 13 diberikan logika 0 maka\r\nkeluranya 0. Sedangkan pada A0 dan A1 nya enable di berikan logika nol\r\ndengan IO = 1 I1 sampai I3 diberikan 0 maka keluranya akan bernilai 1.\r\nKarena rangkianya bersifa active low dengan logika pada enable aktif.\r\n\r\nGambar 3. 1 rangkaian Multiplekser\r\n\r\n3.2.2 Demultiplekser\r\n\r\nPada percobaan unit 8 tentang MSI di proleh data sebagai berikut\r\n\r\nTabel 3. 2 Demultiplekser\r\n\r\nE̅0 E̅1 E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\npada demultiplekser merupakan rangkaian dengan masukan satu tetapi keluaranya\r\nbanyak. pada percobaan ini A0, A1 dan A2 merupakan sebagai pengendali untuk\r\n\r\n9\r\n\r\nmemilih yg mana yg duhubungkan dapat mempengaruhi pada saat kelurannya\r\nuntuk posisi keluaran yang bernilai 1. pada percobaan ini untuk nilai E2 nya harus\r\nbernilai satu karena bada dasarnya merupakan sifat dari active high sedangkan pada\r\nenable 0 dan 1 harus 0 karena memilik sifat active low.\r\n\r\nGambar 3. 2 Demultiplekser\r\n\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\n\r\nPada percobaan unit 8 tentang MSI di proleh data sebagai berikut\r\nTabel 3. 3 Dekoder BCD ke 7 Segmen\r\n\r\nLT Blanking D1 D1 D1 D1 Bentuk Display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 0\r\n1 1 0 0 1 0 1\r\n1 1 0 0 1 1 2\r\n1 1 0 1 0 0 3\r\n1 1 0 1 0 1 4\r\n1 1 0 1 1 0 5\r\n1 1 0 1 1 1 6\r\n1 1 1 0 0 0 7\r\n1 1 1 0 0 1 8\r\n1 1 1 0 1 1 9\r\n1 1 1 1 0 0 c\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0 u\r\n1 1 1 1 1 1\r\n\r\npada percobaan dekododer seven segment. pada dekoder merupakan sebuah\r\nrangkaian masukan dari biner dengan mengatifkan pada pengeluaranya. sedangkan\r\n\r\n10\r\n\r\nseven segment merupakan angka yanh digunaka untuk menampipkan keluaran\r\ndengan penampilan pada bilangan biner 1 samapi 9.\r\nDapat diambil dari salah satu percobaan ketika LT=1, BL= 1, dengan D0=1, D1 D2\r\nD3 = 0 maka bentuk dari layar tersebut tertampil bilangan biner yaitu 1.\r\n\r\nGambar 3. 3 Dekoder BCD ke 7 Segmen\r\n\r\n11\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nPada percobaan pada praikum unit 8 dapa di tarik kesimpulan sebagai\r\nberikut :\r\n1. Multiplekser pada rangkaian terrdapat banyak masukan dengan\r\nkelurannya satu. Sedangkan pada demultiplekser. memiliki 1 satu\r\nmasukan dengna keluaranya banyak .\r\n2. Multiplekser digunakan untuk mengubah data yang banyak dengan\r\nkeluran satu, sedangkan pada demultiplekser. Pada digunakan dengan\r\nmesukan data banya ke lebih singkat yaitu dengan satu keluaran.\r\n3. encoder merupakan mengubah pada system dari decimal pada inputan\r\nmenjadi biner pada outputnya sedikit. Sedangkan pada decoder dengan\r\npada bilangan biner masukanya sedikit tapi keluaranya banyak.\r\n4. Memudahkan manusia terutama pada pada decoder BCD ke 7 Segmen.', 'Sutan Dikia', 'UNIT 1'),
(598, '3332210058', 'Setelah melakukan percobaan pada praktikum kali ini, maka didapatkan\r\nanalisis dari percobaannya adalah sebagai berikut.\r\n3.2.1 Multiplekser\r\nPada percobaan multiplekser ini didapatkan data seperti pada tabel di\r\nbawah ini.\r\n\r\nTabel 3. 1 Multiplekser\r\n\r\nA0 ̅ I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1\r\n\r\n0\r\n\r\n0 0 0 1 0 0 0\r\n\r\n1\r\n\r\n0 1 0 1 0 1 1\r\n\r\n1\r\n\r\n0 1 0 0 1 0 0\r\n\r\n0\r\n\r\n1 0 0 1 1 0 1\r\n\r\n1\r\n\r\n1 0 0 0 0 1 0\r\n\r\n0\r\n\r\n1 1 0 1 1 1 0\r\n\r\n0\r\n\r\n1 1 0 0 0 0 1\r\n\r\n1\r\n\r\nBerdasarkan pada data yang tertera di atas, rangkaian multiplekser ini\r\nmemiliki 4 buah input yaitu I0, I1, I2, dan I3. Juga terdapat 2 buah\r\nselektor yaitu A0 dan A1. Selektor ini berfungsi untuk menentukan\r\noutput dari inputan yang mana yang akan ditampilkan dari banyaknya\r\ninput. Jadi misalkan ketika A0 dan A1 bernilai 11 yang merupakan\r\n\r\n11\r\n\r\nbiner dari angka 3 maka input yang akan dipilih yaitu input I3, karena\r\nselektor menentukan input mana yang bisa untuk dihidupkan,\r\nmisalkan selektornya bernilai 01 yang merupakan biner dari angka 2\r\nmakan input yang bisa dihidupkan itu hanya I2 dan input yang lainnya\r\nakan tidak mempengaruhi terhadap output karena outputnya yang\r\nhanya ada satu. Kemudan ada input E yaitu Enable yang merupakan\r\ninput bersifat aktif low dan berfungsi untuk membuat inputnya tidak\r\nmempengaruhi nilai outputnya, ketika E bernilai 1 maka outputnya\r\nakan terus bernilai 0.\r\n\r\nGambar 3. 3 Multiplekser\r\n\r\n3.2.2 Demultiplekser\r\nPada percobaan Demultiplekser didapatkan data hasil percobaan\r\nsebagai berikut.\r\n\r\nTabel 3. 2 Demultiplekser\r\n\r\n̅ ̅̅ ̅ ̅ ̅̅ ̅ A0 A1 A2 ̅\r\n0\r\n̅\r\n1 ̅\r\n2 ̅\r\n3 ̅\r\n4 ̅\r\n5 ̅\r\n6 ̅\r\n7\r\n\r\n1 X X 0 0 0 0\r\n\r\n0 0 0 0 0 0 0\r\n\r\nX 1 X 0 0 0 0\r\n\r\n0 0 0 0 0 0 0\r\n\r\nX X 0 0 0 0 0\r\n\r\n0 0 0 0 0 0 0\r\n\r\n0 0 1 0 0 0 1\r\n\r\n0 0 0 0 0 0 0\r\n\r\n0 0 1 0 0 1 0\r\n\r\n0 0 0 1 0 0 0\r\n\r\n0 0 1 0 1 0 0\r\n\r\n0 1 0 0 0 0 0\r\n\r\n0 0 1 0 1 1 0\r\n\r\n0 0 0 0 0 1 0\r\n\r\n12\r\n\r\n0 0 1 1 0 0 0\r\n\r\n0 0 0 0 0 0 0\r\n\r\n0 0 1 1 0 1 0\r\n\r\n0 0 0 0 1 0 0\r\n\r\n0 0 1 1 1 0 0\r\n\r\n0 0 1 0 0 0 0\r\n\r\n0 0 1 1 1 1 0\r\n\r\n0 0 0 0 0 0 1\r\n\r\nBerdasarkan tabel hasil percobaan, demultiplekser memiliki 1 buah\r\ninput yaitu E2 dan memiliki 3 selektor yaitu A0, A1, dan A2 yang\r\nakan memilih output seperti apa yang ditampilkan. Demultiplekser\r\nmemiliki 8 output yaitu O0 sampai O7 dan memiliki 2 buah enable\r\nyaitu E0 dan E1 yang akan menjadikan input berfungsi atau tidaknya\r\nadalah enable.\r\nKetika A0, A1 dan A2 semuanya bernilai 0 maka output yang akan\r\ndipilih adalah output 0 ditunjukan seperti gambar di bawah ini.\r\n\r\nGambar 3. 4 Demultiplekser selektor 000\r\n\r\nDan ketika selekor bernilai 010 maka output yang akan dipilih atau\r\nditampilkan adalah output 2, 010 itu sendiri adalah biner dari angka 2.\r\n\r\n13\r\n\r\nGambar 3. 5 Demultiplekser selektor 010\r\n\r\nDapat disimpulkan kalau selektor akan memilih output sesuai dengan\r\nbiner dari selektor sendiri. Pada enable antara E0 dan E1 jika salah\r\nsatunya bernilai 1 maka akan membuat inputnya yaitu E tidak\r\nmempengaruhi outputnya karena pada rangkaian E, E0 dan E1 itu\r\nmenggunakan gerbang logika AND.\r\n\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\nPada percobaan ini didapatkan hasil sebagai berikut.\r\nTabel 3. 3 Dekoder BCD ke 7 segmen\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0\r\n\r\n0\r\n\r\n1 1 0 0 0 1\r\n\r\n1\r\n\r\n1 1 0 0 1 0\r\n\r\n2\r\n\r\n1 1 0 0 1 1\r\n\r\n3\r\n\r\n1 1 0 1 0 0\r\n\r\n4\r\n\r\n1 1 0 1 0 1\r\n\r\n5\r\n\r\n1 1 0 1 1 0\r\n\r\n6\r\n\r\n1 1 0 1 1 1\r\n\r\n7\r\n\r\n1 1 1 0 0 0\r\n\r\n8\r\n\r\n14\r\n\r\n1 1 1 0 0 1\r\n\r\n9\r\n\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1\r\n\r\n-\r\n\r\nDari data hasil tabel yang bisa dilihat di atas maka dapat disimpulkan\r\nrangkaian dekoder ini mempunyai 7 masukan dengan output berupa\r\nseven segmen. Yang pertama itu LT yaitu kepanjangannya Light Test\r\nyang akan berfungsi hanya sebagai pengetesan saja, yaitu dengan\r\nmemberikan masukan 0 untuk test atau memproses, dan 1 untuk\r\nmematikannya karena LT sendiri bersifat aktif low. Kemudian\r\nBlanking yang berfungsi untuk saklar di dalam rangkaian seven\r\nsegmen ini dan akan menyala saat masukannya bernilai 1. Kemudian\r\nada 4 buah input inti dari rangkaian ini yaitu D0, D1, D2, dan D3.\r\nUntuk memulai percobaan ini Blanking dan LT harus bernilai 1,\r\nkemudian bisa langsung membuat masukan di input D0, D1, D2, dan\r\nD3, contohnya adalah 0001 maka pada tampilan 7 segmen akan\r\nmenampilkan display yaitu 1 karena 0001 adalah biner dari angka 1,\r\nangka yang akan ditampilkan pada 7 segmen akan mengikuti biner\r\ninputnya tergantung biner dari input nya berapa maka angka yang\r\nakan ditampilkan mengikutinya. Seven segmen ini nilai maksimal\r\nyang dapat ditampilkan oleh 7 segmen adalah 9. Berikut adalah\r\ncontoh rangkaian dari 7 segmen angka yang ditampilkan adalah 5\r\ndengan masukan 0101\r\n\r\n15\r\n\r\nGambar 3. 6 Dekoder BCD ke 7 Segmen 0101\r\n\r\n16\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nKesimpulan yang bisa didapatkan dari percobaan yang dilakukan pada\r\npraktikum MSI (Medium Scale Integration) adalah sebagai berikut :\r\n1. Multiplekser itu merupakan suatu rangkaian kombinasional, yang memiliki\r\ninput lebih dari satu, dan akan mengluarkan output-nya hanya ada satu. Lalu\r\nDemultiplekser merupakan kebalikannya, yaitu rangkaian yang memiliki\r\nsatu input dan lebih dari satu output.\r\n2. Pemanfaatan dari multiplekser dan demultiplekser ini banyak ditemukan\r\npada perangkat elektronik, contohnya pada sistem komunikasi ataupun\r\ntransmisi sinyal dan juga pada video.\r\n3. Contoh dari rangkaian enkoder adalah desimal (10 line) ke BCD, dan contoh\r\ndari rangkaian dekoder adalah dekoder BCD ke 7 segmen.\r\n4. Pemanfaatan dari enkoder yakni dengan mengubah bahasa non mesin ke\r\nmesin. Lalu untuk dekoder yaitu sebaliknya, manusia dapat memahami\r\nbahasa mesin sehingga lebih mudah untuk dipahami.', 'NAFIDZ IZZA AL-ADABI', 'UNIT 1');
INSERT INTO `plagiator_postmodel` (`id`, `nim`, `isi_laprak`, `nama`, `unit`) VALUES
(599, '3332210016', 'Adapun analisis yang akan dilakukan terhadap praktikum unit 8 MSI\r\n(medium scale integration). Berikut merupakan analisis yang dilakukan :\r\n3.2.1 Multiplekser\r\n\r\n9\r\n\r\nMultiplexer adalah suatu rangkaian yang terdapat banyak masukan tetapi\r\nkeluaran nya hanya satu, karena inputan yang diberikan akan diseleksi dan inputan yang\r\nterpilih akan ditampilkan pada outputnya\r\n\r\nGambar 3. 1 Rangkaian Multiplekser\r\n\r\nData hasil percobaan pada rangkaian multiplekser dapat dilihat dari tabel berikut\r\nini:\r\n\r\nTabel 3. 1 Data Hasil Percobaan Rangkaian Multiplekser\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nAdapun analsisi dari hasil percobaan yang telah dilakukan pada\r\nmultiplekser, berikut merupakan uraian analisisnya. Sesuai dengan pengertian dari\r\nmultiplekser yang mana memiliki banyak inputan akan tetapi outputnya diselektor\r\nsehingga hanya terdapat satu. Maka dari itu dari tabel dapat terlihat bahwa terdapat\r\ninput pada multiplekser, yaitu input A0, A1, E̅, I0, I1, I2 dan I3 sehingga nilai\r\n\r\n10\r\n\r\noutput atau keluarannya terletak pada kolom Y. Pada input E̅ atau enable yang\r\nterdapat garis atas sehingga artinya bersifat active low.\r\nMaka dari itu, pada percobaan ini multimeter akan dapat bekerja jika input\r\nyang diberikan pada E̅ adalah 0, jadi ketikan E̅ diberikan input 1 pin selector dan\r\ninputan akan menjadi don’t care (diabaikan). Pin selector adalah A, dimana LSB\r\n(nilai biner kecil) yaitu A0 dan MSB (nilai biner tinggi) yaitu A1, jadi untuk\r\nmembaca biner dilakukan dari MSB dari A1 ke A0. Seperti pada baris pertama A1\r\ndan A0 bernilai 0, dapat dibaca 00 yang merupakan nilai biner dari angka decimal\r\n0. Artinya dilakukan selector/memilih input pada I0 yang nantinya akan\r\ndikeluarkan pada output, sehingga hasil yang diperoleh pada Y adalah 0 karena nilai\r\nyang terdapat pada I0 adalah 0. Pada baris keempat nilai input pada A0 bernilai 0\r\ndan A1 bernilai 1 dapat dibaca 10 yang merupakan nilai biner dari angka decimal\r\n2. Artinya dilakukan selector/memilih input pada I2 yang nantinya akan\r\ndikeluarkan pada output, sehingga hasil yang diperoleh pada Y adalah 1 karena nilai\r\nyang terdapat pada I2 adalah 1. Untuk dapat melihat lebih jelas analisis yang sudah\r\ndipaparkan maka dibuat rangkaian dalam proteus berikut ini :\r\n\r\nGambar 3. 2 Rangkaian Multiplekser\r\n\r\n3.2.2 Demultiplekser\r\nDemultiplexer adalah suatu rangkaian yang hanya memiliki satu input tetapi\r\nmemiliki banyak keluaran. Rangkaian ini mendistribusikan inputannya ke beberapa\r\noutput.\r\n\r\n11\r\n\r\nGambar 3. 3 Rangkaian Demultiplekser\r\n\r\nData hasil percobaan pada rangkaian demultiplekser dapat dilihat dari tabel\r\nberikut ini:\r\n\r\nTabel 3. 2 Data Hasil Percobaan Demultiplekser\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0\r\n\r\n0 0 0 0 0 0 0 0\r\n\r\n0 0 1 0 0 0\r\n\r\n1 0 0 0 0 0 0 0\r\n\r\n0 0 1 0\r\n\r\n0 1 0 0 0 0 1 0 0 0\r\n\r\n0 0 1 0\r\n\r\n1 0 0 0 1 0 0 0 0 0\r\n\r\n0 0 1 0\r\n\r\n1 1 0 0 0 0 0 0 1 0\r\n\r\n0 0 1\r\n\r\n1 0 0 0 1 0 0 0 0 0 0\r\n\r\n0 0 1\r\n\r\n1 0 1 0 0 0 0 0 1 0 0\r\n\r\n0 0 1\r\n\r\n1 1 0 0 0 0 1 0 0 0 0\r\n\r\n0 0 1\r\n\r\n1 1 1 0 0 0 0 0 0 0 1\r\nAdapun analsisi dari hasil percobaan yang telah dilakukan pada demultiplekser,\r\nberikut merupakan uraian analisisnya. Sesuai dengan pengertian dari\r\ndemultiplekser adalah sebuah rangkaian yang memiliki satu jalur input dan\r\nkemudian diselektor mejadi banyak atau beberapa jalur output. Dapat terlihat\r\nbahwa terdapat 3 input pada demultiplekser, yaitu input E̅̅̅0̅, E̅̅̅1̅, dan E2 maka dari\r\nitu outputnya terdapat 8 mulai dari A0 sampai dengan O7.\r\n\r\n12\r\n\r\nPada input E̅̅̅0̅ dan E̅̅̅1̅ terdapat garis atas sehingga artinya bersifat active\r\nlow sehingga nilai semuanya 0 dan E2 bersifat active high sehingga nilainya 1.\r\nAkan tetapi karena nilai input pada demultiplekser hanya satu sehingga kita harus\r\nmengubahnya menjadi satu dengan cara diproses dalam gerbang AND. Pin selector\r\nadalah A, dimana LSB (nilai biner kecil) yaitu A0 dan MSB (nilai biner tinggi)\r\nyaitu A2, jadi untuk membaca biner dilakukan dari MSB dari A2 , A1 dan A0.\r\nPada percobaan ke 4 dapat dibaca 000 yang merupakan nilai biner dari\r\nangka decimal 0. Artinya dilakukan selector/memilih input pada O0 yang akan\r\nbernilai 1 dan selain dari itu bernilai 0. Pada percobaan ke 5 dapat dibaca 100 yang\r\nmerupakan nilai biner dari angka decimal 4. Artinya dilakukan selector/memilih\r\ninput pada O4 yang akan bernilai 1 dan selain dari itu bernilai 0. Untuk dapat\r\nmelihat lebih jelas analisis yang sudah dipaparkan maka dibuat rangkaian dalam\r\nproteus berikut ini :\r\n\r\nGambar 3. 4 Rangkaian Demultiplekser\r\n\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\nDekoder adalah rangkaian yang digunakan untuk melakukan perubahan dari\r\nsuatu bahasa yang dimengerti oleh mesin(binner) menjadi suatu bahasa yang tidak\r\ndimengerti oleh mesin. Rangkaian decoder BCD ke 7 segmen digunakan untuk\r\nmengubah kode bilangan biner BCD (Binary Coded Decimal) menjadi data\r\ntampilan pada display 7 segmen.\r\n\r\n13\r\n\r\nGambar 3. 5 Rangkaian Dekoder BCD ke 7 Segmen\r\n\r\nData hasil percobaan pada rangkaian decoder BCD ke 7 segmen dapat dilihat dari\r\ntabel berikut ini:\r\n\r\nTabel 3. 3 Data Hasil Percobaan Dekoder BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk Display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1\r\n\r\n0 0 0 0 0\r\n\r\n1 1\r\n\r\n0 0 0 1 1\r\n\r\n1 1\r\n\r\n0 0 1 0 2\r\n\r\n1 1\r\n\r\n0 0 1 1 3\r\n\r\n1 1\r\n\r\n0 1 0 0 4\r\n\r\n1 1\r\n\r\n0 1 0 1 5\r\n\r\n1 1\r\n\r\n0 1 1 0 6\r\n\r\n1 1\r\n\r\n0 1 1 1 7\r\n\r\n1 1\r\n\r\n1 0 0 0 8\r\n\r\n1 1\r\n\r\n1 0 0 1 9\r\n\r\n1 1\r\n\r\n1 0 1 0\r\n\r\n1 1\r\n\r\n1 0 1 1\r\n\r\n1 1\r\n\r\n1 1 0 0\r\n\r\n1 1\r\n\r\n1 1 0 1\r\n\r\n14\r\n\r\n1 1\r\n\r\n1 1 1 0\r\n\r\n1 1\r\n\r\n1 1 1 1 -\r\n\r\nAdapun analsisi dari hasil percobaan yang telah dilakukan pada\r\ndemultiplekser, berikut merupakan uraian analisisnya. Sesuai dengan pengertian\r\ndari decoder maka dapat dilihat pada tabel yang semula input berupa biner, hasil\r\nyang dikeluarkan berupa bilangan decimal. Dimana pada percobaan ini nilai 9\r\nadalah yang paling tinggi sehingga jika input biner ditunjukan untuk angka diatas 9\r\nmaka output yang dikeluarkan berupa kode-kode. Blanking sama seperti power,\r\ndimana ketika diberikan 0 maka akan menjadi gelap, ketika diberikan 1 maka akan\r\nterang. LT bersifat active high sehingga harus diberi nilai 1 agar dapat bekerja. Nilai\r\ninputan adalah D, yang dimana D3 merupakan MSB dan D0 LSB. Pada percobaan\r\nke 6 dapat dibaca 0011 yang merupakan nilai biner dari nilai decimal 3. Pada\r\npercobaan ke 13 dapat dibaca 1010 yang merupakan nilai biner dari nilai decimal\r\n10 akan tetapi pada output yang dikeluarkan bukanlah angka 10 melainkan suetu\r\nkode. Untuk dapat melihat lebih jelas analisis yang sudah dipaparkan maka dibuat\r\nrangkaian dalam proteus berikut ini :\r\n\r\nGambar 3. 6 Rangkaian Decoder BCD ke 7 Segmen\r\n\r\n15\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerdasarkan praktikum yang telah dilakukan mengenai MSI (medium scale\r\nintegration), maka didapatkan kesimpulan sebagai berikut :\r\n1. Multiplexer adalah sebuah rangkaian yang menerima beberapa input,\r\nkemudian diproses dan diubah menjadi satu jalur keluaran output.\r\nSedangkan demultiplexer adalah sebuah rangkaian yang menerima satu\r\njalur input dan kemudian diteruskan mejadi banyak atau beberapa jalut\r\noutput.\r\n2. Pemanfaatan multiplexer dan demultiplexer dalam kehidupan sehari-hari\r\nadalah jaringan telepon, transmisi data satelit, sistem komunikasi dan HT\r\natau walkie talkie.\r\n3. Decoder yaitu rangkaian yang digunakan untuk melakukan perubahan dari\r\nsuatu bahasa yang dimengerti oleh mesin(binner) menjadi suatu bahasa\r\nyang tidak dimengerti oleh mesin. Sedangkan encoder adalah rangkaian\r\nyang berguna untuk merubah dari suatu bahasa yang tidak dimengerti oleh\r\nmesin menjadi suatu bahasa yang dimengerti oleh mesin (binner) sehingga\r\ndapat ditransmisikan.\r\n4. Pemanfaatan decoder, yaitu merubah suatu bahasa yang dimengerti oleh\r\nmesin (binner) menjadi suatu bahasa yang tidak dimengerti oleh mesin\r\ncontohnya seperti pada lampu lalu lintas. Sedangkan pemanfaatan encoder,\r\nyaitu merubah suatu bahasa yang tidak dimengerti oleh mesin menjadi suatu\r\nbahasa yang dimengerti oleh mesin (binner) contohnya seperti pada\r\nkeyboard.', 'SETIO NINGRUM', 'UNIT 1'),
(600, '3332210048', 'Pada hasil table diatas, ketika pin kontrolnya bernilai 7 atau menyala semua maka\r\npada ouput di segment 7 akan menyala, Ketika pin kontrolnya ada yang tidak\r\nmenyala salah satunya atau semuanya tidak menyala, maka outputnya akan tidak\r\nmenyala.\r\n\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerikut adalah kesimpulan setelah melakukan percobaan MSI ( Medium Scale\r\nIntegration).\r\n1. Multiplexer adalah piranti yang digunakan untuk memasukan beberapa\r\ninputan namun hanya satu output karena seleksi,sedangkan demultiplexer\r\nadalah kebalikan dari multiplexer yaitu memasukan satu inputan namun\r\nmemiliki beberapa output.\r\n2. Penggunaan multiplexer terdapat pada relay, sistem transisi dan station\r\ntribunary, sedangkan demultiplexer penggunaannya terdapat pada\r\narithmetic logic unit\r\n3. Rangkaian decoder adalah alat yang digunakan untuk mengembalikan\r\nproses encoding sehingga dapat dilihat informasi aslinya,sedangkan\r\nencoder adalah kebalikan dari decoder yaitu, rangkaian yang berfungsi\r\nuntuk mengkodekan data input menjadi data bilangan format tertentu.\r\n4. Pemanfaatan decoder adalah untuk memudahkan kita dalam menyatakan\r\ndata pada 7 segmen. Dan memudahkan manusia mengerti data yang\r\ndiinputkan,sedangkan pemanfaatan encoder adalah untuk mengkodekan\r\ndata input menjadi data bilangan dengan format tertentu. Dan juga\r\nmemudahkan mesin membaca data yang diinputkan.', 'ARJUN SAPUTRA PATURAHMAN', 'UNIT 1'),
(601, '3332210038', 'Pada praktikum percobaan unit 8 ini yaitu mengenai MSI (Medium Scale\r\nIntegration) terdapat 3 percobaan dan memiliki hasil seperti pada data blangko\r\npercobaan. Maka dapat dianalisis sebagai berikut:\r\n3.2.1 Multiplekser\r\nPada percobaan pertama ini yaitu percobaan pada multiplekser\r\n\r\ndidapatkan data sebagai berikut ini:\r\n\r\nTabel 3.1. Data Percobaan Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n\r\n10\r\n\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nSeperti yang dapat dilihat pada tabel data diatas, bahwa rangkaian\r\nmultiplekser tersebut memiliki input bersimbol E̅ yang dimana input tersebut berarti\r\nEnabler dan pada simbol tersebut terdapat tanda – yang berarti bahwa enabler\r\ntersebut active-low yang dimana akan aktif apabila diberi nilai input 0 dan tidak\r\nakan aktif apabila diberi nilai input 1. Kemudian selain input E̅, ada input bersimbol\r\nA0dan A1 untuk menentukan nilai dari output-nya. A0 dapat dikatakan sebagai LSB\r\ndan A1 dapat dikatakan sebagai MSB. Selain ketiga input terdapat beberapa input\r\nlain yaitu I0, I1, I2, dan I3 dan data dari 4 input itu yang menjadi faktor hasil dari\r\noutput pada multiplekser. Pengaplikasian dari multiplekser ini terdapat pada printer\r\nkomputer yang dimana printer pada komputer memiliki beberapa input dan\r\nmenghasilkan 1 output. Rangkaian pada multiplekser dapat digambarkan sebagai\r\nberikut:\r\n\r\nGambar 3.1. Rangkaian Multiplekser\r\n\r\n11\r\n\r\n3.2.2 Demultiplekser\r\nPada percobaan kedua ini yaitu percobaan pada demultiplekser\r\n\r\ndidapatkan data sebagai berikut ini:\r\n\r\nTabel 3.2. Data Percobaan Demultiplekser\r\n\r\nE0\r\n̅̅̅ E1\r\n̅̅̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nSeperti yang dapat dilihat pada data percobaan diatas, dapat\r\ndikatakan bahwa rangkaian demultiplekser ini sama seperti multiplekser yang\r\nmemiliki enabler. Namun, pada rangkaian demultiplekser ini memiliki 3 buah input\r\nenabler yang merupakan enabler 0 dan 1 tersebut yaitu active-low yang apabila nilai\r\npada input bernilai 0 dan enabler 2 merupakan active-high yang akan aktif apabila\r\nnilai input bernilai 1.\r\n\r\nSelain 3 input enabler, terdapat 3 input lain yaitu A0, A1, dan A2,\r\nyang dapat dianggap bahwa input tersebut guna sebagai pengaruh yang akan\r\ndihasilkan pada output. Dengan A2 sebagai MSB dan A0 sebagai LSB. Seperti pada\r\npercobaan 7 dimana nilai A0 senilai 0, nilai pada A2dan A2 bernilai 1. Dengan\r\nmengikuti MSB dan LSB aka diurutkan menjadi 110. Angka 110 pada biner apabila\r\ndikonversikan menjadi decimal bernilai 6. Contoh rangkaian pada demultiplekser\r\nmerupakan sebagai berikut: *Catatan: pada gambar terlampir dibawah, terdapat\r\n\r\n12\r\n\r\nsuatu kondisi yang dimana rangkaian tidak berjalan dikarenakan adanya kendala\r\nyang tidak dapat diketahui pada software tersebut.\r\n\r\nGambar 3.2. Rangkaian Demultiplekser\r\n\r\n3.2.3 Decoder BCD 7 Segmen\r\nPada percobaan ketiga ini yaitu percobaan pada decoder BCD 7\r\n\r\nsegmen didapatkan data sebagai berikut ini:\r\n\r\nTabel 3.3. Data Percobaan Dekoder BCD 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk Display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n\r\n13\r\n\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 A\r\n1 1 1 0 1 1 B\r\n1 1 1 1 0 0 C\r\n1 1 1 1 0 1 D\r\n1 1 1 1 1 0 E\r\n1 1 1 1 1 1 -\r\n\r\nSeperti yang tertera pada tabel data percobaan diatas, dapat\r\ndisimpulkan bahwa decoder BCD 7 segmen merupakan pengubahan suatu bilangan\r\nbiner menjadi bilangan desimal. Pada 7 segmen ini hanya dapat menampilkan suatu\r\nbilangan desimal hanya sampai angka 9, karena hanya memiliki 1 digit saja yang\r\ndimiliki 7 segmen tersebut. Pada angka setelah angka 9 tersebut diberi warna untuk\r\nmenandakan bahwa setelah angka 9 terdapat 10 yang bisa ditampilkan dengan huruf\r\nA hingga seterusnya tergantung pada vendor dari IC yang digunakan, namun pada\r\nvideo prosedur percobaan tertera data yang ditampilkan berbeda dengan data diatas\r\nmaka pada data diatas dituliskan dengan simbol A hingga E untuk memudahkan\r\npenganalisisan.\r\n\r\nPada rangkaian decoder BCD 7 Segmen sendiri memiliki input LT\r\nyang dimana maksudnya Lamp Test, berfungsi untuk dapat menampilkan output\r\ntersebut. Lalu terdapat Blanking/Backlight, berfungsi untuk menahan hasil dari\r\noutput, apabila blanking aktif, ketika nilai input diubah – ubah maka nilai dari\r\noutput tidak akan berubah sebelum blanking tersebut dimatikan. Rangkaian dari\r\ndecoder BCD 7 segmen dapat digambarkan sebagai berikut:\r\n\r\n14\r\n\r\nGambar 3.3. Rangkaian Decoder BCD 7 Segmen\r\n\r\n15\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nPada percobaan unit 8 modul MSI (Medium Scale Integrated) ini didapatkan\r\nkesimpulan sebagai berikut ini:\r\n1. Multiplekser merupakan rangkaian kombinasional yang dimana memiliki\r\n\r\nbanyak input (multi-input) dan hanya memiliki satu output (single-\r\noutput). Sedangkan demultiplekser merupakan rangkaian kombinasional\r\n\r\nyang dimana memiliki satu input (single-input) dan memiliki banyak\r\noutput (multi-output).\r\n2. Pemanfaatan pada multiplekser dan demultiplekser ini dapat diterapkan\r\ndan dimanfaatkan pada sebuah sistem komunikasi yang mana dapat\r\nmentransmisikan jenis data berupa audio ataupun video.\r\n3. Decoder merupakan pengubah sinyal digital menjadi sinyal analog atau\r\nsecara luasnya merupakan pengubah kode – kode yang tidak dipahami\r\nmanusia dan hanya dipahami oleh sistem tersebut. Sedangkan encoder\r\nmerupakan pengubah sinyal analog menjadi sinyal digital atau pengubah\r\nbahasa manusia/dapat dipahami oleh manusia menjadi kode – kode yang\r\ntidak dipahami manusia dan hanya dipahami oleh sistem tersebut.\r\n4. Pemanfaatan pada decoder dan encoder yaitu contohnya pada sistem\r\npenyimpanan pada komputer untuk mengakses lokasi memori tertentu\r\nberdasarkan alamat yang dihasilkan oleh perangkat komputaso tersebut.\r\nContoh lainnya yaitu pada pengiriman pesan pada email yang dapat\r\nmengamankan alamat pengiriman dan pengirimannya tersebut.', 'RIFAT HABIBI ARYA RACHMANDA', 'UNIT 1'),
(602, '3332210046', 'Pada Praktikum Percobaan MSI (Medium Scale Integration) kita akan\r\nmenganalisa prinsip kerja dari beberapa rangkaian seperti Multiplexer,\r\nDemultiplexer, Dekoder BCD ke 7 Segmen.\r\n3.2.1 Multiplexer\r\nPada Percobaan pertama yang dilakukan adalah uji coba pada\r\nrangkaian Multiplexer. Adapun hasil tabel kebenaran dari percobaan\r\ntersebut.\r\n\r\nTabel 3. 1 Tabel kebenaran Multiplexer\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nBerdasarkan tabel tersebut, dapat kita ketahui A0, A1 merupakan pin\r\nselektor yang digunakan untuk menentukan input mana yang akan\r\nterhubung dengan output lalu ada E̅ sebagai enable bersifat active low yang\r\nakan aktif saat bernilai 0 dan akan tidak aktif jika bernilai 1. Untuk\r\nmembaca tabel tersebut dibaca mulai dari MSB seperti membaca A1 terlebih\r\ndahulu baru A0. Pada I0. I1, I2, I3 sebagai inputan yang akan dipilih salah\r\nsatu oleh pin selektor untuk terhubung dengan output. Misal pin selektor\r\nbernilai 1 0 seperti yang ditandai warna kuning, biner 1 0 bernilai 2 pada\r\ndesimal jadi inputan yang akan dipilih adalah I2 dan input lainnya akan\r\ndiabaikan karena input yang terpilih I2 untuk terhubung dengan outputnya\r\nsehingga nilai output bernilai 1. Adapun rangkaian dari multiplexer sebagai\r\nberikut.\r\n\r\n10\r\n\r\nGambar 3. 1 Rangkaian Multiplexer\r\n\r\n3.2.2 Demultiplexer\r\nPada Percobaan kedua yang dilakukan adalah uji coba pada rangkaian\r\nDemultiplexer. Adapun hasil tabel kebenaran dari percobaan tersebut.\r\n\r\nTabel 3. 2 Tabel Kebenaran Demultiplexer\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nBerdasarkan tabel tersebut, dapat kita ketahui E̅̅̅0̅ dan E̅̅̅1̅ adalah enable\r\nyang bersifat active low dapat diartikan untuk aktif atau bekerja E̅̅̅0̅ dan E̅̅̅1̅\r\nharuslah bernilai 0. Sedangkan pada E2 merupakan enable yang bersifat active\r\nhigh dapat diartikan untuk aktif atau bekerja E2 haruslah bernilai 1. Ketiga enable\r\ntersebut bekerja dengan gerbang logika AND lalu menghasilkan 1 keluarannya\r\nyang akan diproses lebih lanjut. Pada A0, A1, dan A2 merupakan pin selektornya,\r\npada pin selektor sistem bekerjanya tetap sama seperti Multiplexer. Misal pada\r\nsaat A2 bernilai 0, A1 bernilai 1, dan A0 bernilai 0 dibaca dengan MSB artinya\r\n\r\n11\r\n\r\ndibaca dimulai dari A2, biner tersebut 010 dan jika di desimalkan bernilai 2 maka\r\nhasil output yang terpilih adalah O̅2 bernilai 1 sementara output lainnya bernilai 0.\r\nAdapun rangkaian dari Demultiplexer sebagai berikut.\r\n\r\nGambar 3. 2 Rangkaian Demultiplexer\r\n\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\nPada Percobaan ketiga yang dilakukan adalah uji coba pada rangkaian\r\nDekoder BCD ke 7 Segmen. Adapun hasil tabel kebenaran dari percobaan\r\ntersebut.\r\nTabel 3. 3 Tabel Kebenaran Dekoder BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n12\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1\r\n\r\nBerdasarkan tabel tersebut, dapat kita ketahui, pada rangkaian ini adalah\r\nwujud visualisasi dari Decoder yang dimana saat sebuah bahasa yang dimengerti\r\nmesin menjadi bahasa yang tidak dimengerti mesin seperti pada percobaan\r\npraktikum yang ketiga ini. Pada percobaan Decoder yang mengubah dari kode\r\nbiner menjadi 7 Segmen yang dapat kita visualisasikan. Seperti pada inputan\r\ndimana D3 bernilai 0, D2 bernilai 0, D1 bernilai 1 dan D0 bernilai 0 yang dapat\r\nkita susun menjadi biner 0010 dan diterjemahkan menjadi desimal yang berarti 2\r\nkemudia 7 Segmen akan memvisualisasikan nilai 2 tersebut. Jika, angka pada\r\nsudah melebihi angka 9 maka pada 7 segmen akan menampilkan seperti kode –\r\nkode yang mewakil angka di atas 9, pada percobaan ini dengan batas max 15.\r\nAdapun rangkaian dari Dekoder BCD ke 7 Segmen sebagai berikut.\r\n\r\nGambar 3. 3 Rangkaian Dekoder BCD ke 7 Segmen\r\n\r\n13\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nAdapun kesimpulan pada percobaan praktikum dengan modul MSI\r\n(Medium Scale Integration) yaitu sebagai berikut.\r\n1. Multiplexer adalah sebuah rangkaian logika mempunyai banyak input\r\nnamun outputnya hanya ditunjukkan 1 saja karena dipilih oleh pin selektor\r\ninput mana yang akan terhubung dengan output . Demultiplexer adalah\r\nrangkaian digital yang mempunyai output banyak namun dengan\r\ninputannya yang hanya 1. Data output yang terpilih akan bernilai 1\r\nsementara yang lainnya akan bernilai 0.\r\n2. contoh dari Multiplexer adalah jaringan telepon sedangkan demultiplexer\r\nadalah sistem komunikasi seperti video data berupa gambar.\r\n3. Rangkaian decoder yaitu sebuah rangkaian yang berfungsi mengubah\r\nsuatu kode dari bahasa yang dimengerti oleh mesin menjadi bahasa yang\r\ntidak dimengerti mesin contohnya seperti pada percobaan ke 3\r\nRangkaian encoder yaitu sebuah rangkaian yang berfungsi untuk\r\nmengubah suatu kode yang tidak dimengerti mesin menjadi bahasa yng\r\ndimengerti oleh mesin contohnya keyboard saat kita mengetik lalu di\r\nproses dalam mesin komputer ataupun laptop.\r\n4. Pemanfaatan dari decoder yaitu seperti saat sebuah kode biner dari\r\nkeyboard yang kita ketik lalu yang didalam mesin komputer memproses\r\ndan divisualisasikan ke dalam word yang dapat kita mengerti namun\r\nbahasa mesin yang tidak mengerti, sedangkan pemanfaatan dari encoder\r\nyaitu saat keyboard kita mengetik huruf atau angka dan lainnya lalu akan\r\ndimengerti di dalam mesin komputer.', 'SALMAN RIFQI ALFARIZ', 'UNIT 1'),
(603, '3332210024', 'Multiplexer adalah sebuah rangkaian penyeleski dari beberapa input yang\r\nakan di keluarkan untuk 1 output. Didalam rangkaian multiplexer ada\r\nsebuah selector yang berperan dalam menyeleksi atau memilih. Pada table\r\ndiatas selector ada pada A0 dan A1 lalu input ada pada I0, I1, I2, I3 lalu\r\nsatu buah output yaitu Y. 0 pada A0 dan A1 akan memilih input 1 yang\r\nakan dikeluarkan pada output dan seterusnya.\r\nDemultiplexer adalah kebalikan dari multiplexer yaitu output akan di pilih\r\nuntuk menampilkan hasil input. Pada demultiplexer input berjumlah 1 dan\r\noutput berjumlah 8 pada table diatas input ada pada E0, E1, E2 dan\r\nselector yaitu A0 – A2 dan output ada pada Q1 sampai Q7. Input\r\nberjumalh 3 karena harus melewati gerbang Not dan And terlebih dahulu.\r\nDecoder adalah rangkaian yang dapat mengubah angka biner menjadi\r\ndecimal. Pada table diatas hasil output dari D0 sampai D3 yaitu 0000 akan\r\nmenghasilkan angka decimal 1 dan seterusnya.\r\n\r\n9\r\nBAB IV\r\nKESIMPULAN\r\n\r\n4.1. Kesimpulan\r\nDari percobaan diatas maka dapat disimpulkan sebagai berikut:\r\n1. Multiplexer adalah sebuah rangkaian yang pengolah beberapa input untuk\r\nditampilkan pada 1 output sedangkan demultiplexer adalah rangkaian\r\npengolah data yang menampilkan beberapa output dari satu input.\r\n2. Multiplexer digunakan untuk menyeleksi data untuk dipindahkan ke 1\r\njalur dan demultiplexer digunakaan untuk menyeleksi beberapa output yang\r\nakan digunakan untuk menampilkan satu input.\r\n3. Encoder adalah sebuah rangkaian pengubah angka decimal ke angka biner\r\nsedangkan decoder adalah pengubah angka biner menjadi angka decimal\r\natau lainnya dalam kata lain decoder adalah sebuah penerjemah dalam\r\nbentuk visual.\r\n4. Pemanfaatan decoder yaitu pada kalkulator dan encoder dimanfaatkan pada\r\nremote TV, keyboard dll.', 'PUTRI AULIA', 'UNIT 1'),
(604, '3332210082', 'Sebuah Multiplexer adalah rangkaian logika yang menerima beberapa\r\ninput data digital dan menyeleksi salah satu dari input tersebut pada saat\r\n\r\n11\r\n\r\ntertentu, untuk dikeluarkan pada sisi output. Seleksi data-data\r\ninputdilakukan oleh selector line, yang juga merupakan input dari\r\nmultiplexer tersebut. Blok diagram sebuah multiplekser.\r\nPada percobaan pertama, output pada percobaan ini dipengaruhi\r\noleh nilai A0 dan A1, jika pada A0 dan A1 kedua-duanya bernilai 0 maka\r\nyang ditampilkan pada bagian output adalah input jalur I0. Jika pada A0\r\nbernilai 0 dan A1 bernilai 1 maka yang ditampilkan pada bagian output\r\nadalah input jalur I2.Jika pada A0 bernilai 1 dan A1 bernilai 0 maka yang\r\nditampilkan pada bagian output adalah input jalur I1. Jika pada A0 dan\r\nA1 kedua-duanya bernilai 1 maka yang ditampilkan pada bagian output\r\nadalah input jalur I3. Seperti yang pada tabel baris kedua ketika A0 dan\r\nA1 kedua-duanya bernilai 0 maka output yang ditampilkan adalah\r\ninputan yang berada di jalur I0, yaitu nol (0). Dan rangkaian ini bersifat\r\nactive low, yaitu rangkaian yang akan aktif ketika diberi nilai logika nol\r\n(0).\r\n\r\nGambar 3.1 Rangkaian Multiplekser\r\n\r\n3.2.2 Percobaan Demultiplekser\r\nPercobaan kedua menggunakan Demultiplekser, didapatkan data – data\r\nhasil sebagai berikut:\r\n\r\nTabel 1.2 Percobaan Demultiplekser\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅\r\n0 O̅\r\n1 O̅\r\n2 O̅\r\n3 O̅\r\n4 O̅\r\n5 O̅\r\n6 O̅\r\n7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n\r\n12\r\n\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nSebuah Demultiplekser adalah rangkaian logika yang menerima\r\nsatu input data dan mendistribusikan input tersebut ke beberapa output\r\nyang tersedia. Seleksi data-data input dilakukan oleh selector line, yang\r\njuga merupakan input dari demultiplexer tersebut. Seperti yang sudah\r\nAnda ketahui, bahwa demultiplexer memiliki satu jalur transisi input dan\r\nbeberapa jalur output. Jalur output tersebut biasanya langsung terhubung\r\ndengan komponen penting dalam komputer. Dapat disimpulkan bahwa,\r\ndata berbentuk seri yang berasal dari mux akan dikonstruksi ulang\r\nmenjadi berbentuk paralel. Kemudian, perintah atau data tersebut\r\nditeruskan pada perangkat yang bersangkutan.\r\n\r\nGambar 3.2 Rangkaian Demultiplekser\r\n\r\n13\r\n\r\n3.2.3 Percobaan BCD Seven Segment\r\nPercobaan ketiga menggunakan BCD Seven Segment, didapatkan data –\r\ndata hasil sebagai berikut:\r\n\r\nTabel 1.3 Percobaan BCD Seven Segment\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n\r\n0 X X X X X\r\n\r\n1 0 X X X X\r\n\r\n1 1 0 0 0 0\r\n\r\n1 1 0 0 0 1\r\n\r\n1 1 0 0 1 0\r\n\r\n1 1 0 0 1 1\r\n\r\n1 1 0 1 0 0\r\n\r\n14\r\n\r\n1 1 0 1 0 1\r\n\r\n1 1 0 1 1 0\r\n\r\n1 1 0 1 1 1\r\n\r\n1 1 1 0 0 0\r\n\r\n1 1 1 0 0 1\r\n\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\nKetika diberi input biner 0 maka 7 segment akan menampilkan nilai 0,\r\nketika diberi input biner 0001 maka akan menampilkan nilai 1, ketika\r\n\r\n15\r\n\r\ndiberi input biner 0010 maka akan menampilkan nilai 2, ketika diberi\r\ninput biner 0011 maka akan menampilkan nilai 3, ketika diberi input\r\nbiner 0100 maka akan menampilkan nilai 4, Ketika diberi input biner\r\n0101 maka akan menampilkan nilai 5, ketika diberi input biner 0110\r\nmaka akanmenampilkan nilai 6, ketika diberi input biner 0111 maka akan\r\nmenampilkan nilai 7, ketika diberi input biner 1000 maka akan\r\nmenampilkan nilai 8, ketika diberi input biner1001 maka akan\r\nmenampilkan nilai 9, Ketika diber input biner 1010 maka akan\r\nmenampilkan nilai C karena sebenarnya rangkaian akan menginput\r\nkembali dari nilai biner 0010 namun menghasilkan nilai cacat sehingga\r\nhanya menampilkan C karena nilai dari desimal hanya 0-9, ketika diberi\r\ninput 1111 maka tidak akan menampilakan apaapa, karena sudah\r\ndibuktikan pada rangkaian ENCODER sebelumnya bahwa ketika semua\r\nnilai input yang diberikan bernilai 1 maka rangkaian tidak akan menyala.\r\n\r\nGambar 3.3 Rangkaian BCD Seven Segment\r\n\r\n16\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\n1. Multiplekser adalah suatu rangkaian yang memiliki banyak masukan\r\ntetapi hanya memiliki satu keluaran. Sedangkan demultiplekser adalah\r\nsuatu rangkaian yang hanya memiliki satu masukan tetapi memiliki\r\nbeberapa keluaran.\r\n2. Multiplekser digunakan untuk mengubah data dari paralel ke serial.\r\nDan demultiplekser digunakan dalam mengubah data seri ke paralel.\r\n3. Dekoder adalah sebua piranti yang dapat mengubah sistem bilangan\r\nbiner ke sistem bilangan lainnya (Tepatnya menjadi bilangan desimal).\r\nEnkoder adalah sebuah piranti yang dapat mengubah suatu sistem\r\nbilangan ke sistem bilangan biner.\r\n4. Encoder bermanfaat untuk mengubah nilai desimal menjadi biner atau\r\njika dalam prinsip data science bisa diartikan sebagai proses enkripsi,\r\nsedangkan manfaat dari decoder adalah dapat menerjemahkan hal yang\r\ntelah di amankan oleh proses encoder itu sendiri.', 'MAULANA ALI AKBAR', 'UNIT 1'),
(605, '3332210005', 'Pada percobaan multiplekser ini mula-mula dibuat rangkaian seperti pada\r\ngambar dalam metode percobaan, lalu dilakukan uji coba dan didapatkan hasil\r\npercobaan seperti pada tabel berikut.\r\n\r\nTable 3.1 Hasil Percobaan Multiplekser\r\n\r\nMultiplekser memiliki fungsi untuk menyeleksi input yang akan\r\ndikeluarkan pada output, dari sekian banyak input yang diberikan hanya 1 output\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X X\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\n11\r\n\r\nsaja yang akan ditampilkan. tabel hasil percobaan dapat dijelaskan dengan\r\nmengidentifikasi nilai A0 dan A1 sebagai bagian dari I0 = A, I2 = B, I3 = C, dan I4\r\n= D, namun hal yang perlu diperhatikan adalah rangkaian akan aktif apabila E\r\nbernilai 0, dimana hal ini menunjukan bahwa rangkaian bersifat active low. Untuk\r\nmengidentifikasi percobaan dapat dilakukan dengan melihat nilai keluaran dari\r\nsetiap input yang tertampil dan diklasifikasikan dengan tabel berikut\r\n\r\na. Untuk A0 = 0 dan A1 = 0, didapatkan 2 hasil inputan dari 2 kolom (ditandai\r\nwarna biru) yaitu 0 dan 1, cara mengidentifikasinya adalah mencari di\r\nkolom berapa nilai inputan baris 1 dan 2 adalah sama dengan 0 dan 1,\r\ndidapatkan bahwa hasil ekuivalennya ada pada kolom I0, dengan asumsi\r\nbahwa I0 adalah A, maka didapatkan bahwa nilai A adalah nilai dari A0 dan\r\nA1 yaitu 0 0 atau dapat ditulis:\r\n\r\nb. Untuk A0 = 0 dan A1 = 1, didapatkan 2 hasil inputan dari 2 kolom (ditandai\r\nwarna cokelat) yaitu 1 dan 0, cara mengidentifikasinya adalah mencari di\r\nkolom berapa nilai inputan baris 1 dan 2 adalah sama dengan1 dan 0,\r\ndidapatkan bahwa hasil ekuivalennya ada pada kolom I0 (tidak dijadikan\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X X\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nA = I0 = 00\r\n\r\n12\r\n\r\nreferensi karena sudah digunakan oleh A), I2, dan I3, karena terdapat pada\r\n3 kolom berbeda maka hasil ini bisa dilewat terlebih dahulu\r\nc. Untuk A0 = 1 dan A1 = 0, didapatkan 2 hasil inputan dari 2 kolom (ditandai\r\nwarna hijau) yaitu 1 dan 0, cara mengidentifikasinya adalah mencari di\r\nkolom berapa nilai inputan baris 1 dan 2 adalah sama dengan 1 dan 0,\r\ndidapatkan bahwa hasil ekuivalennya ada pada kolom I1, I2, dan I3. Karena\r\nI2 dan I3 sudah digunakan sebelumnya maka nilai dari percobaan ini adalah\r\nI1 dan dapat diasumsikan bahwa I1 adalah B, maka didapatkan bahwa nilai\r\nB adalah 1 dan 0 atau dapat ditulis\r\n\r\nd. Untuk A0 = 1 dan A1 = 1, didapatkan 2 hasil inputan dari 2 kolom (ditandai\r\nwarna ungu) yaitu 0 dan 1, cara mengidentifikasinya adalah mencari di\r\nkolom berapa nilai inputan baris 1 dan 2 adalah sama dengan 0 dan 1,\r\ndidapatkan bahwa hasil ekuivalennya hanya pada kolom I4. Karena nilai ini\r\nadalah tunggal maka dapat ditentukan nilai di b dan di d, dimana nilai pada\r\nd diasumsikan oleh I4 sebagai D maka didapatkan bahwa nilai D adalah 1\r\ndan 1 atau dapat ditulis\r\n\r\nDengan hal ini didapatkan pula nilai daru b yaitu di kolom I3, dan\r\ndiasumsikan bahwa I3 adalah C dengan nilai sebesar 0 dan 1 atau dapat\r\ndituliskan\r\n\r\nB = I1 = 10\r\n\r\nD = I4 = 11\r\n\r\nC = I3 = 01\r\n\r\n13\r\n\r\nMaka setelah didapatkan nilai nilai diatas, dapat ditunjukan serta dibuktikan\r\nprinsip kerja dari multiplekser yaitu menyeleksi angka angka yang akan digunakan\r\npada output dari sekian banyak input yang diberikan.\r\n\r\n2.2.2 Analisis Percobaan Demultiplekser\r\nPada percobaan demultiplekser ini mula-mula dibuat rangkaian seperti\r\npada gambar dalam metode percobaan, lalu dilakukan uji coba dan didapatkan\r\nhasil percobaan seperti pada tabel berikut\r\n\r\nTable 3.2 Hasil Percobaan Demultiplekser\r\n\r\n̅E̅̅0̅ ̅E̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nDemultiplekser merupakan suatu piranti yang memiliki output yang\r\nbanyak tetapi dari setiap output tersebut hanya satu output saja yang aktif. Dari\r\nrangkaian didapatkaan beberapa tombol fungsi dimana E0-E2 merupakan\r\npengaktif dari rangkaian ini dimana nilai dari E0 dan E1 harus bernilai 0 agar aktif\r\nkarena E0 dan E1 memiliki sifat sebagai rangkaian active low, sedangkan E2\r\nharus bernilai 1 karena memiki sifat sebagai rangkaian active high.\r\nA0,A1 dan A2 merupakan input yang akan berfungsi untuk menentukan di\r\noutput ke berapa nilai akan bernilai aktif, output dimulai dari O0-O7. Untuk\r\nmenentukan di input keberapa rangkaian akan mengeluarkan output aktif, maka\r\ndapat ditentukan dengan berpatokan pada input yang diberikan. Misalnya contoh\r\ndengan inputan 010 akan diansumsikan sebagai 2n , sehingga nilai dari 010 =\r\n0\r\n0+21+0 = 2, sehingga nilai aktif dalam outputnya akan berada dikolom ketiga\r\nyaitu O2, begitupun ketika diberikan input 111 akan diansumsikan sebagai 2n\r\n,\r\n\r\n14\r\n\r\nsehingga nilai dari 111 = 20+21+22 = 7, sehingga nilai aktif dalam output-nya akan\r\nberada dikolom kedelapan yaitu O7.\r\nMaka dapat dibuktikan bahwa demultiplekser ini terbukti hanya akan\r\nmengaktifkan satu output dari sekian banyak output-nya dengan memperhatikan\r\ninput yang diberikan.\r\n2.2.3 Analisis Percobaan Decoder BCD ke 7 Segmen\r\nPada percobaan ini, dirangkai sebuah decoder sesuai dengan gambar pada\r\nprosedur percobaan, dan didapatkan hasil seperti berikut\r\n\r\nTable 3.3 Hasil Percobaan Decoder BCD ke 7 segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X 0\r\n1 0 X X X X 0\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1\r\n\r\nPercobaan ini merupakan uji yang dilakukan pada rangkaian decoder BCD\r\nke-7 segmen, decoder merupakan suatu piranti yang digunakan dan memiliki suatu\r\nfungsi untuk mengubah bahasa mesin menjadi bahasa lainnya. Dalam rangkaian ini\r\n\r\n15\r\n\r\nakan dilakukan pembuatan rangkaian dengan mengubah input bilangan biner\r\nmenjadi bilangan decimal memanfaatkan fungsi dari decoder.\r\nSebelumnya perlu diperhatikan tombol tombol yang ada pada percobaan\r\ndimana ada tombol LT dan Blanking yang keduanya harus bernilai 1 (active high)\r\nagar rangkaian dapat dijalankan. D3-D0 merupakan input dari rangkaian ini, dan\r\ndisplay adalah tampilan dari output yang digunakan membentuk angka 8, kurang\r\nlebih seperti gambar dibawah ini\r\n\r\nGambar 3.1 Output Decoder\r\n\r\nCara kerja dari rangkaian decoder ini adalah akan merubah bilangan dari\r\nbahasa mesin atau biner, menjadi bilangan decimal yang tertampilkan pada display.\r\nPrinsipnya sama seperti dalam mengubah bilangan biner ke decimal seperti 0000 =\r\n0, 0001 = 1 dan seterusnya sampai decimal 9 akan tertampil dalam display. Namun,\r\nKetika lebih dari sembilan dalam display akan muncul bentuk bentuk tidak jelas,\r\nwalaupun inputan nilainya benar sesuai dan berutan tetap saja dalam display tidak\r\ntertampil bentuk yang sesuai. Hal tersebut disebabkan oleh jumlah dari output pada\r\nsegmen 7 ini yang menggunakan hanya 1 output display, dimana display ini hanya\r\ndapat mendefinisikan atau menampilkan decimal bilangan dari 0 – 9, lebih dari itu\r\nsama saja seperti melebihi kapasitas dari rangkaian ini.\r\nUntuk menyelesaikan permasalahan ini agar input yang dimasukan saat\r\nlebih dari 9 tertampil sesuai maka harus ditambahkan output display-nya menjadi\r\ndua agar dapat menampilkan angka 10,11, dan seterusnya. Dari percobaan ini dapat\r\nterlihat bahwa fungsi dari decoder dapat dibuktikan yaitu merubah bilangan biner\r\natau bahasa mesin menjadi bentuk bahasa lainnya.\r\n\r\n16\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nSetelah melakukan praktikum pada unit ini mengenai MSI (Medium Scale\r\nIntegration) didapatkan beberapa kesimpulan sebagai berikut.\r\n1. Dapat mengetahui piranti yang dapat digunakan untuk menyeleksi data\r\nyaitu multiplekser dan demultiplekser\r\n2. Memahami pemanfaatan dari multiplekser yaitu untuk menyeleksi data\r\ndari inputan yang banyak dan keluarannya hanya akan satu sedangkan\r\npemanfaatan dari demultiplekser adalah dapat menyeleksi data untuk\r\nkeluaran yang banyak namun hanya satu yang aktif. Pemanfaatan\r\nkeduanya dapat terlihat pada aplikasi pemutaran film.\r\n3. Mengetahui piranti peubah bilangan biner yaitu encoder dan decoder\r\n4. Encoder memiliki fungsi untuk mengubah bentuk bahasa lain menjadi\r\nbahasa mesin, dan decoder ini berfungsi dengan sebaliknya mengubah\r\ndari bentuk bahasa mesin ke bentuk bahasa lain.', 'YUSUF BUDI KUSUMA', 'UNIT 1');
INSERT INTO `plagiator_postmodel` (`id`, `nim`, `isi_laprak`, `nama`, `unit`) VALUES
(606, '3332210034', 'Multiplekser merupakan rangkaian yang memiliki beberapa input\r\ndan hanya akan mengeluarkan satu keluaran. Dalam rangkaiannya\r\nmultiplekser memiliki sebuah selektor, selektor ini akan mempengaruhi\r\nkeluarannya, bisa diartikan selektor dalam rangkaian ini adalah sebagai\r\npemilih masukan mana yang akan digunakan sebagai keluarannya.\r\nBanyaknya masukan ditentukan oleh selektornya. Contohnya, jika\r\nselektornya ada 2 dalam rangkaian, maka inputnya memiliki 4 masukan,\r\natau lebih mudahnya jika menggunakan rumusnya adalah bilangan\r\nberpangkat yaitu 2\r\nn\r\n, di mana n adalah jumlah selektornya. Artinya, jika\r\nselektornya ada 2 maka bisa dimasukkan ke dalam bilangan berpangkat\r\n2\r\nn = 2\r\n2 = 4 input. Jika selektornya ada 3, maka jumlah masukannya ada\r\n8 input, begitu pun seterusnya.\r\nRangkaian multiplekser dapat dibuat dengan menggunakan\r\ngerbang AND sebanyak 4 buah, gerbang Not sebanyak 2 buah, dan\r\ngerbang OR sebanyal 1 buah. Untuk rangkaiannya dapat dilihat dalam\r\ngambar berikut.\r\n\r\nGambar 3.1 Rangkaian Multiplekser\r\nSetelah dilakukannya percobaan, maka didapat hasil dari\r\npercobaan. Data hasil dari percobaan multiplekser adalah sebagai berikut.\r\n\r\n10\r\n\r\nTabel 3.1 Hasil Percobaan Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\nDapat diketahui bahwa A0 dan A1 merupakan selektor, E\r\nmerupakan gerbang yang memproses keluarannya, I0 – I3 merupakan\r\nmasukan, dan Y adalah keluarannya. Dari data hasil percobaan dapat\r\ndiperoleh bahwa alat yang digunakan dalam percobaan ini merupakan\r\nbertipe active low, yang artinya keluarannya akan mengeluarkan hasil pada\r\nsaat E bernilai 0. Hal ini dapat dilihat ketika E bernilai 1 maka keluarannya\r\nadalah 0 dan masukan I0 – I3 serta selektor tidak akan mempengaruhinya.\r\nSedangkan ketika E bernilai 0 data dari masukan dan selektor akan\r\nmempengaruhi keluarannya.\r\nPada tabel 3.1, ketika selektornya yaitu A0 dan A1 bernilai 0, dan\r\ndiberikan masukan I0 – I3 adalah 0111, maka keluaran yang dihasilkan\r\nadalah 0. Pada percobaan kedua dengan nilai selektor yang sama dan\r\nmasukan I0 – I3 adalah 1000 maka keluaran yang dihasilkan adalah 1. Dari\r\ndata tersebut dapat disimpulkan bahwa, ketika kedua selektor bernilai 0\r\ndan diberi masukan I0 – I3 keluaran yang dihasilkan akan sama seperti\r\nmasukan I0.\r\nPada percobaan ketiga ketika A0 diberi masukan 0 dan A1 diberi\r\nmasukan 1, lalu I0 – I3 diberi masukan 1011 maka keluaran yang\r\ndihasilkan adalah 1. Pada percobaan keempat ketika selektornya diberikan\r\nnilai yang sama sedangkan I0 – I3 diberi masukan 0100 maka akan\r\nmenghasilkan keluaran bernilai 0. Dari data tersebut dan dari percobaan\r\n\r\n11\r\n\r\nyang telah dilakukan pada rangkaian multiplekser, ketika selektor A0\r\nbernilai 0 dan A1 bernilai 1 keluarannya akan sama dengan masukan I2.\r\nPada percobaan kelima ketika A0 diberi masukan 1 dan A1 diberi\r\nmasukan 0, lalu I0 – I3 diberi masukan 1101 maka keluaran yang\r\ndihasilkan adalah 1. Pada percobaan keenam ketika selektornya diberikan\r\nnilai yang sama sedangkan I0 – I3 diberi masukan 0010 maka akan\r\nmenghasilkan keluaran bernilai 0. Dari data tersebut dan dari percobaan\r\nyang telah dilakukan pada rangkaian multiplekser, ketika selektor A0\r\nbernilai 1 dan A1 bernilai 0 keluarannya akan sama dengan masukan I1.\r\nPada percobaan ketujuh ketika selektornya A0 dan A1 bernilai 1,\r\ndan diberikan masukan I0 – I3 adalah 1110, maka keluaran yang dihasilkan\r\nadalah 0. Pada percobaan kedelapan dengan nilai selektor yang sama dan\r\nmasukan I0 – I3 adalah 0001 maka keluaran yang dihasilkan adalah 1. Dari\r\ndata tersebut dan dari percobaan yang telah dilakukan pada rangkaian\r\nmultiplekser dapat disimpulkan bahwa, ketika kedua selektor bernilai 1\r\ndan diberi masukan I0 – I3 keluaran yang dihasilkan akan sama seperti\r\nmasukan I3.\r\n3.2.2. Analisis Percobaan Demultiplekser\r\n\r\nDemultiplekser merupakan rangkaian yang dapat menerima satu\r\nmasukan dan memiliki beberapa keluaran. Rangkaian demultiplekser sama\r\nseperti dengan rangkaian multiplekser yang mana dalam rangkaiannya\r\nterdapat sebuah selektor yang berfungsi untuk menyeleksi hasil\r\nkeluarannya. Rangkaian demultiplekser dapat dibuat dengan gerbang AND\r\ndan gerbang NOT seperti gambar berikut.\r\n\r\nGambar 3.2 Rangkaian Demultiplekser\r\n\r\n12\r\n\r\nSetelah dilakukannya percobaan, maka didapat hasil dari\r\npercobaan. Data hasil dari percobaan demultiplekser adalah sebagai\r\nberikut.\r\n\r\nTabel 3.2 Hasil Percobaan Demultiplekser\r\n\r\n̅E̅̅0̅ ̅E̅̅1̅ E2 A0 A1 A2 O0\r\n̅̅̅ O1\r\n̅̅̅ O2\r\n̅̅̅ O3\r\n̅̅̅ O4\r\n̅̅̅ O5\r\n̅̅̅ O6\r\n̅̅̅ O7\r\n̅̅̅\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nSeperti pada multiplekser, demutiplekser juga memiliki A0, A1,\r\ndan A2 sebagai selektor, E0, E1, dan E3 sebagai gerbang yang memproses\r\nkeluarannya, O0 – O7 sebagai keluarannya. Perlu diketahui juga bahwa\r\nuntuk E0 dan E1 merupakan komponen yang aktif dalam keadaan rendah\r\natau active low dan untuk E2 aktif dalam keadaan tinggi atau active high,\r\nini terbukti bahwa ketika E0 bernilai 1 keluarannya akan bernilai 0 dan\r\nketika E1 bernilai 1 keluarannya masih akan sama yaitu 0, input yang\r\ndimasukkan ketika E0, E1, dan E2 dalam keadaan seperti ini tidak akan\r\nmempengaruhi keluaran yang dikeluarkan. Sedangkan ketika nilai E0, E1,\r\ndan E2 dalam keadaan aktif input yang dimasukkan barulah akan\r\nmempengaruhi keluaran yang dihasilkan.\r\nPada tabel 3.2 dapat diketahui bahwa untuk mencari hasil\r\nkeluarannya dapat dipakai rumus perpangkatan yaitu 2\r\nn\r\n, di mana n ini\r\nmerupakan nilai dari A0, A1, dan A2 yang aktif. Dapat diambil contoh\r\npada saat A0, A1, dan A2 bernilai 0 yang artinya dalam nilai selektor ini\r\ntidak ada yang aktif sama sekali, maka dapat dinyatakan sebagai 2\r\n0 yang\r\n\r\n13\r\n\r\nmana akan menghasilkan nilai 1 pada O0. Selanjutnya ketika A0 bernilai\r\n0 dan A1 dan A2 bernilai 1. Dalam selektor tersebut diketahui bahwa yang\r\naktif ada dua yaitu A1 dan A2, maka dapat dihitung untuk A1 adalah 2\r\n1 =\r\n\r\n2 dan untuk A2 adalah 2\r\n\r\n2 = 4, ketika hasil dari A1 dan A2 dijumlahkan\r\nmaka diperoleh hasilnya adalah 6. Maka, angka 6 ini akan menunjukkan\r\nbahwa pada O6 akan bernilai 1. Selanjutnya, ketika A0, A1, dan A2\r\nmemiliki nilai 1 maka dapat dihitung untuk A1 adalah 2\r\n\r\n0 = 1, untuk A1\r\n\r\nadalah 2\r\n1 = 2, dan untuk A2 adalah 2\r\n\r\n2 = 4. Ketika semuanya\r\ndijumlahkan maka akan mendapatkan hasil 7 dan angka 7 ini menunjukkan\r\nbahwa pada O7 akan menghasilkan keluaran 1, begitu pun seterusnya.\r\n\r\n3.2.3. Analisis Percobaan Dekoder BCD ke 7 Segmen\r\n\r\nDekoder merupakan suatu rangkaian yang dapat mengonversikan\r\nbilangan biner ke dalam bilangan desimal, bilangan desimal yang akan\r\nditampilkan ini akan ditampilkan oleh sebuah seven segmen. Dalam\r\nrangkaian dekoder BCD ke 7 segmen dapat menggunakan modul tersendiri\r\nseperti gambar berikut.\r\n\r\nGambar 3.3 Rangkaian Decoder BCD ke 7 Segmen\r\nSetelah dilakukannya percobaan, maka didapat hasil dari\r\npercobaan. Data hasil dari percobaan dekoder BCD ke 7 segmen adalah\r\nsebagai berikut.\r\n\r\nTabel 3.3 Hasil Percobaan Dekoder BCD 7 Segmen\r\n\r\n14\r\n\r\nLT Blanking D3 D2 D1 D0\r\n\r\nBentuk\r\nDisplay\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1 -\r\nDapat diketahui bahwa dalam rangkaian dekoder BCD ke 7\r\nsegmen terdapat LT dalam rangkaian yang berfungsi sebagai pengaktif 7\r\nsegmen, lalu terdapat blanking yang berfungsi sebagai pengatur keluaran\r\nyang terdapat pada 7 segmen. Rangkaian pada dekoder BCD ke 7 segmen\r\nini berjenis active high yang mana akan aktif ketika LT dan balnking\r\nbernilai tinggi atau 1, hal ini dapat dibuktikan ketika LT bernilai 0, pada 7\r\nsegmen tidak ada tampilan yang ditampilkan walaupun masukannya di\r\nubah-ubah. Lalu, ketika LT diberi nilai 1 namun blanking bernilai 0,\r\ntampilan pada 7 segmen masih belum menampilkan apa-apa.\r\n\r\n15\r\n\r\nKetika LT dan blanking ini bernilai 1, barulah 7 segmen mulai\r\nmenampilkan tampilannya sesuai dengan masukkan yang diberikan.\r\nSelanjutnya ketika masukan D0 - D3 adalah 0000, tampilan pada 7 segmen\r\nmenampilkan angka 0. Ketika D0 – D3 masukannya diubah menjadi 1000,\r\nmaka tampilan pada 7 segmen akan menampilkan angka 1, begitu pun\r\nseterusnya setiap perubahan input yang dimasukkan.\r\nNamun, ketika biner D0 - D3 masukannya 0101 tampilan pada 7\r\nsegmen menampilkan simbol-simbol tertentu bukan angka lagi. Hal ini\r\nterjadi karena 7 segmen hanya mampu menampilkan angka satuan saja\r\nuntuk satu 7 segmen. Untuk menampilkan angka belasan maupun puluhan\r\ndiperlukan 7 segmen yang lebih banyak lagi untuk menampilkan angka\r\nyang lebih banyak.\r\n\r\n16\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1. Kesimpulan\r\n\r\nBerdasarkan pada praktikum yang telah dilakukan mengenai MSI\r\n(Medium Scale Integration) didapatkan kesimpulan sebagai berikut.\r\n1. Multiplekser merupakan suatu rangkaian yang dapat menerima beberapa\r\nmasukan, namun hanya dapat mengeluarkan satu keluaran saja. sedangkan\r\ndemultiplekser merupakan rangkaian yang dapat menerima satu masukan dan\r\nmengeluarkan beberapa keluaran.\r\n2. Penggunaan multiplekser sangat berguna untuk mengefisiensikan transmisi data\r\nsehingga menjadi lebih cepat dalam proses transmisi data. Sedangkan\r\npenggunaan demultiplekser digunakan untuk menggantikan bentuk satu arah\r\nmasukan data yang sama ke bentuk salah satu dari 4 arah keluaran.\r\n3. Dekoder merupakan suatu rangkaian yang mengonversikan bilangan biner ke\r\nbentuk desimal, sedangkan enkoder merupakan suatu rangkaian yang\r\nmengonversikan bilangan desimal ke bentuk bilangan biner.\r\n4. Dekoder dan enkoder banyak digunakan dalam kehidupan sehari-hari seperti\r\nyang berada pada jam digital, kalkulator, timer, lampu lalu lintas, dan lain\r\nsebagainya.', 'Adha Aldiyansyah', 'UNIT 1'),
(607, '3332210002', 'Berikut ini merupakan tabel dari multiplexser. Multiplexser adalah Multiplexer\r\nadalah suatu rangkaian logika yang memiliki masukan lebih dari satu jalur dan\r\nmemiliki keluaran hanya satu jalur, Sehingga output(Y) akan mengikuti salah satu\r\ninput(I1,I2,I3) dan Selektor(A0,A1). Pada baris yang pertama dilewat karena\r\nmasih X. Pada baris yang kedua, Selektor A0(0),A1(0) maka inputnya I0(0) jadi\r\noutput Y adalah 0. Pada baris ketiga Selektor A0(0),A1(0) maka inputnya I0(1)\r\njadi output Y adalah 1. Pada baris keempat Selektor A0(0),A1(1) maka inputnya\r\nI2(1) jadi output Y adalah 1. Pada baris kelima Selektor A0(0),A1(1) maka\r\ninputnya I2(0) jadi output Y adalah 0. Pada baris keenam Selektor A0(1),A1(0)\r\nmaka inputnya I1(1) jadi output Y adalah 1. Pada baris ketujuh Selektor\r\nA0(1),A1(0) maka inputnya I1(0) jadi output Y adalah 0. Pada baris kedelapan\r\nSelektor A0(1),A1(1) maka inputnya I3(0) jadi output Y adalah 0. Pada baris\r\nkesembilan Selektor A0(1),A1(1) maka inputnya I3(1) jadi output Y adalah 1.\r\n\r\n13\r\n\r\n3.2.2 Analisis Demultiplexser\r\n\r\nTabel 1.2 Percobaan Demultiplexer\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\nBerikut ini merupakan tabel dari demultiplexser adalah masukan hanya memiliki\r\nsatu jalur dan keluaran lebih dari satu. Pada input(E) dijadiin satu dengan\r\nmenggunakan gerbang and, selector(A) dan output(O). Pada baris satu sampai tiga\r\noutputnya 0 karena pada selektornya(0). Pada baris keempat input (0,0,1) lalu\r\nselektornya(0,0,0) maka outputnya adalah O0(1). Pada baris kelima input (0,0,1)\r\nlalu selektornya(0,0,1) maka outputnya adalah O4(1) karena selektornya dibalik.\r\nPada baris keenam input (0,0,1) lalu selektornya(0,1,0) maka outputnya adalah\r\nO2(1). Pada baris ketujuh input (0,0,1) lalu selektornya(0,1,1) maka outputnya\r\nadalah O6(1) karena selektornya dibalik. Pada baris kedelapan input (0,0,1) lalu\r\nselektornya(1,0,0) maka outputnya adalah O1(1) karena selektornya dibalik. Pada\r\nbaris kesembilan input (0,0,1) lalu selektornya(1,0,1) maka outputnya adalah\r\nO5(1). Pada baris kesepuluh input (0,0,1) lalu selektornya(1,1,0) maka outputnya\r\nadalah O3(1) karena selektornya dibalik. Pada baris kesebelas input (0,0,1) lalu\r\nselektornya(1,1,1) maka outputnya adalah O7(1).\r\n3.3.3 Analisis BCD Seven Segment\r\n\r\nTabel 1.3 Percobaan BCD Seven Segment\r\n\r\n14\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n\r\n0 X X X X X\r\n\r\n1 0 X X X X\r\n\r\n1 1 0 0 0 0\r\n\r\n1 1 0 0 0 1\r\n\r\n1 1 0 0 1 0\r\n\r\n1 1 0 0 1 1\r\n\r\n1 1 0 1 0 0\r\n\r\n1 1 0 1 0 1\r\n\r\n15\r\n\r\n1 1 0 1 1 0\r\n\r\n1 1 0 1 1 1\r\n\r\n1 1 1 0 0 0\r\n\r\n1 1 1 0 0 1\r\n\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n16\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1\r\n\r\nBeikut ini merupakan tabel dari BCD Seven Segment. BCD Seven Segment\r\nadalah pengubah bilangan biner menjadi bentuk display. Pada baris kesatu LT(0)\r\ndan Blanking(X) lalu outpunya (0,0,0,0) maka input tidak tertampil pada display.\r\nPada baris kedua LT(1) dan Blanking(0) lalu outpunya (0,0,0,0) maka input tidak\r\ntertampil pada display. Pada baris ketiga LT(1) dan Blanking(1) lalu outpunya\r\n(0,0,0,0) maka input pada display adalah 0. Pada baris keempat LT(1) dan\r\nBlanking(1) lalu outpunya (0,0,0,1) maka input pada display adalah 1. Pada baris\r\nkelima LT(1) dan Blanking(1) lalu outpunya (0,0,1,0) maka input pada display\r\nadalah 2. Pada baris keenam LT(1) dan Blanking(1) lalu outpunya (0,0,1,1) maka\r\ninput pada display adalah 3. Pada baris ketujuh LT(1) dan Blanking(1) lalu\r\noutpunya (0,1,0,0) maka input pada display adalah 4. Pada baris kedelapan LT(1)\r\ndan Blanking(1) lalu outpunya (0,1,0,1) maka input pada display adalah 5. Pada\r\nbaris kesembilan LT(1) dan Blanking(1) lalu outpunya (0,1,1,0) maka input pada\r\ndisplay adalah 6. Pada baris kesepuluh LT(1) dan Blanking(1) lalu outpunya\r\n(0,1,1,1) maka input pada display adalah 7. Pada baris kesebelas LT(1) dan\r\nBlanking(1) lalu outpunya (1,0,0,0) maka input pada display adalah 8. Pada baris\r\nkeduabelas LT(1) dan Blanking(1) lalu outpunya (1,0,0,1) maka input pada\r\ndisplay adalah 9. Pada baris ketigabelas LT(1) dan Blanking(1) lalu outpunya\r\n(1,0,1,0) maka input pada display adalah X. Pada baris keempatbelas LT(1) dan\r\nBlanking(1) lalu outpunya (1,0,1,1) maka input pada display adalah X. Pada baris\r\nkelimabelas LT(1) dan Blanking(1) lalu outpunya (1,1,0,0) maka input pada\r\ndisplay adalah X. Pada baris keenambelas LT(1) dan Blanking(1) lalu outpunya\r\n(1,1,0,1) maka input pada display adalah X. Pada baris ketujuhbelas LT(1) dan\r\nBlanking(1) lalu outpunya (1,1,1,0) maka input pada display adalah X. Pada baris\r\n\r\n17\r\n\r\nkedelapanbelas LT(1) dan Blanking(1) lalu outpunya (1,1,1,1) maka input pada\r\ndisplay adalah X.\r\n\r\n18\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerikut ini merupakan kesimpulan dari praktikum MSI(Medium Scale\r\nIntergration) sebagai berikut ini.\r\n1. Multiplexer adalah suatu rangkaian logika yang memiliki masukan lebih dari\r\nsatu jalur dan memiliki keluaran hanya satu jalur sedangkan demultiplexer\r\nmasukan hanya memiliki satu jalur dan keluaran lebih dari satu.\r\n2. Contoh pemanfaatan pada demultiplexer adalah Ketika menekan tombol\r\nnomor, kemudian mengalami endcoding menjadi bilangan biner lalu selektor akan\r\nmemilih nomor yang akan dituju pada penggunanya sedangkan pada multiplexer\r\nbisa terjadi pada kantor yang memiliki banyak computer dan satu printer, lalu\r\nKetika pengguna akan ingin mengeprint akan mengirimkan data ke printer\r\n3. Decoder adalah mengubah pada bilangan biner menjadi bentuk lainnya\r\nsedangkan endcoder adalah mengubah bentuk lainnya.\r\n4. Contoh pemanfaatan pada decoder adalah pada sebuah sistem memori\r\nsedangkan pada endcoder adalah pada kalkulator.', 'Akmal Hakim Wisesa', 'UNIT 1'),
(608, '3332200115', 'Pada percobaan ini kita mengetahui bahwa multiplexer memiliki\r\ninput yang banyak akan tetapi outputnya hanya 1, dapat kita lihat pada\r\ngambar 3.1 dan berikut juga adalah tabel pada percobaan ini:\r\n\r\nGambar 3.1 Rangkaian Multiplexer pada Proteus\r\nTabel 3.1 Hasil Percobaan Multiplexer\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X\r\n0\r\n\r\n0 0 0 0 1 1 1\r\n0\r\n\r\n0 0 0 1 0 0 0\r\n1\r\n\r\n0 1 0 1 0 1 1\r\n1\r\n\r\n0 1 0 0 1 0 0\r\n0\r\n\r\n1 0 0 1 1 0 1\r\n1\r\n\r\n1 0 0 0 0 1 0\r\n0\r\n\r\n1 1 0 1 1 1 0\r\n0\r\n\r\n1 1 0 0 0 0 1\r\n1\r\n\r\n10\r\n\r\nPada percobaan ini dapat kita lihat pada tabel diatas kita\r\nmengetahui jika A0 bernilai 0 dan A1 bernilai 1 maka nilai output\r\nyang dihasilkan berasal dari nilai yang kita input pada baris yang nol\r\n(0), selanjutnya jika A0 = 1 dan A1 = 0 maka nilai output yang\r\ndihasilkan berasal dari nilai yang kita input pada baris yang pertama\r\n(1), selanjutnya jika A0 = 0 dan A1 = 1 maka nilai output yang\r\ndihasilkan berasal dari nilai input yang kita input pada baris yang\r\nkedua, yang terakhir jika A0 = 1 dan A1 = 1 maka nilai output yang\r\ndihasilkan berasal dari nilai yang kita input pada baris yang ketiga.\r\nKetika kita menginput salah satu diatas maka inputan yang lain tidak\r\nakan berfungsi.\r\n3.2.2. Demultiplexer\r\n\r\nPada percobaan ini dapat kita ketahui bahwa demultiplexer\r\nmemiliki inputannya hanya satu akan tetapi outputnya banyak dapat\r\nkita lihat pada gambar 3.2 dan berikut juga tabel pada percobaan ini:\r\n\r\nGambar 3.2. Rangkaian Demultiplexer pada Proteus\r\nTabel 3.2. Hasil Percobaan Demultiplekser\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0\r\n\r\nO̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n\r\n1 X X 0 0 0\r\n\r\n11\r\n\r\nX 1 X 0 0 0\r\nX X 0 0 0 0\r\n0 0 1 0 0 0 1\r\n0 0 1 0 0 1\r\n\r\n1\r\n\r\n0 0 1 0 1 0\r\n\r\n1\r\n\r\n0 0 1 0 1 1\r\n\r\n1\r\n\r\n0 0 1 1 0 0\r\n1\r\n\r\n0 0 1 1 0 1\r\n\r\n1\r\n\r\n0 0 1 1 1 0\r\n\r\n1\r\n\r\n0 0 1 1 1 1\r\n\r\n1\r\nPada tabel diatas dapat kita lihat E0 dan E1 bernilai 0 yang dimana\r\nbahwa E0 dan E1 itu bersifat active low jadi dia akan aktif jika\r\ndiberikan inputan 0, selanjutnya kita juga mengetahui bahwa A0\r\nhingga A2 juga merupakan biner. Pada gambar 3.2 dapat kita lihat\r\ndiatas E0 adalah sebuah data, jadi pada saat kita inputkan 1 maka\r\nmenghasilkan output pada O0 karena A0 hingga A2 diberikan inputan\r\n0, selanjutnya jika kita menginput A0 dengan nilai 1 maka outputnya\r\nterletak pada O1 , lalu jika kita menginput nilai 1 pada A1 maka\r\noutputnya terletak pada O2, lalu jika kita menginput nilai 1 pada A0\r\ndan A1 maka outputnya terletak pada O3, begitu juga selanjutnya\r\nhingga outputnya terletak pada O7.\r\n3.2.3. Decoder BCD ke 7segment\r\n\r\nPada percobaan ini kita mengetahui bahwa pada percobaan ini kita\r\nmenggunakan 7segment untuk menampilkan nilai, pada percobaan ini\r\nterlihat jelas bahwa decoder berfungsi untuk mengubah biner menjadi\r\ndecimal dapat kita lihat pada gambar 3.3 dan berikut juga tabel pada\r\npercobaan ini:\r\n\r\n12\r\n\r\nGambar 3.3. Rangkaian Decoder ke 7segment pada Proteus\r\nTabel 3.3. Hasil Percobaan Decoder BCD ke 7 segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X MATI\r\n1 0 X X X X MATI\r\n1 1 0 0 0 0\r\n\r\n0\r\n\r\n1 1 0 0 0 1\r\n\r\n1\r\n\r\n1 1 0 0 1 0\r\n\r\n2\r\n\r\n1 1 0 0 1 1\r\n\r\n3\r\n\r\n1 1 0 1 0 0\r\n\r\n4\r\n\r\n1 1 0 1 0 1\r\n\r\n5\r\n\r\n1 1 0 1 1 0\r\n\r\n6\r\n\r\n1 1 0 1 1 1\r\n\r\n7\r\n\r\n1 1 1 0 0 0\r\n\r\n8\r\n\r\n1 1 1 0 0 1\r\n\r\n9\r\n\r\n13\r\n\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1 MATI\r\n\r\nPada tabel diatas dapat kita lihat bahwa fungsi dari LT adalah\r\nmemproses hasil yang kita input ke 7segment, dapat kita lihat juga\r\njika LT bernilai 0 maka inputan yang manapun kita kasih nilai tidak\r\nakan menghasilkan apa-apa karena LT bersifat active high yang\r\ndimana kita harus menginput nilai 1 agar program bisa berjalan,\r\nsetelah kita input nilai LT dengan 1 maka kita dapat menginput biner\r\nlalu akann menghasilkan nilai pada 7segment namun jika nilai\r\noutputnya telah sampai ke angka 9 maka setelah itu outputnya akan\r\nkembali ke angka 0 atau mati atau menghasilkan gambar-gambar\r\ntergantung ke 7segment masing-masing.\r\n\r\n14\r\nBAB IV\r\nPENUTUPAN\r\n\r\n4.1.Kesimpulan\r\n1. Multiplexer adalah rangkaian yang mempunyai banyak inputan tetapi\r\noutputnya hanya satu. Demultiplexer adalah rangkaian yang mempunyai\r\nhanya satu input tetapi beberapa output.\r\n2. Pemanfaatan Multiplexer dapat ditemukan pada sistem komunikasi,\r\njaringan telepon dan transmisi sistem komputer satelit. Pemanfaatan\r\nDemultiplexer dapat ditemukan pada Arithmetic Logic Unit.\r\n3. Decoder menerjemahkan biner ke decimal, sedangkan encoder mengubah\r\nbiner dari decimal ke decimal oleh computer atau mikrokontroler\r\n4. Pemanfaatan Encoder dan Decoder dapat ditemukan pada QR Code dimana\r\nencoder menyandikan suatu pesan ke dalam bentuk QR Code sehingga\r\nhanya dapat dibacaa oleh komputer dan decoder menguraikan sandi tersebut\r\ndengan melakukan pemindaian pada QR Cide tersebut agar pesan di dalam\r\nkode tersebut dapat dibaca oleh manusia.', 'Wilbert Manzo Paian', 'UNIT 1'),
(609, '3332210030', 'Multiplexer adalah sebuah rangkaian penyeleski dari beberapa input yang\r\nakan di keluarkan untuk 1 output. Didalam rangkaian multiplexer ada\r\nsebuah selector yang berperan dalam menyeleksi atau memilih. Pada table\r\ndiatas selector ada pada A0 dan A1 lalu input ada pada I0, I1, I2, I3 lalu satu\r\nbuah output yaitu Y. 0 pada A0 dan A1 akan memilih input 1 yang akan\r\ndikeluarkan pada output dan seterusnya.\r\nDemultiplexer adalah kebalikan dari multiplexer yaitu output akan di pilih\r\nuntuk menampilkan hasil input. Pada demultiplexer input berjumlah 1 dan\r\noutput berjumlah 8 pada table diatas input ada pada E0, E1, E2 dan selector\r\nyaitu A0 – A2 dan output ada pada Q1 sampai Q7. Input berjumalh 3 karena\r\nharus melewati gerbang Not dan And terlebih dahulu.\r\nDecoder adalah rangkaian yang dapat mengubah angka biner menjadi\r\ndecimal. Pada table diatas hasil output dari D0 sampai D3 yaitu 0000 akan\r\nmenghasilkan angka decimal 1 dan seterusnya.\r\n\r\n12\r\nBAB IV\r\nKESIMPULAN\r\n\r\nKesimpulan\r\nDari percobaan diatas maka dapat disimpulkan sebagai berikut:\r\n1. Multiplexer adalah sebuah rangkaian yang menyeleksi beberapa input untuk\r\nditampilkan pada 1 output sedangkan demultiplexer adalah rangkaian yang\r\nmemilih output yang akan menampilkan input.\r\n2. Multiplexer digunakan untuk menyeleksi data untuk dipindahkan ke 1\r\njalur dan demultiplexer digunakaan untuk menyeleksi output yang akan\r\ndigunakan untuk menampilkan input.\r\n3. Encoder adalah sebuah rangkaian pengubah angka decimal ke angka biner\r\nsedangkan decoder adalah pengubah angka biner menjadi angka decimal\r\ndalam kata lain decoder adalah sebuah penerjemah.\r\n4. Encoder ada pada saat kita mengetik di kalkulator lalu encoder akan\r\nmengubahnya menjadi decimal ke layer kalkulator.', 'Tubagus Arya Rudiansah', 'UNIT 1'),
(610, '3332200113', 'Percobaan pertama yaitu dengan menggunakan rangkaian multiplekser.\r\nPada rangkaian ini ketika enabler bernilai 1 semua input akan diabaikan\r\ndengan output bernilai 0. Bit ke 0 akan dikenakan pada I0, bit ke 1 akan\r\ndikenakan pada I1 dan seterusnya.\r\nKetika pengendali A0 dan A1 bernilai 0 maka input I0 yang akan\r\ndisalurkan pada output. Pada periode ke dua, dengan pengendali A0\r\nbernilai 1 dan A1 bernilai 0 maka input I1 yang akan disalurkan menjadi\r\noutput. Untuk pengendali bernilai 01 maka output I2 yang akan\r\ndisalurkan daan yang terakhir apabila pengendali A0 dan A1 bernilai 1\r\nmaka input I3 yang akan disalurkan menjadi output. Rangkaian\r\nMultiplekser ditunjukan pada gambar berikut.\r\n\r\n14\r\n\r\nGambar 3. 1 Multiplekser\r\n\r\n3.2.2 Demultiplekser\r\n\r\nTable 3. 2 Demultiplekser\r\n\r\n̅E̅̅0̅ ̅E̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nPercobaan kedua yaitu menggunakan demultiplekser. Pada percobaan\r\nini nilai enabler saling bergantungan untuk mengaktifkan sehingga nilai\r\nE0 dan E1 bernilai 0 dan E2 bernilai 1.\r\nHasil output akan bernilai 1 pada O tertentu sesuai dengan input dari\r\nselector. Untuk output O0 bernilai 1 ketika biner 0 (dihitung dari A2,\r\nA1, A0). Sehingga apabila O5 ingin bernilai 1 maka biner untuk desimal\r\n\r\n2\r\n3\r\n4\r\n5\r\n1\r\nU5:A\r\n4072\r\n\r\n2\r\n3\r\n4\r\n5\r\n1\r\nU1:A\r\n4082\r\n9\r\n10\r\n11\r\n12\r\n13\r\nU1:B\r\n4082\r\n2\r\n3\r\n4\r\n5\r\n1\r\nU2:A\r\n4082\r\n9\r\n10\r\n11\r\n12\r\n13\r\nU2:B\r\n4082\r\nU3\r\nNOT U4\r\nNOT\r\n0\r\nE\r\n0\r\nA0\r\n0\r\nA1\r\n\r\n0\r\nX0\r\n0\r\n0\r\n0\r\nX3\r\n\r\n15\r\n\r\n5 adalah 1 0 1 (A2 bernilai 1, A1 bernilai 0 dan A0 bernilai 1).\r\nRangkaian percobaan dapat dilihat pada gambar berikut.\r\n\r\nGambar 3. 2 Demultiplekser\r\n\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\n\r\nTable 3. 3 Dekoder BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0\r\n5\r\n4\r\n3\r\n2\r\n\r\n1\r\n4082\r\nU1:A\r\n9\r\n12\r\n11\r\n10\r\n\r\n13\r\n4082\r\nU1:B\r\n5\r\n4\r\n3\r\n2\r\n\r\n1\r\n4082\r\nU2:A\r\n9\r\n12\r\n11\r\n10\r\n\r\n13\r\n4082\r\nU2:B\r\n\r\nNOT U3\r\nNOT U4\r\n\r\n5\r\n4\r\n3\r\n2\r\n\r\n1\r\n4082\r\nU5:A\r\n9\r\n12\r\n11\r\n10\r\n\r\n13\r\n4082\r\nU5:B\r\n5\r\n4\r\n3\r\n2\r\n\r\n1\r\n4082\r\nU6:A\r\n9\r\n12\r\n11\r\n10\r\n\r\n13\r\n4082\r\nU6:B\r\n\r\nNOT U7\r\n\r\n16\r\n\r\n1 1 1 1 1 1\r\nPercobaan terkahir yaitu dekoder BCD ke 7 segmen. Dari percobaan\r\nketika input LT bernilai 0 maka semua input yang lain akan diabaikan.\r\nSebaliknya input yang lain akan diabaikan juga ketika LT bernilai 1\r\nakan tetapi nilai blanking 0. Rangkaian akan berjalan ketika nilai LT\r\ndan blanking sama-sama bernilai 1. Karena menggunakan 7 segmen\r\ndisplay akan menampilkan output sesua dengan biner yang diinputkan.\r\nSeperti contoh ketika input biner 0000 maka display akan menampilkan\r\nuntuk desimal 0 danseterusnya. Rangkaian pada percobaan ditunjukan\r\npada gambar berikut.\r\n\r\nGambar 3. 3 Dekoder BCD ke 7 Segmen\r\n\r\nA\r\n7 B\r\n1 C\r\n2 D\r\n6\r\nLT 3 BI 4\r\nLE/STB 5\r\nQA 13 QB 12 QC 11 QD 10 QE 9 QF 15 QG 14\r\nU1\r\n\r\n4511\r\n\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n\r\n17\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerdasarkan pada praktikum yang telah dilakukan mengenai\r\nMSI(Medium Scale Integration) didapatkan kesimpulan sebagai berikut.\r\n1. Multiplekser merupakan komponen elektronika yang memiliki\r\nbeberapa input yang akan diteruskan pada satu output.\r\nDemultiplekser akan menerimasatu input data dan diteruskan pada\r\nbeberapa output.\r\n2. Multiplekser dan demultiplekser dapat dimanfaatkan dalam\r\nkehidupan seperti untuk transmisi jarak jauh.\r\n3. Rangkaian decoder yaitu akan merubah dari input biner ke dalam\r\ndesimal dan encoder sebaliknya yaitu mengubah dari desimal ke\r\nbiner.\r\n4. Manfaat encoder dan decoder yaitu diantaranya dapat mengetahui\r\ninput yang dimasukan menjadi data aslinya pada output.', 'REZA APRIATNA', 'UNIT 1'),
(611, '3332200103', 'Multiplexer atau sering disebut juga dengan data selector, adalah rangkaian\r\nlogika yang menerima beberapa input data dan hanya mengizinkan satu data\r\nyang diteruskan kepada output dalam satu waktu.\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\n3.2.2 Percobaan Demultiplexer\r\nDemultiplexer adalah sebagai penerima dari beberapa input data tadi, akan\r\nKembali dipisahkan sesuai dengan tujuan output masing-masing.\r\nE0̅̅̅̅ E1̅̅̅̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\n3.2.3 Percobaan Dekoder BCD ke 7 Segmen\r\nDekoder BCD ke 7 segment jenis TTL adalah rangkaian yang berfungsi untuk\r\n\r\nmengubah kode bilangan biner BCD (Binary Coded Decimal) menjadi data\r\ntampilan untuk penampil / display 7 segment yang bekerja pada tegangan\r\nTTL (+5volt DC).\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X MATI\r\n1 0 X X X X MATI\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1 MATI\r\n\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nKesimpulan yang bisa diambil dalam praktikum unit 1 gerbang logika dasar ini\r\nsebagai berikut.\r\n1. Praktikan dapat mengetahui rangkaian multiplexer dan demultiplexer\r\n2. Praktikan sudah mengetahui pemanfaatan multiplexer dan demultiplexer\r\n3. Praktikan sudah mengatahui beberapa rangkaian dari decoder dan encoder\r\n4. Praktikan sudah mengetahui pemanfaatan rangkaian dari decoder dan\r\nencoder', 'PILAR RIF’AT TSAQIF', 'UNIT 1'),
(612, '3332210013', 'Dari percobaan yang telah tilakukan pada praktikum kali ini, maka\r\ndidapatkanlah hasil percobaan dari multiplexer, demultiplexer, dan decoder BCD 7\r\nsegmen sebagai berikut :\r\n3.2.1 Multiplekser\r\nDari percobaan multiplekser ini, maka didapatkanlah hasil seperti yang\r\ntertera pada tabel.\r\n\r\nTabel 3.1 Percobaan Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nDari hasil yang didapatkan pada percobaan ini, terlihat bahwa pada tabel di\r\natas dapat dikatakan bahwa multiplekser ini mempunyai 4 masukan yaitu I0, I1, I2,\r\ndan I3. Kemudian terdapat 2 selektor yaitu A0 dan A1, dimana selektor ini\r\nmenentukan banyaknya input yaitu dengan 2jumlah selektor = Jumlah Input. Kemudian\r\nterdapat juga E̅ merupakan enable yang bisa diabaikan saja. Yaitu ketika enable\r\nbernilai 1 maka rangkaian mati, dan ketika bernilai 0 maka rangkaian bekerja.\r\nA0 dan A1 adalah selectornya, maka ketika selectornya 0 0, maka yang akan\r\ndipilih oleh Y atau output-nya adalah yang berada pada I0. Lalu apabila selectornya\r\nbernilai 1 0, maka yang akan dipilih menjadi Y adalah nilai I1. Dari sini sudah dapat\r\ndisimpulkan bahwa multiplekser bisa mengambil salah satu masukan dari beberapa\r\njalur menjadi nilai keluaran yang akan digunakan yaitu hanya satu jalur nilai\r\nkeluaran. Berikut adalah contoh rangkaian multiplekser saat selector bernilai 1 0.\r\n\r\n11\r\n\r\nGambar 3.1 Rangkaian Multiplekser Selektor 1 0\r\nDapat dilihat pada gambar di atas yaitu ketika selektornya bernilai 1 dan 0,\r\nmaka yang akan dipilih adalah nilai masukan dari I1.\r\n3.2.2 Demultiplekser\r\nDari percobaan multiplekser ini, maka didapatkanlah hasil seperti yang\r\ntertera pada tabel.\r\n\r\nTabel 3.2 Percobaan Demultiplekser\r\n\r\n̅E̅̅0̅ ̅E̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nDari hasil yang didapatkan pada percobaan ini, terlihat bahwa pada tabel di\r\natas dapat dikatakan bahwa demultiplekser ini mempunyai 1 masukan yaitu E2.\r\nKemudian terdapat 3 selektor yaitu A0, A1, dan A2, maka dengan rumus 2jumlah selektor\r\n\r\n12\r\n\r\nyaitu 23 maka jumlah outputnya adalah 8. Nilai output nya yaitu O0 sampai O7.\r\nKemudian terdapat juga E0\r\n̅̅̅ dan E1\r\n̅̅̅̅ merupakan enable yang bisa diabaikan saja.\r\nYaitu ketika enable bernilai 1 maka rangkaian mati, dan ketika bernilai 0 maka\r\nrangkaian bekerja.\r\nA0, A1, dan A2 adalah selectornya, maka ketika selectornya 0 0 0, maka yang\r\nakan dipilih oleh input-nya untuk jalur keluarannya adalah O0. Lalu apabila\r\nselectornya bernilai 0 1 0, maka yang akan dipilih oleh masukannya adalah jalur\r\noutput O2. Dari sini sudah dapat disimpulkan bahwa demultiplekser bisa mengambil\r\nsatu masukan untuk dikeluarkan pada salah satu jalur dari banyaknya jalur pada\r\noutput-nya. Berikut adalah contoh rangkaian multiplekser saat inputnya bernilai 1\r\ndan selector bernilai 0 1 0.\r\n\r\nGambar 3.2 Rangkaian Demultiplekser Dengan Selektor 0 1 0\r\nDapat dilihat pada gambar di atas yaitu ketika selektornya bernilai 0 1 0, maka\r\njalur keluaran yang akan dipilih oleh nilai masukan adalah keluaran O2.\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\nDari percobaan dekoder BCD ke 7 segmen ini, maka didapatkanlah hasil\r\nseperti yang tertera pada tabel.\r\n\r\nTabel 3.3 Percobaan Dekoder BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X -\r\n\r\n13\r\n\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 -\r\n1 1 1 0 1 1 -\r\n1 1 1 1 0 0 -\r\n1 1 1 1 0 1 -\r\n1 1 1 1 1 0 -\r\n1 1 1 1 1 1 -\r\n\r\nDari data hasil tabel yang bisa dilihat di atas maka dapat disimpulkan\r\nrangkaian dekoder ini mempunyai 7 masukan. Yang pertama yaitu LT atau\r\nkepanjangannya Light Test berfungsi sebagai pengetesan pada 7 segmen apakah\r\nberfungsi atau tidak, yaitu dengan memberikan masukan 0 untuk test, dan 1 untuk\r\nmematikannya. Kemudian ada Blanking yakni fungsinya untuk saklar didalam\r\nrangkaian ini yang akan menyala saat masukannya bernilai 1. Kemudian terdapat 4\r\nmasukan yang akan ditampulkan di 7 segmen seperti D0, D1, D2, dan D3.\r\nPada saat Blanking dan LT memiliki masukan 1 0 0 0 maka pada tampilan\r\n7 segmen akan menampilkan display 1, lalu saat nilai masukannya diubah ke 1 1 0\r\n0 maka nilai pada 7 segmen akan berubah menjadi 3. Lalu dalam percobaan kali\r\nini, nilai maksimal yang dapat ditampilkan oleh 7 segmen adalah 9. Berikut adalah\r\ncontoh rangkaian dari 7 segmen dengan nilai keluaran 3 dengan masukan 1 1 0 0.\r\n\r\n14\r\n\r\nGambar 3.3 Rangkaian Dekoder BCD ke 7 Segmen Masukan 1 1 0 0\r\n\r\n15\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nAdapun kesimpulan yang didapatkan pada percobaan MSI (Medium Scale\r\nIntegration) adalah sebagai berikut :\r\n1. Multiplexer merupakan suatu rangkaian kombinasional yang memiliki input\r\nyang lebih dari 1 jalur, sedangkan output-nya hanya ada satu jalur. Lalu\r\nDemultiplexer merupakan kebalikannya, yaitu rangkaian yang memiliki\r\nsatu jalur input dan banyak jalur output.\r\n2. Pemanfaatan dari multiplekser dan demultiplekser ini banyak ditemukan\r\npada perangkat elektronik, seperti contohnya aadalah alat komunikasi yang\r\nmemiliki banyak jalur seperti HT\r\n3. Rangkaian enkoder contohnya seperti rangkaian enkoder desimal (10 line)\r\nke BCD, dan rangkaian dekoder contohnya rangkaian dekoder BCD ke 7\r\nsegmen.\r\n4. Pemanfaatan dari enkoder yaitu seperti alat untuk mempermudah manusia\r\ndalam mengoperasikan mesin yakni dengan mengubah bahasa non mesin ke\r\nmesin. Lalu untuk dekoder yaitu sebaliknya, manusia dapat memahami\r\nbahasa mesin sehingga lebih mudah dipahami.', 'DESTRA SAE VIANDA', 'UNIT 1'),
(613, '3332210079', 'Pada praktikum MSI (Medium Scale Integration) dilakukan beberapa\r\npercobaan yaitu multiplekser, demultiplekser, dan dekoder BCD ke 7 segmen.\r\nBerikut ini merupakan pembahasannya.\r\n\r\n3.2.1 Multiplekser\r\n\r\nPercobaan pertama menggunakan Multiplekser, didapatkan data\r\ndengan hasil sebagai berikut.\r\n\r\n10\r\nTabel 3. 1 Percobaan Multiplekser\r\n\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nPada Multiplekser ini sifatnya Active Low artinya akan aktif saat\r\nnilainya (E) 0. Contohnya bisa dilihat pada baris pertama nilai E nya 1\r\nitu artinya tidak ada proses otomatis nilai Y nya 0.\r\nLalu, pada baris ke 2 dan 3 karena ingin jadi multiplekser, E nya\r\nharus bernilai 0, tapi pada baris ke 2 dan 3 memiliki output Y yang\r\nberbeda. Hal ini disebabkan perbedaan input yang dipengaruhi oleh input\r\nI0 karena A0, A1 bernilai 0,0 dimana A0, A1 itu pin kontrol yang\r\nmenentukan saluran masukan yang berhubungan dengan keluaran (Y)\r\nlalu nilainya akan sama dengan input I0.\r\nPada baris 4 dan 5 nilai A0 danA1 bernilai 0 dan 1 tapi mempunyai\r\ninput yang berbeda yaitu 1 dan 0. Hal ini dipengaruhi oleh input I 2 yang\r\nbernilai 1 dan 0. Kenapa bukan I0 yang padahal nilai inputnya sama saja,\r\nkarena I0 itu sudah digunakan untuk kondisi pada baris ke 2 dan 3.\r\nPada baris ke 5 dan 6 nilai A0 danA1 bernilai 1 dan 0 tapi mempunyai\r\ninput yang berbeda yaitu 1 dan 0. Hal ini dipengaruhi oleh input I1 yang\r\nbernilai 1 dan 0.\r\nPada baris ke 7 dan 8 nilai A0 danA1 bernilai 1 dan 1 tapi mempunyai\r\ninput yang berbeda yaitu 0 dan 1. Hal ini dipengaruhi oleh input I 3 yang\r\nbernilai 0 dan 1.\r\n\r\n11\r\n\r\n3.2.2 Demultiplekser\r\n\r\nPercobaan kedua menggunakan Demultiplekser, didapatkan data\r\ndengan hasil sebagai berikut.\r\n\r\nTabel 3. 2 Percobaan Demultiplekser\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nPada percobaan demultiplexer ini A0, A1 sebagai pin kontrol yang\r\nmenentukan saluran keluaran yang aktif dan I0 – I1 sebagai gerbang yang\r\nmemungkinkan proses dilaksanakan (terjadi hanya jika E0 = 0; E1 = 0; E2\r\n= 1). O0 – O7: Keluaran (Aktif Rendah). Bisa dilihat pada tabel diatas\r\npada baris ke 1 sampai 3 output nya bernilai 0 karena E0, E1, dan E2 tidak\r\nsesuai dengan data sheet IC nya. Jadi agar bisa bekerja bisa dilihat pada\r\nbaris ke 4 sampai 11, A0, A1, A2 dibacanya dibalik menjadi A2, A1, A0\r\nkarena A2 sebagi MSB dan A0 sebagai LSB. Pada pin kontrol baris ke 4\r\nA2, A1, A0 bernilai 0, 0, 0 dengan nilai desimalnya bernilai 0 pada tabel\r\ndi atas 0 dilambangkan dengan O0 maka nilai outputnya 1. Pada pin\r\nkontrol baris ke 5 A2, A1, A0 bernilai 1, 0, 0 dengan nilai desimalnya\r\nbernilai 4 pada tabel di atas 4 dilambangkan dengan O4 maka nilai\r\noutputnya 1. Pada pin kontrol baris ke 6 A2, A1, A0 bernilai 0, 1, 0 dengan\r\nnilai desimalnya bernilai 2 pada tabel di atas 2 dilambangkan dengan O2\r\n\r\n12\r\n\r\nmaka nilai outputnya 1. Pada pin kontrol baris ke 7 A2, A1, A0 bernilai 1,\r\n1, 0 dengan nilai desimalnya bernilai 6 pada tabel di atas 6 dilambangkan\r\ndengan O6 maka nilai outputnya 1. Pada pin kontrol baris ke 8 A2, A1, A0\r\nbernilai 0, 0, 1 dengan nilai desimalnya bernilai 1 pada tabel di atas 1\r\ndilambangkan dengan O1 maka nilai outputnya 1. Pada pin kontrol baris\r\nke 9 A2, A1, A0 bernilai 1, 0, 1 dengan nilai desimalnya bernilai 5 pada\r\ntabel di atas 5 dilambangkan dengan O5 maka nilai outputnya 1. Pada pin\r\nkontrol baris ke 10 A2, A1, A0 bernilai 0, 1, 1 dengan nilai desimalnya\r\nbernilai 3 pada tabel di atas 3 dilambangkan dengan O3 maka nilai\r\noutputnya 1. Pada pin kontrol baris ke 11 A2, A1, A0 bernilai 1, 1, 1\r\ndengan nilai desimalnya bernilai 7 pada tabel di atas 7 dilambangkan\r\ndengan O7 maka nilai outputnya 1.\r\n\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\n\r\nBerikut adalah Percobaan ketiga menggunakan BCD Seven\r\nSegment, dan didapatkan hasil sebagai berikut.\r\n\r\nTabel 3. 3 Percobaan BCD Seven Segment\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n\r\n0 X X X X X\r\n\r\n1 0 X X X X\r\n\r\n1 1 0 0 0 0\r\n\r\n13\r\n\r\n1 1 0 0 0 1\r\n\r\n1 1 0 0 1 0\r\n\r\n1 1 0 0 1 1\r\n\r\n1 1 0 1 0 0\r\n\r\n1 1 0 1 0 1\r\n\r\n1 1 0 1 1 0\r\n\r\n1 1 0 1 1 1\r\n\r\n1 1 1 0 0 0\r\n\r\n14\r\n\r\n1 1 1 0 0 1\r\n\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1\r\n\r\nPada percobaan decoder ini yaitu dilakukan proses yang\r\ndisebut decoding, proses ini menguraikan isyarat mesin digital atau\r\nkomputer yang berupa bilangan biner ke bilangan desimal sehingga\r\ndapat dimengerti oleh manusia. Pada percobaan ini, LT berfungsi\r\nsebagai penguji lampu dari 7 segment dan Blanking berfungsi\r\nsebagai pengosongan 7 segment sehingga angka yang ada pada 7\r\n\r\n15\r\n\r\nsegment dapat diisi kembali atau diganti dengan angka yang\r\nlainnya. Dan dapat dilihat, pada saat nilai LT bernilai nol (0) dan\r\nBlanking bernilai X (bebas) dan juga pada saat LT bernilai satu (1)\r\ndan Blanking bernilai nol (0) maka display tidak menampilkan\r\nbentuk apapun walaupun sudah diberi inputan sedangkan pada saat\r\nLT dan Blanking bernilai satu (1) maka inputan yang diberikan\r\npada rangkain tersebut akan menampilkan bentuk-bentuk angka\r\npada displaynya sesuai dengan angka biner yang\r\nmerepresentasikan angka desimal tersebut. Misal, inputannya 0110\r\nmaka, display akan menampilkan angka enam (6) dan karena 7\r\nsegment ini hanya satu (1) bit maka, display akan menampilkan\r\nbentuk – bentuk aneh lainnya.\r\n\r\n16\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nAdapun kesimpulan dalam praktikum Medium Scale Integration yaitu sebagai\r\nberikut:\r\n1. Multiplekser adalah suatu rangkaian yang memiliki banyak masukan tetapi\r\nhanya memiliki satu keluaran\r\n2. Demultiplekser adalah suatu rangkaian yang hanya memiliki satu masukan\r\ntetapi memiliki beberapa keluaran\r\n3. Multiplekser digunakan sebagai data selector\r\n4. Demultiplexer digunakan sebagai penyalur data\r\n5. Encoder adalah sebuah piranti yang digunakan untuk mengubah suatu\r\nsistem bilangan digital (contohnya, sistem bilangan desimal) pada inputnya\r\nmenjadi sistem bilangan biner pada outputnya\r\n6. Decoder adalah sebuah piranti yang digunakan untuk mengubah bilangan\r\nbiner pada bagian inputnya menjadi bilangan lainnya (contohnya, desimal)\r\nsehingga dapat dimengerti oleh manusia atau dengan kata lain, decoder\r\nadalah penerjemah atau pengurai sandi', 'SAID RAHMAN AZIZI', 'UNIT 1');
INSERT INTO `plagiator_postmodel` (`id`, `nim`, `isi_laprak`, `nama`, `unit`) VALUES
(614, '3332210031', 'Pada percobaan Unit 8, praktikan melakukan 3 percobaan, yaitu percobaan\r\nmultiplekser, demultiplekser, dan dekoder BCD ke 7 segmen. Berikut adalah\r\npembahasannya:\r\n3.2.1 Multiplekser\r\nPada percobaan ini didapatkan hasil percobaan seperti pada tabel\r\nberikut:\r\n\r\nTabel 3. 1 Data Hasil Percobaan Multiplekser\r\nA0 A1 E̅ I0 I1 I2 I3 Y\r\nX X 1 X X X X 0\r\n0 0 0 0 1 1 1 0\r\n0 0 0 1 0 0 0 1\r\n0 1 0 1 0 1 1 1\r\n0 1 0 0 1 0 0 0\r\n1 0 0 1 1 0 1 1\r\n1 0 0 0 0 1 0 0\r\n1 1 0 1 1 1 0 0\r\n1 1 0 0 0 0 1 1\r\n\r\nBerdasarkan hasil diatas, dapat disimpulkan bahwa Multiplekser memiliki\r\ntujuh nilai input, yaitu A0 dan A1 memiliki fungsi sebagai selektor dari empat\r\nnilai input I0, I1, I2, I3. Yang mana dari keempat nilai input tersebut yang akan\r\ndiproses dan menjadi nilai output. Lalu, E atau bisa disebut Enabler.\r\nRangkaian hanya akan bekerja apabila nilai dari E adalah 0. Ketika nilai dari\r\nE adalah 0 maka rangkaian dapat bekerja dan ketika nilai input A0 dan A1\r\nadalah 0 dan 0, maka nilai input yang akan diproses dan menjadi nilai output\r\nadalah nilai dari I0. ketika nilai input A0 dan A1 adalah 1 dan 0, maka nilai\r\ninput yang akan diproses dan menjadi nilai output adalah nilai dari I1.\r\nSehingga dapat disimpulkan Multiplekser memilih satu dari beberapa input\r\nyang ada dan yang memilih adalah nilai dari A0 dan A1. Nilai yang terpilih saat\r\nitu akan menjadi output dari Multiplekser.\r\n\r\n10\r\n\r\nGambar 3. 1 Rangkaian Multiplekser\r\n\r\n3.2.2 Demultiplekser\r\nPada percobaan ini didapatkan hasil percobaan seperti pada tabel\r\nberikut:\r\n\r\nTabel 3. 2 Data Hasil Percobaan Demultiplekser\r\n\r\n̅E̅̅0̅ ̅E̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nBerdasarkan hasil diatas, disimpulkan bahwa rangkaian Demultiplekser\r\nmemiliki enam input, yaitu A0, A1, dan A2 yang memiliki fungsi sebagai\r\nselektor dimanakah output akan ditempatkan dari 8 output yang ada, berbeda\r\ndengan Multiplekser dimana selektor digunakan untuk menentukan input\r\n\r\n11\r\n\r\nyang mana yang akan digunakan. Lalu, terdapat 3 buah input yang berfungsi\r\nsebagai Enabler melalui gerbang AND yang mengharuskan input ke gerbang\r\nAND bernilai 1 semua, karena pada ̅E̅̅0̅ dan ̅E̅̅1̅ sebelum masuk ke gerbang\r\nAND terdapat gerbang NOT terlebih dahulu, maka agar rangkaian dapat\r\nbekerja input dari Enabler haruslah ̅E̅̅0̅ = 0, ̅E̅̅1̅ = 0, dan E2 yang juga\r\nberperan sebagai input Data, bernilai 1. Ketika rangkaian aktif, maka kita\r\nhanya perlu memainkan input dari selektor untuk menentukan nilai 1 mau\r\nditempatkan dimana. Dan keluaran atau output dari rangkaian Demultiplekser\r\nini semuanya bernilai terbalik, sehingga harus kita beri gerbang NOT agar\r\ndidapatkan hasil yang diinginkan. Ketika nilai A0, A1, dan A2 adalah 0 0 0\r\nmaka output (yang bernilai 1) akan ditempatkan pada O0. Lalu, ketika nilai\r\nA0, A1, dan A2 adalah 1 0 0 maka output (yang bernilai 1) akan ditempatkan\r\npada O1. Seperti itu cara kerja dari Demultiplekser hanya dengan memainkan\r\nnilai dari A0, A1, dan A2.\r\n\r\nGambar 3. 2 Rangkaian Demultiplekser\r\n\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\nPada percobaan ini didapatkan hasil percobaan seperti pada tabel\r\nberikut:\r\n\r\n12\r\n\r\nTabel 3. 3 Data hasil Percobaan Dekoder BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X -\r\n1 0 X X X X -\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 -\r\n1 1 1 0 1 1 -\r\n1 1 1 1 0 0 -\r\n1 1 1 1 0 1 -\r\n1 1 1 1 1 0 -\r\n1 1 1 1 1 1 -\r\n\r\nBerdasarkan hasil diatas, dapat disimpulkan bahwa rangkaian Dekoder\r\nmemiliki 7 input, yaitu LT atau Light Test yang berfungsi untuk mencoba\r\napakah 7 segmen berfungsi dengan baik atau tidak, untuk menggunakan mode\r\ntesting ini dibutuhkan input 0 dan 1 untuk memberhentikan mode testing.\r\nLalu, terdapat Blanking atau kedipan yang berfungsi sebagai saklar dalam\r\ndekoder yang akan membuat dekoder bekerja jika input dari Blanking adalah\r\n1. Dan terdapat 4 buah nilai input yang akan diproses dan ditampilkan pada 7\r\nsegmen, yaitu D0, D1, D2, dan D3. Ketika LT dan Blanking bernilai 1 maka\r\nrangkaian akan bekerja. Lalu, ketika D0, D1, D2, dan D3 bernilai 1 0 0 0 maka\r\npada 7 segmen akan menunjukan angka 1 dan ketika D0, D1, D2, dan D3\r\nbernilai 0 1 0 0 maka pada 7 segmen akan menunjukan angka 2. 7 segmen\r\n\r\n13\r\n\r\nyang digunakan pada percobaan ini tidak dapat menampilkan angka diatas 9\r\nkarena 7 segmen ini hanya bisa menampilkan 1 buah digit.\r\n\r\nGambar 3. 3 Rangkaian Dekoder BCD ke 7 Segmen\r\n\r\n14\r\nBAB IV\r\nKESIMPULAN\r\n\r\n4.1. Kesimpulan\r\nBerdasarkan pada praktikum yang telah dilakukan mengenai Shift Register\r\ndidapatkan kesimpulan sebagai berikut:\r\n1. Multiplekser adalah suatu rangkaian yang digunakan untuk mengalihkan\r\ndari beberapa input ke satu jalur output.\r\nDemultiplekser adalah suatu rangkaian yang digunakan untuk\r\nmengalihkan dari satu input ke beberapa jalur output.\r\n2. Pemanfaatan dari Multiplekser dan Demultiplekser adalah pada sistem\r\nkomunikasi dimana dibutuhkan banyak jalur atau channel yang berbeda\r\ndalam berkomunikasi seperti pada HT (Handy Talky).\r\n3. Contoh rangkaian Enkoder dan Dekoder adalah pada percobaan diatas,\r\nyaitu Dekoder BCD ke 7 Segmen, yang terjadi adalah bahasa berbasis\r\nbiner diubah menjadi bahasa lain yang digunakan 7 segmen dan 7 segmen\r\nmengubah kembali bahasa tersebut menjadi angka yang dapat kita\r\nmengerti.\r\n4. Pemanfaatan enkoder sebagai alat pembantu manusia dalam berinteraksi\r\ndengan mesin digital dengan memberi kode atau input dari bahasa\r\nmanusia dan diubah menjadi bahasa lain. Dan dekoder berlaku sebaliknya,\r\nsebagai alat pembantu manusia berinteraksi dengan mesin digital dengan\r\nmenerjemahkan kode atau output dari bahasa lain ke bahasa manusia.', 'NUNO DZAKKII MUSYAFFA', 'UNIT 1'),
(615, '3332190073', 'Pada percobaan pertama ini adalah percobaan multiplexer yang dimana\r\nmultiplexer ini adalah perangkat yang memiliki banyak input dan output satu\r\nbaris, dan pada percobaan multiplexer ini Enable nya aktif low, yang dimana\r\naktif low itu ketika diberi logika low atau (0) rangkaian akan bekerja. Pada\r\npercobaan multiplexer ini memilih output nya berdasarkan selektornya, seperti\r\nketika selektor (1,1) didapatkan input (1,1,1,0) dan (0,0,0,1) dan pada selektor\r\nA ini memilih input pada I3.\r\n\r\n9\r\n\r\n3.2.2. Demultiplexer\r\n\r\nTabel 3. 2 Tabel Percobaan Demultiplexer\r\n\r\nEതതത0ത Eതതത1ത E2 A0 A1 A2 Oത0 Oത1 Oത2 Oത3 Oത4 Oത5 Oത6 Oത7\r\n1 X X 0 0 0\r\nX 1 X 0 0 0\r\nX X 0 0 0 0\r\n0 0 1 0 0 0 1\r\n0 0 1 0 0 1 1\r\n0 0 1 0 1 0 1\r\n0 0 1 0 1 1 1\r\n0 0 1 1 0 0 1\r\n0 0 1 1 0 1 1\r\n0 0 1 1 1 0 1\r\n0 0 1 1 1 1 1\r\n\r\nPada percobaan ini adalah demultiplexer percobaan demultiplexer yang dimana\r\ndemultiplexer adalah perangkat yang memiliki satu input dan banyak output, dan\r\npada percobaan demultiplexer ini E2 aktif High , yang dimana aktif High itu\r\nketika diberi logika high atau (1) maka rangkaian akan bekerja. Pada rangkaian\r\ndemultiplexer memilih output berdasarkan penjumlahan selektor 2n\r\n, seperti\r\ndikotak merah pada tabel 3.2 diatas selektor A0 diberi logika (1) hasil dari 2n\r\nnya\r\n\r\nadalah 20\r\nyang dimana hasil nya adalah 1 maka output berapa di O1 .\r\n\r\n10\r\n\r\n3.2.3. Dekoder BCD 7 Segment\r\n\r\nTabel 3. 3 Dekoder BCD 7 Segmen\r\n\r\nBerdasarkan percobaan decoder BCD 7 Segmen yang dimana percobaan ini sama\r\nseperti sebelumnya menggunakan penjumlahan 2n\r\n\r\npada D3 D2 D1 dan D0, fungsi\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X MATI\r\n1 0 X X X X MATI\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1 MATI\r\n\r\n11\r\n\r\nLT disini untuk menyalakan fungsi dari 7 segmennya dan Blanking disini untuk\r\nmenyalakan lampu blink dari 7 segmen tersebut, rangkaian decoder disini aktif\r\nHigh yang dimana yang dimana aktif High itu ketika diberi logika high atau (1)\r\nmaka rangkaian akan bekerja. Pada rangkaian ini hanya bisa menghitung atau\r\nmenampilkan sampai angka 9 saja 10 keatas tidak bisa ditampilkan atau\r\ndidefinisikan dan pada input bernilai 1 semua maka 7 segment akan mati.\r\n\r\n12\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1.Kesimpulan\r\nBerikut ini kesimpulan dapat ditarik pada praktikum teknik digital unit 8\r\nini, yaitu :\r\n1. Pada praktikum kali ini mengenali piranti multiplexer dan demultiplexer\r\nyaitu multiplexer adalah perangkat yang memiliki banyak input dan output\r\nsatu baris, demultiplexer adalah merupakan perangkat dengan satu input dan\r\nbeberapa jalur output.\r\n2. Adapun pemanfaatan multiplexer dan demultiplexer yaitu pada multiplexer\r\ndigunakan pada sistem komunikasi, jaringan komunikasi, dan hard drive\r\nkomputer, pada demultiplexer digunakan pada sistem komunikasi dan\r\nArithmethic Logic Unit (ALU).\r\n3. Rangkaian decoder dan encoder contoh nya adalah 7 segmen.\r\n4. Adapun pemanfaatan decoder dan encoder yaitu pada decoder Kode\r\nkonverter, Digunakan dalam sistem memori komputer untuk mengakses\r\nlokasi memori tertentu berdasarkan alamat yang dihasilkan oleh perangkat\r\nkomputasi, dan Untuk melakukan operasi di ALU (Arithmetic Logic Unit)\r\nCPU, decoder digunakan untuk decoding (memecahkan) kode instruksi\r\nprogram untuk mengaktifkan jalur kontrol. Pada encoder Sirkuit encoder\r\nmemiliki aplikasi pada kendaraan robotik, Sistem Pemantauan Otomatis\r\nmemiliki berbagai jenis sirkuit encoder dan Sirkuit encoder telah digunakan\r\ndalam sistem komunikasi terenkripsi.', 'Wahyu Hanafi', 'UNIT 1'),
(616, '3332210011', 'Pada Tabel 3.1 menunjukkan data hasil percobaan rangkaian multiplekser.\r\nMultiplekser merupakan rangkaian logika yang berfungsi sebagai pemilih data\r\nmasukan yang kemudian dapat menjadi keluaran, sehingga pada rangkaian ini\r\nterdapat banyak masukan dengan sedikit keluaran. Pada percobaan ini digunakan\r\nrangkaian MUX 2 to 1 yang artinya menghubungkan empat jalur masukan ke satu\r\njalur keluaran. Rangkaian ini memiliki dua buah selektor yaitu A0 dan A1, yang\r\ndengan jumlah selektor ini dapat ditentukan jumlah masukan dengan 2\r\nn\r\n, di mana n\r\nmerupakan jumlah dari selektor. Fungsi dari selektor yaitu menentukan data\r\nmasukan pada suatu bagian yang kemudian menjadi keluaran. Sehingga pada\r\nrangkaian ini terdapat 2\r\n2\r\natau 4 buah masukan yaitu I0, I1, I2, dan I3. Keempat data\r\nmasukan ini memiliki fungsi sebagai masukan data yang kemudian dipilih oleh\r\nselektor.\r\nSelain adanya selektor dan jalur masukan, pada rangkaian ini terdapat\r\nmasukan enable. Masukan enable karakteristik active low, di mana akan aktif saat\r\ndiberi masukan 0 dan tidak aktif saat diberi masukan 1. Pada data masukan pertama\r\npercobaan ini, di mana masukan enable bernilai 1 menjadikan masukan selektor\r\ndan data masukan menjadi diabaikan atau tidak aktif serta menghasilkan keluaran\r\n0. Hal ini disebabkan saat masukan enable bernilai 1, maka rangkaian tidak aktif\r\n\r\n10\r\n\r\nyang menyebabkan tidak bisa diberi masukan dan keluarannya 0. Sebaliknya, saat\r\nmasukan enable bernilai 0, maka data masukan dan selektor akan aktif dan keluaran\r\nakan menampilkan data pilihan selektor. Prinsip kerja dari masukan enable pada\r\nrangkaian ini seperti saklar on/off yang akan dalam kondisi off saat bernilai 1 dan\r\nberada pada kondisi on saat bernilai 0.\r\nPada data masukan kedua, diberikan masukan A0 dan A1 bernilai 0,\r\nmasukan enable bernilai 0, dan data masukan I0, I1, I2, dan I3 berturut-turut yaitu\r\n0, 1, 1, dan 1 yang menghasilkan keluaran bernilai 0. Hal ini terjadi karena masukan\r\nenable bernilai 0 yang menjadikan rangkaian aktif, masukan A0 dan A1 bernilai 0\r\nyang merupakan biner dari desimal 0 (menunjukkan bahwa data ke 0 sebagai\r\nmasukan terpilih), dan pada data masukan I0 bernilai 0. Sehingga yang ditampilkan\r\nkeluarannya bernilai 0. Pada data masukan keempat, diberikan masukan A0 bernilai\r\n0 dan A1 bernilai 1, masukan enable bernilai 0, dan data masukan I0, I1, I2, dan I3\r\nberturut-turut yaitu 1, 0, 1, dan 1 yang menghasilkan keluaran bernilai 1. Hal ini\r\nterjadi karena masukan enable bernilai 0 yang menjadikan rangkaian aktif, masukan\r\nA0 bernilai 0 dan A1 bernilai 1 yang merupakan biner dari desimal 2 saat dibaca\r\ndari arah MSB (menunjukkan bahwa data ke 2 sebagai masukan terpilih), dan pada\r\ndata masukan I2 bernilai 1. Sehingga yang ditampilkan keluarannya bernilai 1. Pada\r\ndata masukan keenam, diberikan masukan A0 bernilai 1 dan A1 bernilai 0, masukan\r\nenable bernilai 0, dan data masukan I0, I1, I2, dan I3 berturut-turut yaitu 1, 1, 0,\r\ndan 1 yang menghasilkan keluaran bernilai 1. Hal ini terjadi karena masukan enable\r\nbernilai 0 yang menjadikan rangkaian aktif, masukan A0 bernilai 1 dan A1 bernilai\r\n0 yang merupakan biner dari desimal 1 saat dibaca dari arah MSB (menunjukkan\r\nbahwa data ke 1 sebagai masukan terpilih), dan pada data masukan I1 bernilai 1.\r\nSehingga yang ditampilkan keluarannya bernilai 1. Pada data masukan kedelapan,\r\ndiberikan masukan A0 bernilai 1 dan A1 bernilai 1, masukan enable bernilai 0, dan\r\ndata masukan I0, I1, I2, dan I3 berturut-turut yaitu 1, 1, 1, dan 0 yang menghasilkan\r\nkeluaran bernilai 0. Hal ini terjadi karena masukan enable bernilai 0 yang\r\nmenjadikan rangkaian aktif, masukan A0 bernilai 1 dan A1 bernilai 1 yang\r\nmerupakan biner dari desimal 3 saat dibaca dari arah MSB (menunjukkan bahwa\r\ndata ke 3 sebagai masukan terpilih), dan pada data masukan I3 bernilai 0. Sehingga\r\nyang ditampilkan keluarannya bernilai 0.\r\n\r\n11\r\n\r\n3.2.2 Demultiplekser\r\n\r\nTabel 3. 2 Tabel Hasil Percobaan Demultiplekser\r\n\r\n̅E̅̅0̅ ̅E̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nPada Tabel 3.2 menunjukkan data hasil percobaan dari rangkaian\r\ndemultiplekser. Demultiplekser merupakan rangkaian logika yang memiliki fungsi\r\nsebagai pemilih jalur keluaran dari suatu masukan, sehingga memiliki sedikit\r\nmasukan dan banyak keluaran. Pada percobaan ini digunakan rangkaian DEMUX\r\n1 to 8 yang artinya menghubungkan 1 jalur masukan dengan 8 jalur keluaran. Pada\r\nrangkaian ini terdapat 1 masukan yaitu E0’, E1’, dan E2 yang dirangkai pada\r\ngerbang logika AND yang menjadikan ketiga nilai ini menjadi satu masukan.\r\nKemudian, pada rangkaian ini pula terdapat tiga buah selektor yaitu A0, A1, dan\r\nA2. Dengan diketahui banyaknya selektor yang digunakan, dapat ditentukan\r\nbanyaknya keluaran yang dihasilkan yaitu sebanyak 2\r\nn\r\n, di mana nilai n yaitu\r\nbanyaknya selektor yang digunakan, sehingga banyaknya keluaran yang dihasilkan\r\nyaitu 2\r\n3\r\natau 8 keluaran. Selektor pada rangkaian ini berfungsi sebagai pemilih\r\nkeluaran melalui kombinasi bilangan biner.\r\nPada data masukan pertama hingga ketiga dari percobaan ini, di mana nilai\r\ndari E0’, E1’, dan E2 secara berturut-turut yaitu 1, 1, dan 0 yang menghasilkan\r\nkeluaran 0 pada gerbang AND yang kemudian keluaran ini digunakan sebagai\r\nmasukan pada rangkaian demultiplekser, serta nilai selektor A0, A1, dan A2\r\n\r\n12\r\n\r\nsemuanya bernilai 0, maka akan menghasilkan keluaran bernilai 0 semua. Hal ini\r\ndikarenakan selama nilai masukan E0’, E1’, dan E2 secara berturut-turut yaitu 1, 1,\r\ndan 0, maka akan menghasilkan masukan bernilai 0 sebagai hasil operasi pada\r\ngerbang logika AND. Kemudian, masukan ini ditempatkan pada keluaran yang\r\nditunjukkan oleh ketiga selektor, di mana ketiga selektor ini menunjukkan biner\r\ndari 0. Sehingga, nilai 0 ditempatkan pada O0 yang menghasilkan keluaran 0\r\n\r\nsemua. Pada percobaan kelima, di mana nilai dari E0’, E1’, dan E2 secara berturut-\r\nturut yaitu 0, 0, dan 1 yang menjadikan nilai masukan 1, serta nilai selektor A0, A1,\r\n\r\ndan A2 secara berturut-turut bernilai 0, 0, dan 1 yang menunjukkan biner 4 , maka\r\nmasukan pada rangkaian akan disalurkan pada keluaran bagian 4 yaitu O4 bernilai\r\n1. Pada percobaan keenam, di mana nilai dari E0’, E1’, dan E2 secara berturut-turut\r\nyaitu 0, 0, dan 1 yang menjadikan nilai masukan 1, serta nilai selektor A0, A1, dan\r\nA2 secara berturut-turut bernilai 0, 1, dan 0 yang menunjukkan biner 2 , maka\r\nmasukan pada rangkaian akan disalurkan pada keluaran bagian 2 yaitu O2 bernilai\r\n1.\r\n\r\n3.2.3 Dekoder BCD ke 7 Segmen\r\n\r\nTabel 3. 3 Tabel Hasil Percobaan BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 1 X X X X 8\r\n1 0 X X X X BLANK\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n\r\n13\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1 BLANK\r\n\r\nPada Tabel 3.3 menunjukkan data hasil percobaan BCD ke 7 segmen. BCD\r\nke 7 segmen merupakan rangkaian logika yang berfungsi sebagai rangkaian\r\ndekoder yang kemudian ditampilkan pada bagian display 7 segmen. Dekoder\r\nmerupakan rangkaian logika yang dapat mengubah bilangan biner ke bilangan lain\r\natau dari bilangan mesin (non-human) ke bahasa yang dimengerti manusia (human).\r\nRangkaian yang menjadi komplemen dari dekoder yaitu enkoder, di mana enkoder\r\nmerupakan rangkaian logika yang memiliki fungsi untuk mengubah suatu jenis\r\nbilangan ke jenis bilangan biner atau dari bilangan manusia ke bilangan mesin. Pada\r\nrangkaian ini terdapat masukan lamp test (LT), blanking, dan data masukan D0, D1,\r\nD2, dan D3. Lamp test merupakan masukan yang digunakan dalam mengetes nyala\r\nlampu. Lamp test yang memiliki karakteristik active low akan aktif apabila diberi\r\nmasukan 0 dan akan tidak aktif saat diberi masukan 1. Kemudian, Blanking\r\nmerupakan masukan yang menghasilkan di mana lampu dari 7 segmen tidak\r\nmenyala. Hal ini dikarenakan, saat blanking diaktifkan maka rangkaian tidak\r\nmenerima data dan menghasilkan keluaran blank. Masukan blank ini juga memiliki\r\nkarakteristik active low yang akan aktif apabila diberi masukan 0 dan akan tidak\r\naktif saat diberi masukan 1. Selanjutnya, data masukan D0, D1, D2, dan D3\r\nberfungsi sebagai masukan biner yang kemudian dikonversi menjadi desimal dan\r\nditampilkan pada penampil.\r\nPada percobaan ini, digunakan IC 7447 sebagai modul yang berfungsi untuk\r\nmendekoder masukan biner pada rangkaian BCD ke 7 segmen. Data masukan\r\npertama menunjukkan tampilan 8 (lampu menyala semua) saat masukan LT bernilai\r\n0, masukan blanking bernilai 1, dan data masukan D0, D1, D2, dan D3 diabaikan\r\n(don’t care). Hal ini dikarenakan saat masukan blanking tidak aktif karena bernilai\r\n\r\n14\r\n\r\n0 dan masukan LT bernilai 0 yang menjadikan rangkaian akan masuk pada kondisi\r\nlamp test, di mana seluruh lampu pada penampil 7 segmen menyala sehingga tidak\r\ndapat menerima masukan yang membuat keempat data masukan diabaikan.\r\nKemudian, saat masukan LT bernilai 1 dan blanking bernilai 0, maka akan\r\nmenghasilkan tampilan blank atau kosong. Hal ini dikarenakan saat masukan blank\r\nbernilai 0, maka kondisi blank pada rangkaian aktif yang menjadikan seluruh lampu\r\n7 segmen mati. Selanjutnya, saat masukan LT dan blanking semuanya bernilai 1,\r\nmaka rangkaian tidak berada pada kondisi lamp test maupun blanking. Kondisi ini\r\nmerupakan kondisi rangkaian mulai menerima data dan mulai menginversi biner ke\r\ndesimal yang tertampil pada penampil.\r\nData masukan yang ketiga menunjukkan masukan LT dan blanking bernilai\r\nsemuanya bernilai 1 dan masukan D3, D2, D1, dan D0 semuanya bernilai 0, maka\r\nmenghasilkan keluaran bernilai 0. Hal ini dikarenakan saat masukan LT dan blank\r\nbernilai 1, maka rangkaian pada kondisi menerima data dan mengonversikannya\r\nmenjadi desimal yang ter tampil di penampil. Pada data masukan ini, diterima biner\r\n0000 yang merupakan biner nol (0), sehingga menghasilkan keluaran 0 pada\r\npenampil. Selama kondisi masukan LT dan blanking bernilai 1, maka akan berada\r\npada kondisi konversi. Pada kondisi ini, peran dari keempat data masukan akan\r\nmenentukan keluaran yang ditampilkan di penampil. Saat masukan D3, D2, D1, D0\r\nmembentuk angka-angka biner dari 0 hingga 9, maka pada penampil akan\r\nditampilkan sesuai dengan angka biner yang menjadi masukan. Namun, saat\r\nmasukan D3, D2, D1, D0 membentuk bilangan biner lebih dari desimal 9, maka\r\nakan terjadi kondisi invalid pada BCD ke 7 segmen.\r\nKondisi invalid pada BCD ke 7 segmen merupakan kondisi di mana\r\npenampil tidak dapat menampilkan keluaran yang sesuai dengan masukan yang\r\ndiberikan pada D3, D2, D1, D0 saat masukan LT dan blanking bernilai 1. Hal ini\r\ndikarenakan pada BCD ke 7 segmen hanya dapat mengonversikan bilangan desimal\r\nyaitu dari 0 hingga 9. Sehingga, saat diberi masukan kombinasi bilangan biner lebih\r\ndari 9 maka akan terjadi kesalahan pada penampil. Hal ini dapat diamati pada data\r\nmasukan 13 hingga 18 yang menampilkan keluaran yang tidak sesuai. Saat biner\r\nmenunjukkan angka 1010 menghasilkan keluaran seperti huruf C, saat diberi\r\nmasukan biner 1011 menghasilkan keluaran C terbalik, saat diberi masukan biner\r\n\r\n15\r\n\r\n1100 menghasilkan keluaran seperti huruf U, dan seterusnya selama masukan\r\nberada di atas nilai desimal 9, maka BCD ke 7 segmen akan berada pada kondisi\r\ninvalid.\r\n\r\n16\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerdasarkan praktikum yang telah dilakukan mengenai MSI (medium scale\r\nintegration) didapatkan kesimpulan sebagai berikut.\r\n1. Rangkaian multiplekser merupakan rangkaian logika yang dapat\r\nmemilih suatu masukan dari banyaknya masukan untuk disalurkan pada\r\nkeluaran. Rangkaian demultiplekser merupakan rangkaian logika yang\r\ndapat memilih suatu saluran keluaran yang kemudian akan dikeluarkan\r\nnilai dari masukan.\r\n2. Pemanfaatan multiplekser dan demultiplekse dapat diamati pada\r\npenggunaan telefon rumah di mana fitur multiplekser saat memilih\r\npelanggan mana yang ingin berkomunikasi dan fitur demultiplekser saat\r\nmemilih pelanggan mana yang akan menerima informasi telefon.\r\n3. Enkoder merupakan rangkaian yang dapat mengonversikan suatu jenis\r\nbilangan ke bilangan biner. Sedangkan, dekoder merupakan rangkaian\r\nyang dapat mengonversikan bilangan biner ke suatu jenis bilangan lain.\r\n4. Rangkaian enkoder dimanfaatkan dalam Decimal to BCD Encoder.\r\nSedangkan, rangkaian dekoder dimanfaatkan dalam BCD to 7 segment.', 'RIZKI MAULA', 'UNIT 1'),
(617, '3332210023', 'Pada percobaan multiplekser didapatkan kesimpulan bahwa, A\r\nsebagai selector, E sebagai Enable jika E bernilai 1 rangkaian tidak akan\r\nbekerja sebaliknya jika E bernilai 0 maka rangkaian akan bekerja, I sebagai\r\nInput dan Y sebagai Output, Karena pada multiplekser Inputan lebih dari\r\nsatu dan Outputnya satu atau seri, Contoh pada baris ke 4, A0 dan A1\r\nbernilai 0 dan 1 maka selektor akan memilih nilai pada I2 dan di dapatkan\r\noutputan Y bernilai 1.\r\n3.2.2 Percobaan Demultiplekser\r\nAdapun data hasil percobaan Demultiplekser sebagai berikut\r\nPada percobaan demultiplekser ini kebalikkanya dari multiplekser\r\ndimana inputannya ada 1 dan outputnya ada beberapa, E sebagai Input yang\r\ndimana E0 dan E1 dinotkan terlebih dahulu pada rangkaian sehingga hasil\r\ndari inputannya bernilai 1, A sebagai Selektor yang akan memilih output\r\npada rangkaian dan O sebagai Output yang akan di keluarkan, contoh pada\r\nbaris ke 6, Selektornya menunjukkan angka 0-1-0 dimana jika dirubah ke\r\n̅E̅̅0̅ ̅E̅̅1̅ ̅E̅̅2̅ A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nTabel 3.2 Percobaan Demultiplekser\r\n\r\n9\r\n\r\nbilangan desimal menghasilkan angka 4 maka output yang ditampilkan\r\nberupa nilai 1 akan berada di O4 dan yang lainnya berupa 0 atau don’t care.\r\n3.2.3 Percobaan BCD 7 Segment\r\nAdapun data hasil percobaan BCD 7 Segment sebagai berikut\r\nPada percobaan BCD 7 Segment ini hampir sama seperti Counter\r\ntetapi pada 7 segment ini hanya bisa menampilkan angka sampai 9, dan jika\r\nlebih dari 9 maka tampilan akan berubah secara acak atau don’t care,\r\nInputan berupa nilai D dan Outputnya akan ditampilkan ke Display, LT dan\r\nBlanking harus bernilai 1 supaya rangkaian BCD 7 Segment dapat bekerja.\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X 0\r\n1 0 X X X X 0\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 X\r\n1 1 1 0 1 1 X\r\n1 1 1 1 0 0 X\r\n1 1 1 1 0 1 X\r\n1 1 1 1 1 0 X\r\n1 1 1 1 1 1 X\r\nTabel 3.2 Percobaan BCD 7 Segment\r\n\r\n10\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nAdapun beberapa kesimpulan yang didapatkan pada Unit 4 ini mengenai\r\nMSI (Medium Scale Integration) sebagai berikut :\r\n1. Multiplekser merupakan rangkaian yang menerima beberapa input dan\r\nmengeluarkan satu buah output, Demultiplekser merupakan rangkaian yang\r\nmenerima satu buah input dan mengeluarkan beberapa output\r\n2. Pemanfaatan multiplexer dan demultiplexer pada saat mencari kata pada\r\nword jika diketikkan sesuatu maka output yang dikeluarkan akan sesuai apa\r\nyang inputan ketikkan.\r\n3. Dekoder merupakan rangkaian yang bisa mengolah suatu bilangan biner\r\natau bahasa mesin dan merubahnya ke bilangan lainnya bisa berupa\r\nbilangan decimal, octal, hexa ataupun bilangan lainnya\r\n4. Encoder merupakan rangkaian yang bisa mengolah suatu bilangan lainnya\r\nke bilangan biner atau bahasa mesin.\r\n5. Pemanfaatan Dekoder dan Enkoder pada saat memasukkan password ke\r\nsuatu website dan website tersebut akan men-encoding dan decoding di\r\ndalam website tersebut.', 'DIKY AHMAD KAMALUDIN', 'UNIT 1'),
(618, '3332210018', 'Dari data diatas bisa kita analisa bahwa A0 dan A1 pada rangkaian merupakan\r\nselector sedangkan I0, I1, dan I3 merupakan Inputan. Pada rangkaian multiplexer\r\n\r\n10\r\n\r\n10\r\n\r\nmenggunakan gerbang AND yang disusun kemudian dihubungkan menjadi satu\r\ngerbang OR. Pada gerbang AND inputan pertama berfungsi sebagai pengirim data,\r\nsedangkan inputan kedua atau selektor berfgungsi sebagai sakelar agar bisa berganti\r\ndengan gerbang AND yang kebawah bernilai 1, makainputan gerbang AND akan\r\nterkirim\r\nDari data di atas bisa kita analisa bahwa jika semua nilai diabaikan atau ‘X’\r\npada tabel dan rangkaian maka output yang dihasilkan 0 mengapa demikian karena\r\nbelom ada perintah yang di aktifkan dalam rangkaian tersebut.\r\nsaat inputan A0 adalah 0 dan A1 adalah 0 maka output yang ditampilkan adalah\r\ninputan yang berada di jalur I0, yaitu nol (0), saaat inputan A0 adalah 0 dan A1\r\nadalah 1 maka output yang ditampilkan adalah inputan yang berada di jalur I2, yaitu\r\n1, begitupun seterusnya jika inputan pada selektor berubah menyesuaikan angka\r\nbiner dari inputan tersebut dan ouput menyesuaikan dengan angka biner yang di\r\nhasilka. Dari hasil analisa kita tahu bahwa rangkaian ini bersifat active low, yaitu\r\nrangkaian yang akan aktif ketika diberi nilai logika nol (0 dan 0).\r\n\r\n3.2.2 Percobaan Kedua\r\nPada Percobaan praktikum Kedua yaitu menggunakan 1 to 8Demultiplexer\r\ndengan rangkaianya sebagai berikut :\r\n\r\n11\r\n\r\n11\r\n\r\ngambar 3.2 rangkaian 1 to 8 Demultiplexer\r\n\r\nDari hasil praktikum percobaan Kedua didapat data sebagai berikut :\r\nTabel 3.2 Percobaan Kedua Demultiplekser\r\n\r\nE0\r\n̅̅̅ E1\r\n̅̅̅ E2 A0 A1 A2 O0 O1 O2 O3 O4 O5 O6 O7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nDari data diatas bisa kita analisa bahwa E0, E1, E2 adalah inputan namun bisa kita\r\nlihat inputan yang sebenernya adalah E2 karena E0 dan E1 di not kan.\r\nUntuk melakukan percobaan kedua, nilai E0 dan E1 harus bernilai nol (0)\r\nkarena keduanya bersifat Active LOW dan E2 harus bernilai satu (1) karena bersifat\r\nActive HIGH agar rangkaiannya aktif dan dapat digunakan pada percobaan\r\ntersebut. Nilai dari A0, A1 dan A2 sangat berpengaruh dalam menentukan posisi dari\r\noutput yang bernilai satu (1) unutk mengetahui posisi bisa digunkan cara sebagai\r\nberikut :\r\nbisa kita lihat pada percobaan pada tabel baris 1, 2, 3 saat salah satu rangkaian\r\nbelom di aktifkan maka output yang di hasilkan adalah 0 karena belom ada perintah\r\nyang di berikan. Namun Jika ketiga selektor ataupun inputan sudah di aktifkan\r\nmaka outuput yang ditampilkan akan muncul dengan sesuai nilai dari A0, A1, A2.\r\n\r\n12\r\n\r\n12\r\n\r\nBaris keempat pada tabel saat A0, A1, dan A2 memiliki nilai sebagai berikut :\r\n\r\n0 + (0) + (0) = 0 + 0 + 0 = 0\r\n\r\nmaka output yang dihasilkan akan ada di O0 karena nilai yang dihasilkan pada\r\nA0,A1, dan A2 adalah 0\r\n\r\nBaris keempat pada tabel saat A0, A1, dan A2 memiliki nilai sebagai\r\nberikut:\r\n\r\n0 + (0) + (2.2) = 0 + 0 + 4 = 4\r\n\r\nmaka output yang dihasilkan akan ada di O4 karena nilai yang dihasilkan pada\r\nA0,A1, dan A2 adalah 4\r\n\r\nBaris kelima pada tabel saat A0, A1, dan A2 memiliki nilai sebagai berikut:\r\n\r\n0 + (2) + (0) = 0 + 2 + 0 = 2\r\n\r\nmaka output yang dihasilkan akan ada di O2 karena nilai yang dihasilkan pada\r\nA0,A1, dan A2 adalah 2\r\nBegitupun seterusnya nilai pada O akan meneysuaikan sesuai dengan nilaidari A.\r\n\r\n3.2.3 Percobaan Ketiga\r\nPada Percobaan praktikum Ketiga yaitu menggunakan 1 to 8Demultiplexer\r\ndengan rangkaianya sebagai berikut :\r\n\r\n13\r\n\r\n13\r\n\r\ngambar 3.3 rangkaian decoder BCD ke 7 segment\r\n\r\nDari hasil praktikum percobaan Kedua didapat data sebagai berikut :\r\nTabel 3.3 Percobaan Ketiga Decoder BCD Ke 7 Segment\r\nLT BLANKING D3 D2 D1 D0 DISPLAY\r\n0 X X X X X 8\r\n1 0 X X X X BLANK\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n\r\n14\r\n\r\n14\r\n\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1 BLANK\r\n\r\nDalam percobaan praktikum kali ini dilakukan proses yang disebut decoding,\r\nproses ini merupakan penguraian isyarat mesin komputer yang berupa bilangan\r\nbiner ke bilangan desimal sehingga dapat dimengerti oleh manusia. Pada percobaan\r\nini, LT berfungsi sebagai penguji lampu dari 7 segment sedangkan Blanking\r\nberfungsi sebagai pengosongan 7 segment sehingga angka yang ada pada 7 segment\r\ndapat diisi kembali atau diganti dengan angka yang lainnya pada percobaan kali ini\r\nLT dan BLANKING harus bernilai 1. Jika pada saat nilai LT bernilai nol (0) dan\r\nBlanking bernilai X (bebas) dan juga pada saat LT bernilai satu (1) dan Blanking\r\nbernilai nol (0) maka display tidak menampilkan bentuk apapun atau pada mode\r\nawal kosong dan blanking.\r\nMisal, inputannya adalah 0 0 0 0 maka output akan menampilkan angka 0, jia\r\ninputan adalah 0110 maka, display akan menampilkan angka enam (6) begitu pun\r\nseterusnya namun saat angka ouput sudah mencapai angka 9 dan ngin kesepuluh\r\nmaka nilai yang di hasilkan akan berbeda bukan menampilkan angka 10 melainkan\r\nsebuah bentuk aneh karena pada dasarnya rangkain tersebut hanya memuat angka\r\n0-9, jika sudah melebihi maka akan masuk kedalam kondisi invalid.\r\n\r\n15\r\n\r\n15\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nDari hasil praktikum percobaan tentang MSI ( Medium Scale Integration)\r\ndidapat kesimpulan sebagai berikut :\r\n1. Kita dapat Mengenali piranti multiplekser dan demultiplekser, dimana\r\nMultiplekser adalah suatu rangkaian yang memiliki banyak masukan tetapi hanya\r\nmemiliki satu keluaran sedangkan Demultiplexer adalah suatu rangkaian yang\r\nhanya memiliki satu masukan tetapi memiliki beberapa keluaran.\r\n2. Kita Dapat Mengetahui pemanfaatan multiplexer dan demultiplexer,\r\ndimana pemanfaatan multiplexer adalah untuk sistem komunikasi, jaringan telepon,\r\nhard drive komputer dan transmisi sistem komputer satelit, sedangkan pemanfaatan\r\ndemultiplexer adalah untuk sistem komunikasi, dan aritmetic logic unit(ALU). .\r\n3. Kita dapatMengenali beberapa rangkaian decoder dan encoder, dimana\r\nEncoder adalah sebuah piranti yang digunakan untuk mengubah suatu sistem\r\nbilangan digital (contohnya, sistem bilangan desimal) pada inputnya menjadi sistem\r\nbilangan biner pada outputnya sedangkan Decoder adalah sebuah piranti yang\r\ndigunakan untuk mengubah bilangan biner pada bagian inputnya menjadi bilangan\r\nlainnya (contohnya, desimal) sehingga dapat dimengerti oleh manusia atau dengan\r\nkata lain, decoder adalah penerjemah atau pengurai sandi.\r\n4. Kita dapat Mengetahui pemanfaatan decoder dan encoder, dimana\r\npemanfaatan decoder adalah untuk Pengaman data komunikasi nirkabel,\r\nDekompresor, dan konverter audio analog to digital sedangkan pemanfaatan\r\nEncoder adalah untuk remot Tv, tombol ponsel hp, keybord.', 'ANIS FUADI PUTRA', 'UNIT 1'),
(619, '3332190100', 'Pada percobaan ini, rangkaian dalam keadaaan active low. Memilih\r\ndata yang diinputkan dan menjadikan 1 output saja. Ambil contoh untuk A0\r\ndan A1 dengan input (0,0) didapat data berwarna merah. Data diatas ada 1 yang\r\nberbeda dan 3 yang nilainya sama. Selektor atau A nya memilih output pada\r\nI0.\r\n\r\n3.2.2. Delmultiplekser\r\nBerikut hasil yang didapat:\r\n\r\nTabel 3. 2 Demultiplekser\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n\r\nUniversitas Sultan Ageng Tirtayasa\r\n12\r\n\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nPada percobaan ini, rangkaian percobaan merupakan rangkaian active high.\r\nSelector akan memilih data yang diinputkan. Di ambil contoh yang di tandai\r\ndengan warna merah dimana nilai A0, A1, A2 bernilai (0,1,1) dimana nilai A\r\nmewakili bilangan pangkat 2 jika 0 maka output atau selektor aja\r\nmengabaikannya sedangkan 1 maka selektor akan bekerja. Pada tabel yang\r\ndiberi warna merah outpunya berupa desimal yaitu 6.\r\n3.2.3. Decoder BCD ke 7 Segmen\r\nBerikut hasil yang didapat:\r\n\r\nTabel 3. 3 Decoder BCD 7 Segmen\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X MATI\r\n1 0 X X X X MATI\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\nUniversitas Sultan Ageng Tirtayasa\r\n13\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1 MATI\r\nPada percobaan ini, rangkaian dalam keadaaan active high dimana jika\r\nbelum dalam keadaan active high maka display tidak akan menampilkan\r\ndisplay. LT sebagai pengaktif dari seven segmen dan Blanking sebagai penentu\r\nlampu mana yang akan dihidupkan. Pada display ke 3 – ke 11 display akan\r\nmenampilkan dalam bentuk desimal dari 0 sampai 9. Pada display ke 12 – ke\r\n16 akan menamplikan nilai output yang memiliki nilai yang tidak dapat\r\ndidefinisikan. Saat display ke-17 saat nilai input 1 semua maka display tidak\r\nakan menyala atau mati.\r\n\r\n14\r\nBAB IV\r\nKESIMPULAN\r\n\r\n4.1. Kesimpulan\r\nAdapun kesimpulan dari praktikum unit ini yaitu:\r\n1. Percobaan pertama, memilih data yang memiliki banyak inputan dan\r\nmenjadikan 1 output saja.\r\n2. Percobaan kedua, memilih data yang data yang berdasarkan selektor yang\r\naktif.\r\n3. Pecobaan ketiga, data akan ditampilkan pada dislay sesuai dengan LT,\r\nBlanking dan inputannya.', 'VERNAND PRASETYO', 'UNIT 1'),
(620, '3332210087', 'Output pada percobaan ini dipengaruhi oleh nilai A0 dan A1,\r\njika pada A0 dan A1 kedua-duanya bernilai 0 maka yang\r\nditampilkan pada bagian output adalah input jalur I0. Jika pada A0\r\nbernilai 0 dan A1 bernilai 1 maka yang ditampilkan pada bagian\r\noutput adalah input jalur I2. Jika pada A0 bernilai 1 dan A1 bernilai\r\n0 maka yang ditampilkan pada bagian output adalah input jalur I1.\r\nJika pada A0 dan A1 kedua-duanya bernilai 1 maka yang\r\nditampilkan pada bagian output adalah input jalur I3. Seperti yang\r\npada tabel baris kedua ketika A0 dan A1 kedua-duanya bernilai 0\r\nmaka output yang ditampilkan adalah inputan yang berada di jalur\r\nI0, yaitu nol (0). Dan rangkaian ini bersifat active low, yaitu\r\nrangkaian yang akan aktif ketika diberi nilai logika nol (0).\r\n\r\n16\r\n\r\n3.2.2 Percobaan Demultiplexer\r\n\r\nPercobaan kedua menggunakan Demultiplekser, didapatkan\r\ndata – data hasil sebagai berikut:\r\n\r\nTabel 3.2 Percobaan Demultiplekser\r\n\r\n̅̅̅ ̅ ̅̅̅ ̅ A0 A1 A2 ̅\r\n0\r\n̅\r\n1 ̅\r\n2 ̅\r\n3 ̅\r\n4 ̅\r\n5 ̅\r\n6 ̅\r\n7\r\n\r\n1 X X 0 0 0 0\r\n\r\n0 0 0 0 0 0 0\r\n\r\nX 1 X 0 0 0 0\r\n\r\n0 0 0 0 0 0 0\r\n\r\nX X 0 0 0 0 0\r\n\r\n0 0 0 0 0 0 0\r\n\r\n0 0 1 0 0 0 1\r\n\r\n0 0 0 0 0 0 0\r\n\r\n0 0 1 0 0 1 0\r\n\r\n0 0 0 1 0 0 0\r\n\r\n0 0 1 0 1 0 0\r\n\r\n0 1 0 0 0 0 0\r\n\r\n0 0 1 0 1 1 0\r\n\r\n0 0 0 0 0 1 0\r\n\r\n0 0 1 1 0 0 0\r\n\r\n1 0 0 0 0 0 0\r\n\r\n0 0 1 1 0 1 0\r\n\r\n0 0 0 0 1 0 0\r\n\r\n0 0 1 1 1 0 0\r\n\r\n0 0 1 0 0 0 0\r\n\r\n0 0 1 1 1 1 0\r\n\r\n0 0 0 0 0 0 1\r\n\r\nUntuk melakukan percobaan kedua, nilai\r\n̅̅̅ dan\r\n̅̅̅ harus\r\nbernilai nol (0) karena keduanya bersifat Active LOW dan E2\r\nharus bernilai satu (1) karena bersifat Active HIGH agar\r\nrangkaiannya aktif dan dapat digunakan pada percobaan tersebut.\r\nNilai dari A0, A1 dan A2 sangat berpengaruh dalam menentukan\r\nposisi dari output yang bernilai satu (1) dan juga dapat diketahui\r\ndengan cara manual sebagai berikut:\r\nKarena percobaan ini mengkonversi bilangan biner ke\r\nbilangan oktal maka A0: 20\r\n, A1: 21\r\n, dan A2: 22\r\n\r\n. Misal, pada A0\r\n\r\nbernilai 0 dan A1 = A2 = 1 maka,\r\n\r\n17\r\n\r\n(\r\n) (\r\n)\r\n\r\nDan hasilnya adalah enam (6), enam (6) menunjukkan posisi\r\ndari output yang bernilai satu (1), yaitu O6.\r\n\r\n3.2.3 Percobaan BCD Seven Segment\r\n\r\nPercobaan kedua menggunakan BCD Seven Segment,\r\ndidapatkan data – data hasil sebagai berikut:\r\n\r\nTabel 3.3 Percobaan BCD Seven Segment\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X\r\n\r\nX -\r\n\r\n1 0 X X X\r\n\r\nX -\r\n\r\n1 1 0 0 0\r\n\r\n0 0\r\n\r\n1 1 0 0 0\r\n\r\n1 1\r\n\r\n1 1 0 0 1\r\n\r\n0 2\r\n\r\n1 1 0 0 1\r\n\r\n1 3\r\n\r\n1 1 0 1 0\r\n\r\n0 4\r\n\r\n1 1 0 1 0\r\n\r\n1 5\r\n\r\n1 1 0 1 1\r\n\r\n0 6\r\n\r\n1 1 0 1 1\r\n\r\n1 7\r\n\r\n1 1 1 0 0\r\n\r\n0 8\r\n\r\n1 1 1 0 0\r\n\r\n1 9\r\n\r\n1 1 1 0 1\r\n0\r\n1 1 1 0 1\r\n1\r\n1 1 1 1 0\r\n0\r\n\r\n18\r\n\r\n1 1 1 1 0\r\n1\r\n\r\n1 1 1 1 1\r\n0\r\n\r\n1 1 1 1 1\r\n\r\n1 -\r\nDalam percobaan ini dilakukan proses yang disebut\r\ndecoding, proses ini menguraikan isyarat mesin digital atau\r\nkomputer yang berupa bilangan biner ke bilangan desimal\r\nsehingga dapat dimengerti oleh manusia. Pada percobaan ini, LT\r\nberfungsi sebagai penguji lampu dari 7 segment dan Blanking\r\nberfungsi sebagai pengosongan 7 segment sehingga angka yang\r\nada pada 7 segment dapat diisi kembali atau diganti dengan angka\r\nyang lainnya. Dan dapat dilihat, pada saat nilai LT bernilai nol (0)\r\ndan Blanking bernilai X (bebas) dan juga pada saat LT bernilai\r\nsatu (1) dan Blanking bernilai nol (0) maka display tidak\r\nmenampilkan bentuk apapun walaupun sudah diberi inputan\r\nsedangkan pada saat LT dan Blanking bernilai satu (1) maka\r\ninputan yang diberikan pada rangkain tersebut akan menampilkan\r\nbentuk-bentuk angka pada displaynya sesuai dengan angka biner\r\nyang merepresentasikan angka desimal tersebut. Misal,\r\ninputannya 0110 maka, display akan menampilkan angka enam\r\n(6) dan karena 7 segment ini hanya satu (1) bit maka, display akan\r\nmenampilkan bentuk – bentuk aneh lainnya.\r\n\r\n19\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nAdapun hal – hal yang dapat penulis simpulkan adalah sebagai berikut.\r\n1.Multiplekser adalah suatu rangkaian yang memiliki banyak\r\nmasukan tetapi hanya memiliki satu keluaran\r\n2.Demultiplekser adalah suatu rangkaian yang hanya\r\nmemiliki satu masukan tetapi memiliki beberapa keluaran\r\n3. Encoder adalah sebuah piranti yang digunakan untuk\r\nmengubah suatu sistem bilangan digital (contohnya, sistem\r\nbilangan desimal) pada inputnya menjadi sistem bilangan\r\nbiner pada outputnya\r\n4.Decoder adalah sebuah piranti yang digunakan untuk\r\nmengubah bilangan biner pada bagian inputnya menjadi\r\nbilangan lainnya (contohnya, desimal) sehingga dapat\r\ndimengerti oleh manusia atau dengan kata lain, decoder\r\nadalah penerjemah atau pengurai sandi', 'FARHAN RAMADHAN', 'UNIT 1'),
(621, '3332210037', 'Multiplekser merupakan rangkaian yang dapat memilih satu data dari\r\nbeberapa data untuk disalurkan ke keluarannya dengan bantuan sinyal pemilih atau\r\ndisebut selector.multiplekser ini sering digunakan pada jaringan telepon,memori\r\ncomputer,dan sistem komunikasi. Pada percobaan ini akan mencoba data selector\r\nyaitu 4 to 1 MUX karena memiliki 4 input ,4 input ini yaitu I0,I1,I2,dan\r\nI3,banyaknya input ini ditentukan oleh jumlah dari selector dan input data ini akan\r\ndikeluarkan ke 1 jalur yaitu output Y,maka disebut 4 to 1 karena dari 4 input yang\r\nnantinya dipilih 1 menuju ke 1 output. Yang dimaksud dengan sinyal pemilih\r\n(selector) yaitu A0 dan A1,selector ini akan memilih input yang diizinkan untuk\r\nkeluar. E̅ pada tabel diatas merupakan enable apabila enable bernilai 0 maka akan\r\nberproses dan apabila enable ini bernilai 1 maka tidak diproses,maka apabila kita\r\nambil contoh dari tabel diatas apabila E̅ bernilai 1 maka akan menghasilkan output\r\nsenilai 0 karena tidak diproses bila nilai dari E̅ = 1, maka apabila inputnya kita\r\nmasukkan dengan data berapapun itu maka tidak akan berpengaruh atau disebut\r\ndonker outputnya pun masih akan bernilai 0,dan apabila selector bernilai 00 seperti\r\npada tabel diatas maka yang akan di outputkan yang data ke I0 karena biner dari 00\r\n\r\n10\r\n\r\ndesimalnya yaitu 0 oleh karena itu outputnya ke I0,output I0 adalah 01 ,dan begitu\r\npula yang lainnya apabila selectornya 10 maka outputnya akan ke I2 karena\r\ndesimalnya yaitu 2,dan apabila selectornya 01 maka outputnya akan ke I1 karena\r\nbiner dari 01 desimalnya yaitu 1 maka akan beroutputnya ke I1 dan apabila\r\nselectornya 11 maka outputnya akan ke I3 karena desimalnya yaitu 3.\r\n3.2.2 Demultiplekser\r\nBerikut ini merupakan tabel kebenaran pada percobaan demultiplekser.\r\n\r\nTabel 3.2 Demultiplekser\r\n\r\n̅E̅̅0̅ ̅E̅̅1̅ E2 A0 A1 A2 O̅̅\r\n0 O̅̅\r\n1 O̅̅\r\n2 O̅̅\r\n3 O̅̅\r\n4 O̅̅\r\n5 O̅̅\r\n6 O̅̅\r\n7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nDemultiplekser merupakan rangkaian yang menyalurkan data ke salah satu\r\ndari beberapa keluaranya dengan bantuan sinyal pemilih (selector),demultiplekser\r\nsering digunakan pada sistem komunikasi,converter serial ke parallel, ALU\r\n(Arithmetic Logic Unit),pada percobaan ini kita akan mencoba data selector dari 1\r\nto 8,karena dari 1 input menuju ke salah satu dari 8 output, cara menentukan nilai\r\ndari output disini yaitu dari selectornya,data selector pada tabel diatas yaitu\r\nA0,A1,dan A2,apabila data selectornya bernilai 101 maka output yang bernilai 1\r\nakan berada pada output ke 5 atau O̅5 dikarenakan biner dari 101 memiliki nilai\r\ndesimal senilai 5 oleh karena itu output yang bernilai 1 berada pada output O̅5,dan\r\napabila data selectornya bernilai 011 maka output yang bernilai 1 akan berada pada\r\n\r\n11\r\n\r\noutput ke 3 atau O̅3 dikarenakan biner dari 011 memiliki nilai desimal senilai 5\r\noleh karena itu output yang bernilai 1 berada pada output ̅O3. Dan apabila\r\nselectornya bernilai 111 maka output yang bernilai 1 akan berada pada output ke 7\r\natau O̅7 dikarenakan biner dari 111 memiliki nilai desimal senilai 7 sehingga output\r\nyang bernilai 1 akan berada pada output O̅7.\r\n3.2.3 Dekoder BCD ke 7 segmen\r\nBerikut ini tabel kebenaran dari percobaan decoder BCD ke 7 segment.\r\n\r\nTabel 3.3 Dekoder BCD ke 7 Segmen\r\n\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X 8\r\n1 0 X X X X x\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0 c\r\n1 1 1 0 1 1 ↄ\r\n1 1 1 1 0 0 u\r\n1 1 1 1 0 1\r\n\r\nc\r\n.\r\n1 1 1 1 1 0 t\r\n1 1 1 1 1 1 x\r\n\r\nDecoder merupakan rangkaian yang fungsinya merubah ulang data\r\nbilangan-bilangan biner pada masukanya menjadi data asli pada outputnya.\r\n\r\n12\r\n\r\nDecoder digunakan dalam sistem audio untuk mengubah audio analog menjadi data\r\ndigital,decoder Digunakan sebagai dekompresor yaitu mengubah data terkompresi\r\nseperti gambar dan video ke dalam bentuk dekompresi,dan lain-lain,pada Decoder\r\nBCD ke 7 segmen ,berfungsi menerjemahkan Bahasa mesin atau Bahasa non\r\nhuman atau biner ke bahasa human atau lebih dimengerti oleh manusia oleh karena\r\nitu rangkaian ini akan menerjemahkan data-data biner menjadi desimal dan\r\nmenampilkannya dengan 7 segment yang hanya dapat menampilkan angka desimal\r\nyaitu dari 0 hingga 9. Prinsip kerja dari Decoder BCD ke 7 segmen adalah pada saat\r\ninput biner pada switch dikonversikan masuk ke dalam decoder, kemudian decoder\r\nmengkonversikan bilangan biner tersebut menjadi desimal sehingga akan tertampil\r\npada seven segment. LT pada tabel merupakan lamp test,LT ini berfungsi untuk\r\nmengetest apakah lampunya ini bekerja baik atau tidak, apabila LTnya bernilai 0\r\nmaka akan mengetest lampu yang ada pada 7 segments, apabila blangkingnya 0\r\nmaka 7 segment tidak akan bernyala sama sekali karena fungsinya untuk ngeblank\r\nana tau untuk tidak menampilkan apapun.apabila dimasukkan data biner ke\r\nD3,D2,D1,D0 maka akan dikonversikan menjadi desimal yaitu dari 0 hingga\r\n9,apabila biner menjadi desimal yang benilai lebih dari 9 maka angka yang muncul\r\npada 7 segmen akan berbentuk aneh atau berkondisi invalid dikarenakan 7 segmen\r\ndisini hanya dapat menampilkan nilai desimal,lebih dari biner desimal maka akan\r\nberkondisi invalid.\r\n\r\n13\r\n\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerdasarkan pada praktikum yang telah dilakukan mengenai MSI (Medium\r\nScale Integration) didapat kesimpulan sebagai berikut.\r\n1. Multiplekser merupakan rangkaian yang dapat memilih satu data dari\r\nbeberapa data untuk disalurkan ke keluarannya dengan bantuan sinyal\r\npemilih atau disebut selector.Sedangkan Demultiplekser merupakan\r\nrangkaian yang menyalurkan data ke salah satu dari beberapa\r\nkeluaranya dengan bantuan sinyal pemilih (selector)\r\n2. multiplekser ini sering digunakan pada jaringan telepon,memori\r\ncomputer,dan sistem komunikasi, sementara demultiplekser sering\r\ndigunakan pada sistem komunikasi,converter serial ke parallel, ALU\r\n(Arithmetic Logic Unit).\r\n3. Encoder berfungsi sebagai pengubah data masukan mejadi data bilangan\r\nbiner dengan format tertentu pada keluaranya,sementara decoder\r\n\r\nmerupakan rangkaian yang fungsinya merubah ulang data bilangan-\r\nbilangan biner pada masukanya menjadi data asli pada outputnya.\r\n\r\n4. Decoder digunakan dalam sistem audio untuk mengubah audio analog\r\nmenjadi data digital,decoder Digunakan sebagai dekompresor yaitu\r\nmengubah data terkompresi seperti gambar dan video ke dalam bentuk\r\ndekompresi,dan lain-lain,sementara Encoder digunakan pada email\r\nuntuk mengamankan alamat email, Encoder audio yang mengkonversi\r\naudio analog ke sinyal audio digital,dan lain-lain.', 'BAGAS AWANDA', 'UNIT 1');
INSERT INTO `plagiator_postmodel` (`id`, `nim`, `isi_laprak`, `nama`, `unit`) VALUES
(622, '3332200011', 'Dari tabel diatas, ketika E = 1 maka terjadi don’t care tapi kalau E = 0 maka mulai\r\nbisa memasukkan input dapat disimpulkan bahwa E berfungsi sebagai saklar dan\r\nactive low. Untuk input A0=0, A1=0 maka output akan bernilai 1 ketika I0=1.\r\nUntuk input A0=0, A1=1 maka output akan bernilai 1 ketika I1=1. Untuk input\r\nA0=1, A1=0 maka output akan bernilai 1 ketika I2=1. Untuk input A0=1, A1=1\r\nmaka output akan bernilai 1 ketika I3=1.\r\n\r\n3.2.2 Demultiplexer\r\n\r\nGambar 3.2 Rangkaian Demultiplexer [5]\r\nTabel 3.2 Demultiplekser\r\n\r\nE̅̅̅0̅ E̅̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 X X X X X X X X\r\nX 1 X 0 0 0 X X X X X X X X\r\nX X 0 0 0 0 X X X X X X X X\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nDari tabel diatas, ketika E2 = 0 maka terjadi don’t care tapi kalau E2 = 1 maka\r\nmulai bisa memasukkan input dapat disimpulkan bahwa E2 berfungsi sebagai\r\nsaklar dan active high. Nilai output akan bernilai 1 jika inputnya sesuai dengan\r\nbilangan binernya. Untuk A0=0,A1=0,A2=0 maka output yang bernilai 1 pada O0\r\n(000 = 0). Untuk A0=0,A1=0,A2=1 maka output yang bernilai 1 pada O4 (001 =\r\n4). Untuk A0=0,A1=1,A2=0 maka output yang bernilai 1 pada O2 (010 = 2). Untuk\r\nA0=0,A1=1,A2=1 maka output yang bernilai 1 pada O6 (011 = 6). Untuk\r\nA0=1,A1=0,A2=0 maka output yang bernilai 1 pada O1 (100 = 1). Untuk\r\nA0=1,A1=0,A2=1 maka output yang bernilai 1 pada O5 (101 = 5). Untuk\r\nA0=1,A1=1,A2=0 maka output yang bernilai 1 pada O3 (110 = 3). Untuk\r\nA0=1,A1=1,A2=1 maka output yang bernilai 1 pada O7 (111 = 7). Dapat\r\ndisimpulkan bahwa nilai input adalah bilangan biner dari 1 sampai 7 dan setiap\r\noutput mewakili bilangan decimal dari 1 sampai 7.\r\n\r\n3.2.3 BCD ke 7 segment\r\n\r\nGambar 3.3 Rangkaian BCD ke 7 segment [6]\r\nTabel 3.3 Dekoder BCD ke 7 segment\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X X\r\n1 0 X X X X X\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n\r\n1 1 1 0 1 0\r\n\r\n1 1 1 0 1 1\r\n\r\n1 1 1 1 0 0\r\n\r\n1 1 1 1 0 1\r\n\r\n1 1 1 1 1 0\r\n\r\n1 1 1 1 1 1\r\n\r\nDari tabel diatas, ketika LT = 0 maka terjadi don’t care, ketika LT = 1 dan Blanking\r\n= 0 maka terjadi don’t care tapi kalau LT = 1 dan Blanking = 1 maka mulai bisa\r\nmemasukkan input dapat disimpulkan bahwa LT dan Blanking active high. Nilai\r\nbilangan yang di inputkan adalah nilai bilangan decimal dari 0 sampai 9. Akan\r\ntetapi ketika dimasukkan bilangan biner dari 10 sampai 14 yang tertera pada 7\r\nsegment berbentuk kode ini terjadi karena 7 segment yang digunakan hanya dapat\r\nmenampilkan 1 angka dan bawaan pabriknya juga mempengaruhi 7 segment ini.\r\nKetika bilangan biner 15 dimasukkan maka 7 segment mati (reset).\r\n\r\nBAB IV\r\nPENUTUP\r\n\r\n4.1 Kesimpulan\r\n\r\n1. Multiplexer untuk menghubungkan banyak input dengan satu output,\r\ndemultiplexer untuk menghubungkan satu input dengan banyak output.\r\n2. Multiplexer dan demultiplexer digunakan untuk sistem komunikasi.\r\n3. Decoder untuk mengubah Bahasa alam menjadi Bahasa manusia,\r\nencoder untuk mengubah Bahasa manusia menjadi Bahasa alam.\r\n4. Pemanfaatannya untuk mengubah sinyal analog menjadi digital dan\r\nsebaliknya.', 'Ikbaludin', 'UNIT 1'),
(623, '3332210033', 'Multiplekser merupakan rangkaian logika kombinasional yang dirancang\r\nkhusus untuk mengalihkan salah satu dari beberapa jalur INPUT (masukan) ke satu\r\njalur OUTPUT (keluaran). Pada percobaan ini input A1 dan A0 merupakan input\r\nselektor untuk memilih input mana yang akan ditampilkan pada keluaran Y. E’\r\nmerupakan enable yang active low, input yang lain akan diterima jika enable\r\nbernilai low atau 0. Jika enable bernilai 1 maka input lainya akan diabaikan atau\r\ndon’t care. I0, I1, I2, dan I3 merupakan biner input.\r\n\r\n3.1.2 Demultiplekser\r\n\r\nTabel 3. 2 hasil percobaan demultiplekser\r\n\r\n̅E̅̅0̅ ̅E̅̅1̅ E2 A0 A1 A2 O̅0 O̅1 O̅2 O̅3 O̅4 O̅5 O̅6 O̅7\r\n1 X X 0 0 0 0 0 0 0 0 0 0 0\r\nX 1 X 0 0 0 0 0 0 0 0 0 0 0\r\nX X 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 1 0 0 0 1 0 0 0 0 0 0 0\r\n0 0 1 0 0 1 0 0 0 0 1 0 0 0\r\n0 0 1 0 1 0 0 0 1 0 0 0 0 0\r\n\r\n12\r\n\r\n0 0 1 0 1 1 0 0 0 0 0 0 1 0\r\n0 0 1 1 0 0 0 1 0 0 0 0 0 0\r\n0 0 1 1 0 1 0 0 0 0 0 1 0 0\r\n0 0 1 1 1 0 0 0 0 1 0 0 0 0\r\n0 0 1 1 1 1 0 0 0 0 0 0 0 1\r\n\r\nRangkaian demultiplekser dapat dilihat pada gambar 3.2\r\n\r\nGambar 3. 2 rangkaian demultiplekser\r\n\r\nDemultiplexer juga bisa diartikan dengan rangkaian logika yang menerima\r\nsatu input data yang mendistribusikan input tersebut yang beberapa output yang\r\ntelah disediakan juga merupakan kebalikan multiplexer. Demultiplexer merupakan\r\nrangkaian yang berfungsi menyalurkan data yang ada pada masukannya ke salah\r\nsatu dari beberapa keluarannya dengan bantuan sinyal pemilih atau sinyal kontrol\r\n(S) [4]. Pada percobaan ini terdapat 3 input enable yaitu E0’, E1’ dan E2. E0’ dan\r\nE1’ merupakan active low atau akan aktif jika nilai inputnya 0 atau low, sedangkan\r\nE2 merupakan active high atau akan aktif jika inpunya bernilai high atau 1. Input\r\nA0, A1, dan A2 merupakan input selektor atau untuk memilih akan diletakkan\r\ndimana input nya dalam keluaran. Terdapat 8 bit keluaran yaitu O0’-O7’ yang\r\nmerupakan keluaran active low.\r\n\r\n13\r\n\r\n3.1.3 Dekoder BCD ke 7 Segmen\r\nTabel 3. 3 hasil percobaan Dekoder BCD ke 7 Segmen\r\nLT Blanking D3 D2 D1 D0 Bentuk display\r\n0 X X X X X 0\r\n1 0 X X X X 0\r\n1 1 0 0 0 0 0\r\n1 1 0 0 0 1 1\r\n1 1 0 0 1 0 2\r\n1 1 0 0 1 1 3\r\n1 1 0 1 0 0 4\r\n1 1 0 1 0 1 5\r\n1 1 0 1 1 0 6\r\n1 1 0 1 1 1 7\r\n1 1 1 0 0 0 8\r\n1 1 1 0 0 1 9\r\n1 1 1 0 1 0\r\n1 1 1 0 1 1\r\n1 1 1 1 0 0\r\n1 1 1 1 0 1\r\n1 1 1 1 1 0\r\n1 1 1 1 1 1 0\r\n\r\nRankaian Dekoder BCD ke 7 Segmen dapat dilihat pada gambar 3.3\r\n\r\n14\r\n\r\nGambar 3. 3 rangkaian Dekoder BCD ke 7 Segmen\r\nDecoder adalah rangkaian logika yang menerima input-input biner dan\r\nmengaktifkan salah satu outputnya sesuai dengan input kode binernya. Atau sebuah\r\nrangkaian yang merubah dari bahasa yang dimengerti komputer menjadi bahasa\r\nyang tidak dimengerti oleh komputer. Secara sederhana decoder dapat dikatakan\r\nsebagai pemecah sandi atau kode. Dalam percobaan ini digunakan IC 7447 sebagai\r\ndekoder, pada IC ini terdapat 7 dan 7 keluaran namun hanya 6 input yang digunakan\r\nyaitu yang pertama ada 4 input untuk nilai biner yang akan dimasukkan, lalu ada\r\ninput jalur RBO (Riple blanking Output) yang berfungsi untuk menahan data output\r\nke penampil 7 segmen (disable output), jalur RBO ini akan aktif pada sat diberikan\r\nlogika LOW. Selanjutnya ada Jalur LT (Lamp Test) yang berfunsi untuk\r\nmenyalakan semua led pada penampil 7 segmen, jalur LT akan aktif pad saat\r\ndiberikan logika high pad jalur LT tersebut.\r\n\r\n15\r\n\r\nBAB IV PENUTUP\r\n\r\n4.1 Kesimpulan\r\nBerdasarkan pada praktikum yang telah dilakukan mengenai MSI (MEDIUM\r\nSCALE INTEGRATION) didapatkan kesimpulan sebagai berikut.\r\n1. Multiplexer adalah rangkaian logika kombinasional yang dirancang khusus\r\nuntuk mengalihkan salah satu dari beberapa jalur input (masukan) ke satu\r\njalur output (keluaran). Demultiplexer merupakan rangkaian yang berfungsi\r\nmenyalurkan data yang ada pada masukannya ke salah satu dari beberapa\r\nkeluarannya dengan bantuan sinyal pemilih atau sinyal kontrol (S).\r\n2. Multiplexer biasanya dimanfaatkan pada sistem komunikasi, jaringan\r\ntelepon, memori komputer, dan transmisi sistem komputer satelit.\r\nDemultiplexer biasanya dimanfaatkan pada sistem komunikasi, ALU\r\n(Arithmetic Logic Unit) dan Konverter Serial ke Paralel.\r\n3. Enkoder atau penyandi adalah rangkaian digital yang mempunyai fungsi\r\nyang berlawanan dengan rangkaian dekoder. Rangkaian encoder\r\nmempunyai sejumlah masukan yang pada suatu saat hanya ada satu\r\nmasukan yang boleh aktif. Keluaran enkoder ini adalah bit jamak terkode\r\nyang akan dibangkitkan tergantung pada masukan yang diaktifkan. Enkoder\r\nmerupakan rangkaian logika yang berfungsi mengubah data yang ada pada\r\ninputnya menjadi kode-kode biner pada outputnya.\r\n4. dalam programming encoding sangat luas sekali penggunaannya mulai dari\r\nterjemahan bahasa manusia ke bahasa mesin hingga penerapan private dan\r\npublic key pada sebuah platform aplikasi misalkan saja penggunaan encoder\r\nbase32 dan base64', 'ANGGA YULI LENGGONO', 'UNIT 1');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `plagiator_postmodel`
--
ALTER TABLE `plagiator_postmodel`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `plagiator_postmodel`
--
ALTER TABLE `plagiator_postmodel`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=624;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
